<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Symbol.RFID3.Host</name>
    </assembly>
    <members>
        <member name="T:Symbol.RFID3.ReaderManagement">
            <summary>
            This class encapsulates the Reader Management functionality such as reboot, 
            firmware update. Also, proprietary reader functions such as Antenna Mode (Bi-Static
            or Mono-static), Enable/Get Read Point status functionality can be performed using this class.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.#ctor">
            <summary>
            Reader Management constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.Dispose">
            <summary>
            Dispose Reader Management
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.Login(Symbol.RFID3.LoginInfo,Symbol.RFID3.READER_TYPE)">
            <summary>
            This method allows to login into the reader. 
            </summary>
            <param name="loginInfo">Login information is required for Fixed Reader. It can be null for Hand held readers</param>
            <param name="readerType">Specifies the reader type</param>
            <remarks>
            Fixed Reader (FX/XR)
            <para>
            The reader can be made to run in either secured mode(HTTPS) or normal(HTTP). User must be aware of this mode and use it in the secure mode parameter of this method. 
            If the value set wrongly, it will fail to login.
            </para>
            Hand held Reader (MC)
            <para>
            This method must be called to initialize the resources required for other reader management functions.
            </para>
            </remarks>
            <see cref="M:Symbol.RFID3.ReaderManagement.Logout"/>
            <exception cref="T:Symbol.RFID3.OperationFailureException">Operation Failure exception is thrown when the parameter is invalid </exception>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.Logout">
            <summary>
            Logs out from the reader
            <remarks> This call performs the logout and clean-up activity in the library </remarks>
            <see cref="M:Symbol.RFID3.ReaderManagement.Login(Symbol.RFID3.LoginInfo,Symbol.RFID3.READER_TYPE)"/>
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.SetCableLossCompensation(Symbol.RFID3.CableLossCompensation[])">
            <summary>
            Sets Cable Loss Compensentation Info
            </summary>
            <param name="cableLossCompensationInfo">Array of Cable Loss Compensation parameters for each antenna ID to be configured</param>
            <seealso cref="M:Symbol.RFID3.ReaderManagement.Login(Symbol.RFID3.LoginInfo,Symbol.RFID3.READER_TYPE)"/>
            <exception cref="T:Symbol.RFID3.OperationFailureException">Operation failure is thrown when it is not logged in</exception>
            <remarks>User can set different Cable Loss Compensation parameters for different antennas, 
            or can apply the same set of parameter for over all antennas. Setting the antenna ID as 0 in the 0th array element of CableLossCompensation
            will apply the same settings to all the antennas. </remarks>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.GetCableLossCompensation(System.UInt32)">
            <summary>
             Gets the Cable Loss Compensation Info for the given Antenna ID
            </summary>
            <param name="antennaID">Antenna ID</param>
            <returns>Cable Loss Compensation Information</returns>
            <seealso cref="M:Symbol.RFID3.ReaderManagement.Login(Symbol.RFID3.LoginInfo,Symbol.RFID3.READER_TYPE)"/>
            <exception cref="T:Symbol.RFID3.OperationFailureException">Operation failure is thrown when it is not logged in</exception>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.Restart">
            <summary>
            This method restarts or reboot the reader.
            <remarks>
            To restart the reader for any reasons, this method allows to restart the 
            reader. After calling this method, it is always necessary to call the logout method to 
            clean up the resources in the library. To reconnect back, call login method again.
            </remarks>
            <seealso cref="M:Symbol.RFID3.ReaderManagement.Login(Symbol.RFID3.LoginInfo,Symbol.RFID3.READER_TYPE)"/>
            <seealso cref="M:Symbol.RFID3.ReaderManagement.Logout"/>
            <exception cref="T:Symbol.RFID3.OperationFailureException">Operation Failure exception is thrown when it is not logged in </exception>
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.GetSystemInfo">
            <summary>
            Gets the Reader System information. 
            </summary>
            <remarks> 
            This function gets the system information related to the Reader like Reader Name, Firmware version, RAM available, 
            Flash available, Up time (how long the reader is running)
            </remarks>
            <seealso cref="M:Symbol.RFID3.ReaderManagement.Login(Symbol.RFID3.LoginInfo,Symbol.RFID3.READER_TYPE)"/>
            <exception cref="T:Symbol.RFID3.OperationFailureException">Operation failure is thrown when it is not logged in</exception>
            <returns>System Information</returns>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.GetHealthStatus(Symbol.RFID3.SERVICE_ID)">
            <summary>
            Gets Health status 
            </summary>
            <param name="serviceID">Specifies services ID such as RM or LLRP</param>
            <remarks> 
            This function gets the health status of the reader 
            </remarks>
            <seealso cref="M:Symbol.RFID3.ReaderManagement.Login(Symbol.RFID3.LoginInfo,Symbol.RFID3.READER_TYPE)"/>
            <exception cref="T:Symbol.RFID3.OperationFailureException">Operation failure is thrown when it is not logged in</exception>
            <returns>Health Status of the requested Service (up/down)</returns>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.SetUserLED(Symbol.RFID3.LedInfo)">
            <summary>
            Sets the User LED information
            </summary>
            <param name="ledInfo">LED information required for the Reader.</param>
            <remarks> 
            This function sets the LED information for the Reader
            </remarks>
            <seealso cref="M:Symbol.RFID3.ReaderManagement.Login(Symbol.RFID3.LoginInfo,Symbol.RFID3.READER_TYPE)"/>
            <exception cref="T:Symbol.RFID3.OperationFailureException">Operation failure is thrown when it is not logged in</exception>
            <returns></returns>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.GetReaderStatistics(System.UInt16)">
            <summary>
            Get Reader Statistics for the given Antenna ID
            </summary>
            <param name="antennaID">Antenna ID</param>
            <returns>Reader Statistics</returns>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.ClearReaderStatistics">
            <summary>
            Clears the reader statistics maintained in the reader
            </summary>
            <returns>Status Clear Reader Statistics Operation</returns>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.TurnOffRadioWhenIdle(System.Int32)">
            <summary>
            Turns of Radio When Idle
            </summary>
            <param name="Timeout">Radio will be turned off after specified Timeout(in seconds) if idle (no radio operation is performed), 0 = disables the Idle Mode</param>
        </member>
        <member name="M:Symbol.RFID3.ReaderManagement.GetRadioIdleTimeout(System.Int32@)">
            <summary>
            Gets the Radio Idle Timeout configured in the reader
            </summary>
            <param name="Timeout">Idle Time out in seconds</param>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.TraceLevel">
            <summary>
            Gets or sets the trace level
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.AntennaMode">
            <summary>
            Gets or sets the antenna mode to enumerations (Mono-Static or Bi-Static)
            <value>
            value sets the specified antenna mode in the reader. Changing the antenna mode take few seconds to perform the required operation
            </value>
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.IsLoggedIn">
            <summary>
            Gets the login status whether logged in or not. If logged in to the reader, it returns true, else false.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.Profile">
            <summary>
            This class contains the configuration file
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.RadioFirmwareUpdate">
            <summary>
            Gets the reader firmware update object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.SoftwareUpdate">
            <summary>
            Gets the software Update object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.RadioConfigUpdate">
            <summary>
            Gets the Radio Config Update object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.ReadPoint">
            <summary>
            Gets the read point object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.UserApp">
            <summary>
            Gets the UserAppDeployment object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.GPIDebounceTimeMilliseconds">
            <summary>
            Gets or sets the GPI Debounce Time
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.TimeZone">
            <summary>
            This class contains the time zone
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.LocalTime">
            <summary>
            Reader's Local time
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.USBOperationMode">
            <summary>
            USB operation mode of the Reader.
            <seealso cref="M:Symbol.RFID3.ReaderManagement.Login(Symbol.RFID3.LoginInfo,Symbol.RFID3.READER_TYPE)"/>
            <exception cref="T:Symbol.RFID3.OperationFailureException">Operation failure is thrown when it is not logged in</exception>
            <returns>USB operation mode used in reader</returns>
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.ReaderInfo">
            <summary>
            Reader information
            <seealso cref="M:Symbol.RFID3.ReaderManagement.Login(Symbol.RFID3.LoginInfo,Symbol.RFID3.READER_TYPE)"/>
            <exception cref="T:Symbol.RFID3.OperationFailureException">Operation failure is thrown when it is not logged in</exception>
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderManagement.LLRPConnection">
            <summary>
            This class contains the LLRP Connection required for LLRP Server/Client connectivity.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Profile">
            <summary>
            This class contains methods for uploading or downloading the configuration file
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Profile.ExportToReader(System.String,System.String,System.Boolean)">
            <summary>
            This function updates the reader configuration XML file.
            </summary>
            <param name="profileName">Profile to be uploaded, e.g. "Config.xml".</param>
            <param name="profilePath">Local Path Of the Profile. </param>
            <param name="activation">Determines whether the profile is to be activited or not.
             If activation is set TRUE, the profile will be uploaded and activated.
             If activation is set FALSE, the profile will be uploaded but not  activated.This value is ignored in XR. </param>
        </member>
        <member name="M:Symbol.RFID3.Profile.ImportFromReader(System.String,System.String)">
            <summary>
            This function downloads the readerHandle configuration XML file. 
            </summary>
            <param name="profileName">Profile Name to be downloaded, e.g. "Config.xml".</param>
            <param name="profilePath">Local Path of the Profile to be saved.</param>
        </member>
        <member name="M:Symbol.RFID3.Profile.GetList(System.Int32@)">
            <summary>
            Gets the list of profiles available in the reader.
            </summary>
            <param name="activeProfileIndex">Active Profile Index</param>
            <returns>List of profile-names present in reader.</returns>
        </member>
        <member name="M:Symbol.RFID3.Profile.SetActive(System.String)">
            <summary>
            This function set the active configuration XML file to be used by the reader. 
            </summary>
            <param name="profileName">Profile Name to be used, e.g. "Config.xml".</param>
        </member>
        <member name="M:Symbol.RFID3.Profile.Delete(System.String)">
            <summary>
            This function deletes the configuration XML file from the reader's profile list. 
            </summary>
            <param name="profileName">Profile Name to be deleted, e.g. "Config.xml".</param>
        </member>
        <member name="T:Symbol.RFID3.RadioFirmwareUpdate">
            <summary>
            This class helps to perform radio firmware update in the reader
            </summary>
        </member>
        <member name="M:Symbol.RFID3.RadioFirmwareUpdate.Update(System.String)">
            <summary>
            Updates the reader firmware
            </summary>
            <remarks> 
            This method updates the Radio firmware of the reader. 
            This is applicable for the MC Reader Type (Hand held reader) and not applicable for the Fixed Readers.
            </remarks>
            <param name="fileName">Specifies the file name with fully qualified path to update from</param>
            <exception cref="T:Symbol.RFID3.OperationFailureException">This exception is thrown when the parameter is invalid or not logged in </exception>
        </member>
        <member name="P:Symbol.RFID3.RadioFirmwareUpdate.UpdateStatus">
            <summary>
            Status of Firmware or Software Update
            </summary>
        </member>
        <member name="T:Symbol.RFID3.RadioConfigUpdate">
            <summary>
            This class helps to perform radio config OEM update in the reader
            </summary>
        </member>
        <member name="M:Symbol.RFID3.RadioConfigUpdate.Update(System.String)">
            <summary>
            Updates the reader radio config
            </summary>
            <remarks> 
            This method updates the Radio OEM config data of the reader. 
            This is applicable for the MC Reader Type (Hand held reader) and not applicable for the Fixed Readers.
            </remarks>
            <param name="fileName">Specifies the file name with fully qualified path to update from</param>
            <exception cref="T:Symbol.RFID3.OperationFailureException">This exception is thrown when the parameter is invalid or not logged in </exception>
        </member>
        <member name="P:Symbol.RFID3.RadioConfigUpdate.UpdateStatus">
            <summary>
            Status of Firmware or Software Update
            </summary>
        </member>
        <member name="T:Symbol.RFID3.SoftwareUpdate">
            <summary>
            This class helps to perform software updates in the reader
            </summary>
        </member>
        <member name="M:Symbol.RFID3.SoftwareUpdate.Update(Symbol.RFID3.SoftwareUpdateInfo)">
            <summary>
            Updates the software in the reader
            </summary>
            <remarks>
            This method updates the complete software update in the reader from the specified FTP location.
            This is only applicable for fixed reader (FX and XR). This functionality is not available for hand held reader (MC).
            </remarks>
            <param name="softwareUpdateInfo">This parameter contains the FTP Server information from which to update. 
            This parameter contains the host name (FTP Server with location), user name and password of the FTP Server. By default, the user name and password is "admin"</param>
            <exception cref="T:Symbol.RFID3.OperationFailureException">This exception is thrown when the parameter is invalid or not logged in </exception>
        </member>
        <member name="P:Symbol.RFID3.SoftwareUpdate.UpdateStatus">
            <summary>
            Gets the software update status object
            </summary>
        </member>
        <member name="T:Symbol.RFID3.LoginInfo">
            <summary>
            This class contains the login information of the reader
            </summary>
        </member>
        <member name="M:Symbol.RFID3.LoginInfo.#ctor">
            <summary>
            LoginInfo contructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.LoginInfo.#ctor(System.String,System.String,System.String,Symbol.RFID3.SECURE_MODE)">
            <summary>
            Overloaded contructor takes host name, user name, password, reader type and
            secured mode as parameter
            </summary>
            <param name="hostName">Host name of the reader IP address</param>
            <param name="userName">User Name to communicate with reader</param>
            <param name="password">Password to communicate with reader</param>
            <param name="secureMode">Secured mode specifies the mode of communication with the reader</param>
        </member>
        <member name="M:Symbol.RFID3.LoginInfo.#ctor(System.String,System.String,System.String,Symbol.RFID3.SECURE_MODE,System.Boolean)">
            <summary>
            Overloaded contructor takes host name, user name, password, reader type and
            secured mode as parameter
            </summary>
            <param name="hostName">Host name of the reader IP address</param>
            <param name="userName">User Name to communicate with reader</param>
            <param name="password">Password to communicate with reader</param>
            <param name="secureMode">Secured mode specifies the mode of communication with the reader</param>
            <param name="forceLogin">Force login this host</param>
        </member>
        <member name="P:Symbol.RFID3.LoginInfo.HostName">
            <summary>
            Gets or sets the host name of the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.LoginInfo.UserName">
            <summary>
            Gets or sets the user name used to connect with the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.LoginInfo.Password">
            <summary>
            Gets or sets the password used to connect with the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.LoginInfo.ForceLogin">
            <summary>
            Force login this host
            </summary>
        </member>
        <member name="P:Symbol.RFID3.LoginInfo.SecureMode">
            <summary>
            Gets or sets the mode of connection used to connect with the reader
            </summary>
        </member>
        <member name="T:Symbol.RFID3.SoftwareUpdateInfo">
            <summary>
            This class contains parameters required for the software update
            </summary>
        </member>
        <member name="M:Symbol.RFID3.SoftwareUpdateInfo.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.SoftwareUpdateInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Overloaded constructor takes the hostname, username and password
            </summary>
            <param name="hostName">Location from where update is to be done (FTP/FTPS/SCP).</param>
            <param name="userName">Valid user name</param>
            <param name="password">Valid password</param>
        </member>
        <member name="P:Symbol.RFID3.SoftwareUpdateInfo.HostName">
            <summary>
            Gets or sets the host name
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SoftwareUpdateInfo.UserName">
            <summary>
            Gets or sets the user name
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SoftwareUpdateInfo.Password">
            <summary>
            Gets or sets the password
            </summary>
        </member>
        <member name="T:Symbol.RFID3.UpdateStatus">
            <summary>
            Represents the software update status
            </summary>
        </member>
        <member name="P:Symbol.RFID3.UpdateStatus.UpdateInfo">
            <summary>
            Gets the partition name 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.UpdateStatus.Percentage">
            <summary>
            Gets the how much percentage completed
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ReadPoint">
            <summary>
            This class contains the functionality related to read point (Antenna). It
            exposes functionality like enable or get read point status
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ReadPoint.GetReadPointStatus(System.UInt16)">
            <summary>
            Gets the Read Point (Antenna) status as enabled or not
            </summary>
            <remarks>
            This method gets the read point status for the specified antenna ID as enabled or not.
            </remarks>
            <param name="antennaID">This must be valid antenna ID. 0 is not valid antenna ID </param>
            <returns>Read Point Status as enabled or disabled for the given antenna ID</returns>
            <exception cref="T:Symbol.RFID3.OperationFailureException">This exception is thrown when the parameter is invalid or not logged in </exception>
        </member>
        <member name="M:Symbol.RFID3.ReadPoint.SetReadPointStatus(System.UInt16,Symbol.RFID3.READPOINT_STATUS)">
            <summary>
            Sets the Read Point (Antenna) status to enable or disable state
            </summary>
            <remarks>
            To enable or disable the Antenna, this method can be invoked with antenna ID. This call will take few seconds to perform the required operation.
            </remarks>
            <param name="antennaID">This must be valid antenna ID. 0 is not valid antenna ID </param>
            <param name="readpointStatus">Contains the value to enable or disable Read Point (Antenna)</param>
            <exception cref="T:Symbol.RFID3.OperationFailureException">This exception is thrown when the parameter is invalid or not logged in </exception>
        </member>
        <member name="T:Symbol.RFID3.SystemInfo">
            <summary>
            This class contains the information related to the reader such as firmware version,
            FPGA version, reader name, reader location, UP Time, RAM and flash memort available
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.RadioFirmwareVersion">
            <summary>
            Gets the reader's Radio firmware version
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.FPGAVersion">
            <summary>
            Gets ths FPGA version
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.UpTime">
            <summary>
            Gets the reader uptime
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.ReaderName">
            <summary>
            Gets the reader name
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.ReaderLocation">
            <summary>
            Gets the reader location
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.SerialNumber">
            <summary>
            Gets the serial number
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.RAMAvailable">
            <summary>
            Gets the available RAM memory in the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.FlashAvailable">
            <summary>
            Gets the available flash memory in the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.RAMUsed">
            <summary>
            Gets the RAM used
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.RAMTotal">
            <summary>
            Gets the Total RAM
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.CPUUsageForUserProcesses">
            <summary>
            Gets the CPU utilization in % for user processes
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SystemInfo.CPUUsageForSystemProcesses">
            <summary>
            Gets the CPU utilization in % for system processes
            </summary>
        </member>
        <member name="T:Symbol.RFID3.LedInfo">
            <summary>
            This class contains the LED information of the reader such as LED Color, duration and blink flag
            </summary>
        </member>
        <member name="M:Symbol.RFID3.LedInfo.#ctor">
            <summary>
            LoginInfo contructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.LedInfo.#ctor(Symbol.RFID3.LED_COLOR,System.UInt32,System.Boolean)">
            <summary>
            Overloaded contructor takes LED Color, ducation and blink flag
            </summary>
            <param name="ledColor">Specifies LED Color</param>
            <param name="durationSeconds">Duration in Seconds. If zero, the LED blinks continuously</param>
            <param name="blink">Specifies LED to be blinked or not </param>
        </member>
        <member name="P:Symbol.RFID3.LedInfo.LEDColor">
            <summary>
            Gets or sets the LED Color of the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.LedInfo.DurationSeconds">
            <summary>
            Gets or sets the led light on duration of the reader.
            If zero, the LED blinks continuously
            </summary>
        </member>
        <member name="P:Symbol.RFID3.LedInfo.Blink">
            <summary>
            Gets or sets the Blink Flag of the reader
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TimeZone">
            <summary>
            This class contains methods for getting or setting the reader's time zone
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TimeZone.GetTimeZoneList(System.Int32@)">
            <summary>
            Gets the list of time zone available in the reader.
            </summary>
            <param name="activeTimeZoneIndex">Active Time Zone Index</param>
            <returns>List of time zone names present in reader.</returns>
        </member>
        <member name="M:Symbol.RFID3.TimeZone.SetActive(System.UInt16)">
            <summary>
            This function set the active time zone to be used by the reader. 
            </summary>
            <param name="timeZoneIndex">time zone index to be used".</param>
        </member>
        <member name="T:Symbol.RFID3.USBOperationMode">
            <summary>
            This class provides information of the reader's USB operation mode.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.USBOperationMode.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.USBOperationMode.#ctor(Symbol.RFID3.USB_OPERATION_MODE,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mode">Specifies the USB operation mode</param>
            <param name="allowLLRPConnectionOverride">When mode is NETWORK, it is possible for a different client connecting 
            via the USB interface
            to override an LLRP client is connected over the primary interface.</param>
        </member>
        <member name="P:Symbol.RFID3.USBOperationMode.Mode">
            <summary>
            Specifies the USB operation mode
            </summary>
        </member>
        <member name="P:Symbol.RFID3.USBOperationMode.AllowLLRPConnectionOverride">
            <summary>
            When mode is NETWORK, it is possible for a different client connecting via the USB interface
            to override an LLRP client is connected over the primary interface.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ReaderInfo">
            <summary>
            This class contains the reader's information which includes name, description, location and contact
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ReaderInfo.#ctor">
            <summary>
            ReaderInfo contructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ReaderInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Overloaded contructor takes reader's name, description, location and contact
            </summary>
            <param name="name">Name for the reader</param>
            <param name="description">Description for the reader</param>
            <param name="location">Location for the reader</param>
            /// <param name="contact">Contact Information for the reader</param>
        </member>
        <member name="P:Symbol.RFID3.ReaderInfo.Name">
            <summary>
            Gets or sets the reader's name
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderInfo.Description">
            <summary>
            Gets or sets the reader's description
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderInfo.Location">
            <summary>
            Gets or sets the reader's location
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderInfo.Contact">
            <summary>
            Gets or sets the reader's contact
            </summary>
        </member>
        <member name="T:Symbol.RFID3.CableLossCompensation">
            <summary>
            Holds Cable Loss Compensation related information
            </summary>
        </member>
        <member name="M:Symbol.RFID3.CableLossCompensation.#ctor(System.UInt16,System.Single,System.Single)">
            <summary>
            Cable Loss Compensation Constructor
            </summary>
            <param name="antennaID">Antenna ID</param>
            <param name="cableLengthInFeet">Cable Length in Feet</param>
            <param name="cableLossPer100Feet">Cable Loss per 100 Feet</param>
        </member>
        <member name="P:Symbol.RFID3.CableLossCompensation.AntennaID">
            <summary>
            Antenna ID 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.CableLossCompensation.CableLenghInFeet">
            <summary>
            Gets/Sets Cable Length in feet
            </summary>
        </member>
        <member name="P:Symbol.RFID3.CableLossCompensation.CableLossPer100Feet">
            <summary>
            Gets/Sets Cable loss per 100 feet
            </summary>
        </member>
        <member name="T:Symbol.RFID3.NXPStats">
            <summary>
            Represents the NXP Stats
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.ChangeEASSuccessCount">
            <summary>
            Get the number successful NXP Tag operation - Change EAS at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.ChangeEASFailureCount">
            <summary>
            Get the number of the failed NXP Tag operation - Change EAS at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.EASAlarmSuccessCount">
            <summary>
            Get the number successful NXP Tag operation - EAS Alarm at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.EASAlarmFailureCount">
            <summary>
            Get the number of the failed NXP Tag operation - EAS Alarm at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.ReadProtectSuccessCount">
            <summary>
            Get the number successful NXP Tag operation - Set Quiet at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.ReadProtectFailureCount">
            <summary>
            Get the number of the failed NXP Tag operation - Set Quiet at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.ResetReadProtectSuccessCount">
            <summary>
            Get the number successful tag memory block-writes at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.ResetReadProtectFailureCount">
            <summary>
            Get the number of the failed NXP Tag operation - Reset Quiet at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.CalibrateSuccessCount">
            <summary>
            Get the number successful NXP Tag operation - Calibrate at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.CalibrateFailureCount">
            <summary>
            Get the number of the failed NXP Tag operation - Calibrate at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.ChangeConfigSuccessCount">
            <summary>
            The number of successes with  NXP-G2IL's ChangeConfig Operation
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXPStats.ChangeConfigFailureCount">
            <summary>
            The number of failures with  NXP-G2IL's ChangeConfig Operation
            </summary>
        </member>
        <member name="T:Symbol.RFID3.FujitsuStats">
            <summary>
            Represents the Fujitsu Stats
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.ChangeWordLockSuccessCount">
            <summary>
            The number successful Fujitsu 64K Tag operations - ChangeWordLock  at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.ChangeWordLockFailureCount">
            <summary>
            The number of the failed Fujitsu 64K Tag operations -  ChangeWordLock  at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.ChangeBlockLockSuccessCount">
            <summary>
            The number successful Fujitsu 64K Tag operations - ChangeBlockLock at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.ChangeBlockLockFailureCount">
            <summary>
            The number of the failed Fujitsu 64K Tag operations- ChangeBlockLock at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.ReadBlockLockSuccessCount">
            <summary>
            The number successful Fujitsu 64K Tag operations - ReadBlockLock   at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.ReadBlockLockFailureCount">
            <summary>
            The number of the failed Fujitsu 64K Tag operations-  ReadBlockLock  at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.ChangeBlockOrAreaGroupPasswordSuccessCount">
            <summary>
            The number successful Fujitsu 64K Tag operations- ChangeBlockOrAreaGroupPassword  at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.ChangeBlockOrAreaGroupPasswordFailureCount">
            <summary>
            The number of the failed Fujitsu 64K Tag operations - ChangeBlockOrAreaGroupPassword  at the AntennaReadPoint.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.BurstWriteSuccessCount">
            <summary>
            The number successful Fujitsu 64K Tag operations   -  Burst Write  at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.BurstWriteFailureCount">
            <summary>
            The number successful Fujitsu 64K Tag operations   -  Burst Write  at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.BurstEraseSuccessCount">
            <summary>
            The number successful Fujitsu 64K Tag operations  -  Burst Erase  at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.BurstEraseFailureCount">
            <summary>
            The number of the failed Fujitsu 64K Tag operation - Burst Erase at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.AreaReadLockSuccessCount">
            <summary>
            The number successful Fujitsu 8K Tag operations - AreaReadLock  at the AntennaReadPoint.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.AreaReadLockFailureCount">
            <summary>
            The number of the failed Fujitsu 8K Tag operation - AreaReadLock  at the AntennaReadPoint.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.AreaWriteLockSuccessCount">
            <summary>
            The number successful Fujitsu 8K Tag operations -  AreaWriteLock  at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.AreaWriteLockFailureCount">
            <summary>
            The number of the failed Fujitsu 8K Tag operations - AreaWriteLock  at the AntennaReadPoint.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.AreaWriteLockWOPasswordSuccessCount">
            <summary>
            The number of successful Fujitsu 8K Tag operations - AreaWriteLockWOPassword  at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuStats.AreaWriteLockWOPasswordFailureCount">
            <summary>
            The number of the failed Fujitsu 8K Tag operations - AreaWriteLockWOPassword at the AntennaReadPoint
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ImpinjStats">
            <summary>
            Represents the Impinj Stats
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ImpinjStats.QTSuccessCount">
            <summary>
            The number of the QT-operations that succeeded
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ImpinjStats.QTFailureCount">
            <summary>
            The number of failed QT-operations
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ReaderStatistics">
            <summary>
            This class represents the Reader statistics
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.IdentifiedSuccessCount">
            <summary>
            Get the number of successful tags that have been identified across an AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.IdentifiedFailureCount">
            <summary>
            Get the number of number of the failed tag identification attempts at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.ReadSuccessCount">
            <summary>
            Get the number of successful number of tag memory reads at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.ReadFailureCount">
            <summary>
            Get the number of the failed tag memory reads at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.WriteSuccessCount">
            <summary>
            Get the number of successful tag memory writes at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.WriteFailureCount">
            <summary>
            Get The number of the failed tag memory writes at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.KillSuccessCount">
            <summary>
            Get the number of tags successfully killed at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.KillFailureCount">
            <summary>
            Get the number of the failed tag kills at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.LockSuccessCount">
            <summary>
            Get the number of tags successfully locked at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.LockFailureCount">
            <summary>
            Get the number of the failed tag locked at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.BlockWriteSuccessCount">
            <summary>
            Get the number successful tag memory block-writes  at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.BlockWriteFailureCount">
            <summary>
            Get the number of the failed tag block-writes at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.BlockEraseSuccessCount">
            <summary>
            Get the number of tags successfully block-erased at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.BlockEraseFailureCount">
            <summary>
            Get the number of the failed tag block-erased at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.BlockPermalockSuccessCount">
            <summary>
            Get the number of tags successfully block-permalocked at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.BlockPermalockFailureCount">
            <summary>
            Get the number of the failed tag block-permalocked at the AntennaReadPoint
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.NXP">
            <summary>
            Get the NXP Statistics from the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.Fujitsu">
            <summary>
            Get the Fujitsu statistics from the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderStatistics.Impinj">
            <summary>
            Get the Impinj Statistics from the reader
            </summary>
        </member>
        <member name="T:Symbol.RFID3.LLRPConnectionConfig">
            <summary>
            This class contains the LLRP Connection Configuration required for Server/Client connectivity
            </summary>
        </member>
        <member name="M:Symbol.RFID3.LLRPConnectionConfig.#ctor">
            <summary>
            LLRPConnectionConfig contructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.LLRPConnectionConfig.#ctor(System.Boolean,System.UInt32,System.String)">
            <summary>
            Overloaded contructor takes server port number, isClient boolean and host server IP as parameter
            </summary>
            <param name="isCient">Configure LLRP as a client</param>
            <param name="port">LLRP Server's port number</param>
            <param name="hostServerIP">IP address of the LLRP server the reader needs to connect to while in client mode</param>       
        </member>
        <member name="P:Symbol.RFID3.LLRPConnectionConfig.SecureModeConfig">
            <summary>
            Gets LLRP Secure Connection Info parameters
            </summary>
        </member>
        <member name="P:Symbol.RFID3.LLRPConnectionConfig.Port">
            <summary>
            Gets or sets the LLRP Server's port number
            </summary>
        </member>
        <member name="P:Symbol.RFID3.LLRPConnectionConfig.IsClient">
            <summary>
            Gets or sets the boolean if configure LLRP as a client
            </summary>
        </member>
        <member name="P:Symbol.RFID3.LLRPConnectionConfig.HostServerIP">
            <summary>
            Gets or sets the password used to connect with the reader
            </summary>
        </member>
        <member name="T:Symbol.RFID3.SecureModeConfig">
            <summary>
            This class contains the LLRP Secure Connection Info
            </summary>
        </member>
        <member name="M:Symbol.RFID3.SecureModeConfig.#ctor">
            <summary>
            LLRPConnectionConfig contructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SecureModeConfig.SecureMode">
            <summary>
            Secure Mode 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SecureModeConfig.ValidatePeerCert">
            <summary>
            Validate peer certificate 
            </summary>
        </member>
        <member name="T:Symbol.RFID3.LLRPConnection">
            <summary>
            This class contains methods for set/get the LLRP connection configuration
            </summary>
        </member>
        <member name="M:Symbol.RFID3.LLRPConnection.InitiateFromReader">
            <summary>
            This function initiates a LLRP connection to a reader
            </summary>
        </member>
        <member name="M:Symbol.RFID3.LLRPConnection.DisconnectFromReader">
            <summary>
            This function initiates a LLRP disconnection from a reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.LLRPConnection.Config">
            <summary>
            LLRP Connection Configuration of the reader       
            </summary>
        </member>
        <member name="T:Symbol.RFID3.UserAppInfo">
            <summary>
            User App information
            </summary>
        </member>
        <member name="P:Symbol.RFID3.UserAppInfo.AppName">
            <summary>
            Gets Application Name
            </summary>
        </member>
        <member name="P:Symbol.RFID3.UserAppInfo.MetaData">
            <summary>
            Gets Application Meta Data
            </summary>
        </member>
        <member name="P:Symbol.RFID3.UserAppInfo.RunStatus">
            <summary>
            Gets Application Run Status
            </summary>
        </member>
        <member name="P:Symbol.RFID3.UserAppInfo.AutoStart">
            <summary>
            Gets Auto Start Status
            </summary>
        </member>
        <member name="T:Symbol.RFID3.UserApp">
            <summary>
            This class contains methods for user application deployment in the reader
            </summary>
        </member>
        <member name="M:Symbol.RFID3.UserApp.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.UserApp.Install(System.String)">
            <summary>
            Installs User Application in the reader
            </summary>
            <param name="pathToPackage">Path where the application package (.deb) is located</param>
        </member>
        <member name="M:Symbol.RFID3.UserApp.Uninstall(System.String)">
            <summary>
            Uninstalls a specified User Application from the reader
            </summary>
            <param name="appName">Name of the application to be uninstalled</param>
        </member>
        <member name="M:Symbol.RFID3.UserApp.Start(System.String)">
            <summary>
            Starts a specified User Application
            </summary>
            <param name="appName">Name of the application to be started</param>
        </member>
        <member name="M:Symbol.RFID3.UserApp.Stop(System.String)">
            <summary>
            Stops a specified User Application
            </summary>
            <param name="appName">Name of the application to be stopped</param>
        </member>
        <member name="M:Symbol.RFID3.UserApp.AutoStart(System.String,System.Boolean)">
            <summary>
            This function enables autostart of a specified user application
            </summary>
            <param name="appName">Name of the application</param>
            <param name="autoStart">A Boolean specifying whether to enable/disable autostart</param>
        </member>
        <member name="M:Symbol.RFID3.UserApp.GetRunStatus(System.String,System.Boolean@)">
            <summary>
            This function gets the current run status of a user application
            </summary>
            <param name="appName">Name of the application whose status is to be fetched.</param>
            <param name="runStatus">run status of the application</param>
        </member>
        <member name="M:Symbol.RFID3.UserApp.List">
            <summary>
            This function gets a list of all installed user applications
            </summary>
            <returns>An array of UserAppInfo objects. Returns null if no apps are installed.</returns>
        </member>
        <member name="T:Symbol.RFID3.SECURE_MODE">
            <summary>
            Connectivity option
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SECURE_MODE.HTTP">
            <summary>
            Unsecured Mode (Plain Text)
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SECURE_MODE.HTTPS">
            <summary>
            Secured Mode
            </summary>
        </member>
        <member name="T:Symbol.RFID3.READPOINT_STATUS">
            <summary>
            Read point status
            </summary>
        </member>
        <member name="F:Symbol.RFID3.READPOINT_STATUS.DISABLE">
            <summary>
            Disable RadioPoint
            </summary>
        </member>
        <member name="F:Symbol.RFID3.READPOINT_STATUS.ENABLE">
            <summary>
            Enable RadioPoint
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_ADDPREFILTER_FAIL">
            <summary>
              Looks up a localized string similar to Failure in adding pre-filter.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_ADDTOSEQUENCE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in adding operation to sequence.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_BLOCKERASE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in erasing block from tag.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_BLOCKWRITE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in writing block to tag.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_CONNECT_FAIL">
            <summary>
              Looks up a localized string similar to Failure in connecting to the reader.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_DEINIT_OPERATIONSEQUENCE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in de-initializing the operation sequence.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_DELETEALLFROMSEQUENCE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in deleting all operations from sequence.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_DELETEFROMSEQUENCE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in deleting operation from sequence.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_DELETEPREFILTER_FAIL">
            <summary>
              Looks up a localized string similar to Failure in deleting pre-filter.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_DISCONNECT_FAIL">
            <summary>
              Looks up a localized string similar to Failure in disconnecting from the reader.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_DISPOSEDOBJECTACCESS">
            <summary>
              Looks up a localized string similar to Trying to access a disposed object.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_GETCONFIG_FAIL">
            <summary>
              Looks up a localized string similar to Failure in getting configuration.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_GETREADERCAPS_FAIL">
            <summary>
              Looks up a localized string similar to Failure in getting reader capabilities.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_GETVERSION_FAIL">
            <summary>
              Looks up a localized string similar to Failure in getting version information.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_INDEXOUTOFRANGE">
            <summary>
              Looks up a localized string similar to Index specified is out of the range.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_INIT_OPERATIONSEQUENCE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in initializing the operation sequence.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_KILL_FAIL">
            <summary>
              Looks up a localized string similar to Failure in killing tag.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_LOCK_FAIL">
            <summary>
              Looks up a localized string similar to Failure in locking tag.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_PARAM_LENGTH_ZERO">
            <summary>
              Looks up a localized string similar to Parameter Length is zero.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_PARAMETER_EMPTY">
            <summary>
              Looks up a localized string similar to Empty Parameter.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_PARAMETER_NULL">
            <summary>
              Looks up a localized string similar to Null Parameter.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_PARAMS_OUT_OF_RANGE">
            <summary>
              Looks up a localized string similar to Failure in using parameter which is out of range.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_PERFORMINVENTORY_FAIL">
            <summary>
              Looks up a localized string similar to Failure in performing inventory.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_PERFORMSEQUENCE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in performing operation sequence.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READ_FAIL">
            <summary>
              Looks up a localized string similar to Failure in reading tag.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READER_NOTCONNECTED">
            <summary>
              Looks up a localized string similar to Reader is not connected.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_DOWNLOADCONFIGFILE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in downloading config file.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_GETANTENNAMODE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in getting antenna mode.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_GETRADIOPOWERSTATE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in getting radio power state.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_GETREADPOINTSTATUS_FAIL">
            <summary>
              Looks up a localized string similar to Failure in getting readpoint status.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_GETSOFTWAREUPDATESTATUS_FAIL">
            <summary>
              Looks up a localized string similar to Failure in getting software update status.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_GETSYSTEMINFO_FAIL">
            <summary>
              Looks up a localized string similar to Failure in getting system info.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_LOGIN_FAIL">
            <summary>
              Looks up a localized string similar to Failure in logging in to reader.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_LOGOUT_FAIL">
            <summary>
              Looks up a localized string similar to Failure in logging out of the reader.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_NOTLOGGEDIN">
            <summary>
              Looks up a localized string similar to Not logged in to reader.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_RESTART_FAIL">
            <summary>
              Looks up a localized string similar to Failure in restarting the reader.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_SETANTENNAMODE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in setting antenna mode.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_SETRADIOPOWERSTATE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in setting radio power state.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_SETREADPOINTSTATUS_FAIL">
            <summary>
              Looks up a localized string similar to Failure in setting readpoint status.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_UPDATERADIOFIRMWARE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in updating radio firmware.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_UPDATESOFTWARE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in updating software.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_READERMGMT_UPLOADCONFIGFILE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in uploading config file.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_REGISTER_FAIL">
            <summary>
              Looks up a localized string similar to Failure in registering event notification.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_RESET_TO_FACTORY_DEFAULTS_FAIL">
            <summary>
              Looks up a localized string similar to Failure in resetting to factory defaults.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_SETCONFIG_FAIL">
            <summary>
              Looks up a localized string similar to Failure in setting configuration.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_STOPINVENTORY_FAIL">
            <summary>
              Looks up a localized string similar to Failure in stopping inventory.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_STOPSEQUENCE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in stopping operation sequence.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_UNREGISTER_FAIL">
            <summary>
              Looks up a localized string similar to Failure in deregistering event notification.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Resource.ERROR_WRITE_FAIL">
            <summary>
              Looks up a localized string similar to Failure in writing to tag.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.VersionInfo">
            <summary>
            This class contains version information for the current API library
            </summary>
        </member>
        <member name="P:Symbol.RFID3.VersionInfo.Version">
            <summary>
            Provides RFIDAPI3 Library version
            </summary>
        </member>
        <member name="T:Symbol.RFID3.RFIDReader">
            <summary>
            Provides the RFIDReader object.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.RFIDReader.#ctor">
            <summary>
             The constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.RFIDReader.#ctor(System.String,System.UInt32,System.UInt32)">
            <summary>
            Constructor takes hostname or IP address, port and timeout as parameter
            </summary>
            <param name="hostName">host name or IP address</param>
            <param name="port">port number e.g. 5084</param>
            <param name="timeoutMilliseconds">timeout for the response from there reader specified in miliseconds</param>
        </member>
        <member name="M:Symbol.RFID3.RFIDReader.Finalize">
            <summary>
             The constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.RFIDReader.Dispose">
            <summary>
            Disposes the RFIDReader
            </summary>
        </member>
        <member name="M:Symbol.RFID3.RFIDReader.Connect">
            <summary>
            Connects to the reader
            </summary>
        </member>
        <member name="M:Symbol.RFID3.RFIDReader.AcceptConnection(System.Net.Sockets.Socket)">
            <summary>
            This method accepts the socket to the Reader-Initiated Connection and initializes the RFIDReaderObject just like how Connect() method Initializes
            </summary>
            <param name="readerSocket">Socket Object to accept the connection</param>
        </member>
        <member name="M:Symbol.RFID3.RFIDReader.Reconnect">
            <summary>
            Reconnects to the reader, if the connection is lost.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.RFIDReader.Disconnect">
            <summary>
            Disconnect from the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFIDReader.SecureConnectionInfo">
            <summary>
            Gets or sets the secure connection information which would be used while making
            an llrp connection.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFIDReader.Port">
            <summary>
            Gets or sets the port number which is used for establishing connection
            with the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFIDReader.TimeoutMilliseconds">
            <summary>
            Gets or set the timeout of the reader connection
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFIDReader.HostName">
            <summary>
            Gets or sets the host name or IP Address of the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFIDReader.IsConnected">
            <summary>
            Returns the current reader connection status
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFIDReader.Config">
            <summary>
            Gets the configuration object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFIDReader.Actions">
            <summary>
            Gets the Actions object. This is the core object which exposes the 
            core reader operations such as inventory and access operations of the 
            reader.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFIDReader.Events">
            <summary>
            Gets the event object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFIDReader.ReaderCapabilities">
            <summary>
            Gets reader capabilities object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFIDReader.VersionInfo">
            <summary>
            Gets the RFID class library version information 
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ReaderModuleVersion">
            <summary>
            This class represents the Name and Version of a module of the Reader.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderModuleVersion.ModuleName">
            <summary>
            Gets Module name the version of which is being reported in UTF-8 String
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderModuleVersion.ModuleVersion">
            <summary>
            Gets the version of the module in UTF-8 String
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ReaderCapabilities">
            <summary>
            This class represents the Reader Capabilities 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ReaderCapabilities.RFModes">
            <summary>
            RF Modes supported by the reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ReaderCapabilities.FrequencyHopInfo">
            <summary>
            Frequency Hop Information
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ReaderCapabilities.ReaderID">
            <summary>
            Reader Id
             </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.FirwareVersion">
            <summary>
            Gets reader firmware version in UTF-8 String
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.ModelName">
            <summary>
            Gets the model name of the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.NumAntennaSupported">
            <summary>
            Gets the maxumum number of antennas supported in the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.NumGPIPorts">
            <summary>
            Gets the number of GPI(General Purpose Input) supported in the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.NumGPOPorts">
            <summary>
            Gets the number of GPO(General Purpose Output) supported in the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsUTCClockSupported">
            <summary>
            Gets the status of UTC Clock supported in the reader. If set to true, the reader reports 
            time based on UTC timestamps in its report, else, the reader reports time based on Uptime.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.ReceiveSensitivityValues">
            <summary>
            Returns the Receiver Sensity Values. Ths value is in dB relative to the maximum sensivity.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.Versions">
            <summary>
            List of versions of various Reader Modules.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.DutyCycleValues">
            <summary>
            List of DutyCycles supported by the reader.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsBlockEraseSupported">
            <summary>
            Gets the status of Block erase support.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsBlockWriteSupported">
            <summary>
            Gets the status of Block write support.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsRecommissionSupported">
            <summary>
            Gets the status of Recommision support.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsBlockPermalockSupported">
            <summary>
            Gets the status of Blockpermalock support.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsWriteUMISupported">
            <summary>
            Gets the status of WriteUMI support.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsRadioPowerControlSupported">
            <summary>
            Gets the status of Radio Power Control support.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsTagLocationingSupported">
            <summary>
            Gets the status of Tag Locationing feature support
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsNXPCommandSupported">
            <summary>
             Gets the information on NXP  Commands support.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsFujitsuCommandSupported">
            <summary>
            Gets the information on Fujitsu Commands support
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsImpinjCommandSupported">
            <summary>
            Gets the information on Impinj Commands support
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsPeriodicTagReportsSupported">
            <summary>
            Gets the information on Periodic Tag Report support
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsTagPhaseReportingSupported">
            <summary>
            Gets the information on Tag Phase Reporting support
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsZoneSuppported">
            <summary>
            Gets the information on Zone support
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsAntennaRFConfigSupported">
            <summary>
            Gets the information on Antenna RF Config support
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsTagInventoryStateAwareSingulationSupported">
            <summary>
            Gets the status of Tag Inventory State aware singulation supported or not
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.MaxNumOperationsInAccessSequence">
            <summary>
            Gets the maximum number of operations supported in Access sequence. This is the maximum number
            of AccessSpec that can be configed at the reader.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.MaxNumPreFilters">
            <summary>
            Gets the maximum number of PreFilter supported
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.CountryCode">
            <summary>
            Gets the country code. This carries the numeric code of the country as specified in ISO 3166.
            0 means unspecified.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.CommunicationStandard">
            <summary>
            Gets the communication standard. This carries the enumerations of the communication standards.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.TransmitPowerLevelValues">
            <summary>
            Returns the Transmit power level values. Transmit power values expressed in dBm*100 to allow 
            fractional dBmm representation.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsHoppingEnabled">
            <summary>
            Returns Hopping is enabled or not. This shows the requirements of frequency hopping regulatory. 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.FixedFreqValues">
            <summary>
            Returns the fixed frequency values. This is transmitted only when IsHoppingEnabled is false
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsTagEventReportingSupported">
            <summary>
            Gets whether Tag Event Reporting supported
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.IsRssiFilterSupported">
            <summary>
            Gets whether RSSI Filter supported
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ReaderCapabilities.ReaderIdentification">
            <summary>
            Represents Reader Identification. This carries an identification parameter that is unique within
            the local administration domain. The identifier could be the Reader MAC address or EPC. The IDType
            defines the type of the identification value contained in this Parameter.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.ReaderIdentification.ID">
            <summary>
            Reader's Unique Identification
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReaderCapabilities.ReaderIdentification.Type">
            <summary>
            Type of Reader ID : MAC-Address or EPC-ID as 
            supported by the reader.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.PerAntennaReceiveSensitivityRange">
            <summary>
            For future use
            </summary>
        </member>
        <member name="T:Symbol.RFID3.RFModes">
            <summary>
            RF Modes supported by the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModes.Length">
            <summary>
            Gets the number of RF mode table 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModes.Item(System.Int32)">
            <summary>
            Gets the RF Mode table for the given index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Symbol.RFID3.RFModeTable">
            <summary>
            Represents the RF Mode table that the reader is capable of operating.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTable.ProtocolID">
            <summary>
            Gets the protocol Identifier. This is the identifier of the air protoocol.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTable.Length">
            <summary>
            Gets the number of RF mode table
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTable.Item(System.Int32)">
            <summary>
            Returns the RF Mode table entry for the specified index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Symbol.RFID3.RFModeTableEntry">
            <summary>
            This class represents the RF Mode table entry
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTableEntry.ModeIdentifier">
            <summary>
            Gets the mode identifier. This is a reader defined identifier that the client may
            use to set the Gen2 operating parameters
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTableEntry.BdrValue">
            <summary>
            Gets the BDR value, the Backscatter data rate in bps 
            Possible Values: 40000 – 640000 bps
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTableEntry.Modulation">
            <summary>
            Gets the modulation, the M value
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTableEntry.DivideRatio">
            <summary>
            Gets the divide ratio
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTableEntry.ForwardLinkModulationType">
            <summary>
            Gets the Forward Link Modulation type
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTableEntry.PieValue">
            <summary>
            Gets the Pie value. One thousand times the ratio of data-0 symbol length and data-1 
            symbol length in pulse-interval encoding. The C1G2 spec specifies the ratio 
            of 1.5 - 2.0
            Possible Values: 1500-2000
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTableEntry.MinTariValue">
            <summary>
            Gets the minimum TARI value. Minimum Tari time in nanoseconds
            Possible Values: 6250-25000
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTableEntry.MaxTariValue">
            <summary>
            Gets the maximum TARI value. Maximum Tari time in nanoseconds.
            Possible Values: 6250-25000
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTableEntry.StepTariValue">
            <summary>
            Gets the Step Tari value in nanoseconds.
            Possible Values: 0 - 18750 nsec
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTableEntry.SpectralMaskIndicator">
            <summary>
            Gets the Spectral Mask Indicator
            Possible Values: 0 - 3 
            0  Unknown
            1  SI – Meets [C1G2] Single-Interrogator Mode Mask
            2  MI – Meets [C1G2] Multi-Interrogator Mode Mask
            3  DI - Meets [C1G2] Dense-Interrogator Mode Mask
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RFModeTableEntry.EPCHAGTCConformance">
            <summary>
            Gets EPC HAG T&amp;C Conformance
            Indicates whether reader has received EPC Global Conformance for this mode as
            specified in EPCGlobal Testing and Conformance
            </summary>
        </member>
        <member name="T:Symbol.RFID3.FrequencyHopInfo">
            <summary>
            Frequency Hop Information. This is transmitted only when IsHoppingEnabled is true.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FrequencyHopInfo.Length">
            <summary>
            Gets the numder of Hop tables
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FrequencyHopInfo.Item(System.Int32)">
            <summary>
            Returns the Hop table for the given hop table index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Symbol.RFID3.FrequencyHopTable">
            <summary>
            This class contains Frequency Hop table
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FrequencyHopTable.HopTableID">
            <summary>
            Gets the Hop table ID
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FrequencyHopTable.FrequencyHopValues">
            <summary>
            Gets the Hop Frequencies
            </summary>
        </member>
        <member name="T:Symbol.RFID3.OperationFailureException">
            <summary>
            OperationFailureException is thrown when a failure occurs in the 
            class library. This failure usually is one that stops the proper
            functioning of the class library.
            </summary>
            <remarks>
            Derived off of the System.Exception class, this exception provides
            a results enum to be associated with the exception, via the Result property.
            </remarks>
        </member>
        <member name="M:Symbol.RFID3.OperationFailureException.ToString">
            <summary>
            Returns the API3 specific error information along with Standard Exception trace
            </summary>
            <returns>API specific status information</returns>
        </member>
        <member name="P:Symbol.RFID3.OperationFailureException.Result">
            <summary>
            The RFIDResults associated with the exception.
            </summary>
            <value>
            An integer result that contains information about what caused the
            exception.
            </value>
        </member>
        <member name="P:Symbol.RFID3.OperationFailureException.VendorMessage">
            <summary>
            The vendor message associated with the exception.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.OperationFailureException.StatusDescription">
            <summary>
            The status description associated with the exception.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.OperationFailureException.TimeStamp">
            <summary>
            The timeStamp associated with the exception.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.InvalidUsageException">
            <summary>
            InvalidUsageException is thrown when an invalid usage is detected by the 
            class library. 
            </summary>
            <remarks>
            Derived off of the System.Exception class, this exception provides
            an informaion enum to be associated with the exception, via the Info property.
            </remarks>
        </member>
        <member name="M:Symbol.RFID3.InvalidUsageException.#ctor(System.String,System.String)">
            <summary>
            InvalidUsageException constructor with settable string and 
            results enum.
            </summary>
            <param name="sMessage">A string the contains information about
            the exception.</param>
            <param name="sErrorString">Error string from string table</param>
        </member>
        <member name="M:Symbol.RFID3.InvalidUsageException.ToString">
            <summary>
            Returns the API3 specific error information along with Standard Exception trace
            </summary>
            <returns>API specific status information</returns>
        </member>
        <member name="P:Symbol.RFID3.InvalidUsageException.Info">
            <summary>
            The RFIDResults associated with the exception.
            </summary>
            <value>
            An integer result that contains information about what caused the
            exception.
            </value>
        </member>
        <member name="P:Symbol.RFID3.InvalidUsageException.VendorMessage">
            <summary>
            The vendor message associated with the exception.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.InvalidUsageException.TimeStamp">
            <summary>
            The timeStamp associated with the exception.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.SecureConnectionInfo">
            <summary>
            This class contains additional information for establishing secure connection.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SecureConnectionInfo.m_bValidatePeerCert" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SecureConnectionInfo.m_strClientCertBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SecureConnectionInfo.m_strClientKeyBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SecureConnectionInfo.m_strPhraseBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SecureConnectionInfo.m_strRootCertBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SecureConnectionInfo.m_ulConnStatus" -->
        <!-- Badly formed XML comment ignored for member "M:Symbol.RFID3.SecureConnectionInfo.#ctor" -->
        <member name="P:Symbol.RFID3.SecureConnectionInfo.SecureMode">
            <summary>
            Secure Mode 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SecureConnectionInfo.ValidatePeerCert">
            <summary>
            Validate peer certificate 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SecureConnectionInfo.ClientCertBuff">
            <summary>
            LLRP client's certificate data.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SecureConnectionInfo.ClientKeyBuff">
            <summary>
            Client's private key data.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SecureConnectionInfo.PhraseBuff">
            <summary>
            Private Key password.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SecureConnectionInfo.RootCertBuff">
            <summary>
            Root certificate data.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SecureConnectionInfo.ConnStatus">
            <summary>
            Status of connection.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.RADIO_POWER_STATE">
            <summary>
            Radio power state
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RADIO_POWER_STATE.OFF">
            <summary>
            Radio Power Off
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RADIO_POWER_STATE.ON">
            <summary>
            Radio Power On
            </summary>
        </member>
        <member name="T:Symbol.RFID3.AntennaConfig">
            <summary>
            The Class which holds all configuration of the Given Antenna
            </summary>
        </member>
        <member name="M:Symbol.RFID3.AntennaConfig.#ctor(System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="antennaId">The Antenna ID of the Configuration</param>
        </member>
        <member name="M:Symbol.RFID3.AntennaConfig.#ctor(System.UInt16,Symbol.RFID3.PreFilters,Symbol.RFID3.Antennas.AntennaRfConfig,Symbol.RFID3.Antennas.SingulationControl)">
            <summary>
            Constructor
            </summary>
            <param name="antennaId">The Antenna ID of the Configuration</param>
            <param name="preFilters">List of Prefilters to be applied for the Antenna</param>
            <param name="antennaRfConfig">RF parametres for the Antenna</param>
            <param name="singulationControl">Configuration for Session, Ta Population</param>
        </member>
        <member name="P:Symbol.RFID3.AntennaConfig.AntennaId">
            <summary>
            The Antenna ID to which the configuration belongs to
            </summary>
        </member>
        <member name="P:Symbol.RFID3.AntennaConfig.PrefilterList">
            <summary>
             List of Prefilters to be applied for the Antenna
            </summary>
        </member>
        <member name="P:Symbol.RFID3.AntennaConfig.AntennaRfConfig">
            <summary>
            Holds the RF related configuration of the Antenna
            </summary>
        </member>
        <member name="P:Symbol.RFID3.AntennaConfig.SingulationControl">
            <summary>
            Configuration related to singulation control
            parameters session, Tag Population and the tag transit time
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Config">
            <summary>
            This class allows to perform reader configuration
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Config.SetTagStorageSettings(Symbol.RFID3.TagStorageSettings)">
            <summary>
            This method allows configuring the maximum tag-storage capacity and 
            storage to be allocated in the Tag Data object for the memory bank data and Tag ID (EPC).
            Also, it allows to set the number of tags to be queued in side the Library.
            </summary>
            <param name="tagStorageSettings">Settings like MaxTagCount, MaxMemoryBankSize, MaxEPCID, Selection of Tag Data Fields</param>
            <exception cref="T:Symbol.RFID3.OperationFailureException">This exception is thown when the parameters are invalid</exception>
            <remarks>
            <para>
            The application can use this method to customize the tag data size(EPC and Memory Bank) based on the requirements. Also, this method
            allows to configure the queue size of the Library maintained. 
            </para>
            <para>
            Tags reported from the reader as part of inventory or read-access operation will be queued internally in the library till it is called using GetReadTag.
            When the number of tags queued in the library exceeds the max tag count, the event enabled for BUFFER_FULL_WARNING_EVENT will be signalled. This event
            also be signalled when reader internal buffers are full. 
            </para>
            <para>
            It is recommended to use the default settings unless it is explicitly required for advanced user to optimize the performance or necessary to adjust the EPC or memory bank size
            </para> 
            </remarks>
        </member>
        <member name="M:Symbol.RFID3.Config.GetTagStorageSettings">
            <summary>
            Get TagStorageSettings.
            </summary>
            <returns>TagStorageSettings</returns>
        </member>
        <member name="M:Symbol.RFID3.Config.ResetFactoryDefaults">
            <summary>
            Restores to factory default settings in the reader. 
            </summary>
            <remarks>
            Once this method is called, all the settings will be lost. For eg. events, singulation control. 
            This application is required to redo the basic steps for initializing the reader.
            </remarks>
        </member>
        <member name="M:Symbol.RFID3.Config.SetDebugMask(System.String,System.UInt16)">
            <summary>
            Sets the Debug Mask
            </summary>
            <param name="debugMask"> </param>
            <param name="byteOffSet"> </param>
        </member>
        <member name="P:Symbol.RFID3.Config.DutyCycleIndex">
            <summary>
            Duty cycle of the RFID Radio Module. It is an index to ReaderCapabilities.DutyCycleValues
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Config.RadioPowerState">
            <summary>
            Gets or sets the Radio power state to on or off state
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Config.SledBatteryLevel">
            <summary> 
            Gets Sled battery level in percantage 
            </summary> 
        </member>
        <member name="P:Symbol.RFID3.Config.SledBatteryStatus">
            <summary> 
            Gets Sled battery status - charging, discharging, critical 
            </summary> 
        </member>
        <member name="P:Symbol.RFID3.Config.Antennas">
            <summary>
            Gets the Antenna object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Config.GPI">
            <summary>
            Gets the GPI Object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Config.GPO">
            <summary>
            Gets the GPO Object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Config.Zones">
            <summary>
            Gets the Zones Object
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Config.DefaultReadTagsCount">
            <summary>
            Gets or sets the default read tag count
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Config.TraceLevel">
            <summary>
            Gets or sets the trace level
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Antennas">
            <summary>
            This class represents the Antenna of the reader
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Antennas.SetRFMode(Symbol.RFID3.Antennas.RFMode)">
            <summary>
            Sets the RF Mode to be used with the inventory operations (Applies to all antennas)
            </summary>
            <param name="antennaRFMode">Contains RF Mode table index and Tari</param>
        </member>
        <member name="M:Symbol.RFID3.Antennas.SetConfig(Symbol.RFID3.Antennas.Config)">
            <summary>
            Sets the Antenna Configuration (Applies to all the antennas)
            </summary>
            <param name="antennaConfig">Antenna configuations</param>
        </member>
        <member name="P:Symbol.RFID3.Antennas.Length">
            <summary>
            Returns the number of antenna supported
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.Item(System.Int32)">
            <summary>
            Gets the Antenna properties based on the index
            </summary>
            <param name="index">Specifies the antenna ID interested</param>
            <returns>This method returns antenna properties object</returns>
            <exception cref="T:System.Exception">Index out of range exception is thrown when index is out of antenna range</exception>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AvailableAntennas">
            <summary>
            Gets the available antenna
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Antennas.AntennaProperties">
            <summary>
            This class represents the antenna properties of the Reader
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Antennas.AntennaProperties.GetPhysicalProperties">
            <summary>
            Gets the Physical antenna properties
            </summary>
            <remarks>
            This method gets the antenna physical properties such as whether antenna is enabled or not and the antenna gain
            </remarks>
            <exception cref="T:Symbol.RFID3.OperationFailureException">This exception is thrown when the parameters are invalid </exception>
            <returns>PhysicalProperties object</returns>
        </member>
        <member name="M:Symbol.RFID3.Antennas.AntennaProperties.GetConfig">
            <summary>
            Gets ths Antenna Configuration
            </summary>
            <exception cref="T:Symbol.RFID3.OperationFailureException"> This exception is thrown when the parameter is invalid</exception>
            <returns>Returns the Antenna config object</returns>
        </member>
        <member name="M:Symbol.RFID3.Antennas.AntennaProperties.SetConfig(Symbol.RFID3.Antennas.Config)">
            <summary>
            Sets the Antenna Configuration
            </summary>
            <param name="antennaConfig">Antenna configuations</param>
        </member>
        <member name="M:Symbol.RFID3.Antennas.AntennaProperties.SetRfConfig(Symbol.RFID3.Antennas.AntennaRfConfig)">
            <summary>
            Sets the RF configuration of the Antenna
            </summary>
            <param name="antennaRfConfig">The Configuration to be set</param>
        </member>
        <member name="M:Symbol.RFID3.Antennas.AntennaProperties.GetRfConfig">
            <summary>
            Function to get the RF configuration of the Antenna Specified
            </summary>
            <returns>Antenna RF Configuration</returns>
        </member>
        <member name="M:Symbol.RFID3.Antennas.AntennaProperties.GetSingulationControl">
            <summary>
            Gets the Singulation Control
            </summary>
            <returns> successful call returns singulation control</returns>
        </member>
        <member name="M:Symbol.RFID3.Antennas.AntennaProperties.SetSingulationControl(Symbol.RFID3.Antennas.SingulationControl)">
            <summary>
            Sets the Singulation Control
            </summary>
            <param name="antennaSingulationControl">Singulation control related to antenna (e.g. session, tag population etc)</param>
            <exception cref="T:Symbol.RFID3.OperationFailureException"> This exception is thrown when the parameter is invalid</exception>
        </member>
        <member name="M:Symbol.RFID3.Antennas.AntennaProperties.GetRFMode">
            <summary>
            Gets the RF Mode to be used with the inventory operations 
            </summary>
            <returns>RF Mode object contains RF mode table index and Tari</returns>
        </member>
        <member name="M:Symbol.RFID3.Antennas.AntennaProperties.SetRFMode(Symbol.RFID3.Antennas.RFMode)">
            <summary>
            Sets the RF Mode to be used with the inventory operations 
            </summary>
            <param name="antennaRFMode">RFMODE to set</param>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AntennaProperties.Index">
            <summary>
            Gets the Index or ID of the antenna
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Antennas.PhysicalProperties">
            <summary>
            This class represents the Antenna Physical properties
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Antennas.PhysicalProperties.#ctor">
            <summary>
            The constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.PhysicalProperties.IsConnected">
            <summary>
            Gets the status of antenna is connected or not
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.PhysicalProperties.AntennaGain">
            <summary>
            Gets the antenna gain. The gain of the antenna in dBI*100 (dB relative to Istropic)
            to allow fractional dBi representation.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Antennas.AntennaRfConfig">
            <summary>
            The Class holds the RF configuration of the Antenna
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Antennas.AntennaRfConfig.#ctor">
            <summary>
            Constructor Initialises to the default values
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AntennaRfConfig.AntennaStopTriggerConfig">
            <summary>
            Gets or sets the Antenna Stop Trigger Configuration for the Antenna Selected. 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AntennaRfConfig.ReceiveSensitivityIndex">
            <summary>
            Gets or sets the receive sensitivity index. 
            The receive sensitivity table is available as part of reader capability.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AntennaRfConfig.TransmitPowerIndex">
            <summary>
            Gets or sets the Transmit power index.
            The receive  Transmit power index is available as part of reader capability.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AntennaRfConfig.TransmitFrequencyIndex">
            <summary>
            Gets or sets the Transmit Frequency index.
            The receive  Transmit Frequency index is available as part of reader capability.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AntennaRfConfig.RfModeTableIndex">
            <summary>
            Gets or sets the Rf Mode index.
            The receive  Transmit  Rf Mode  index is available as part of reader capability.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AntennaRfConfig.Tari">
            <summary>
            Gets or sets the TARI specified in nsec. This is specified if the mode selected 
            has a Tari range. If the selected mode has a range, and the Tari is set to zero, 
            the Reader implementation picks up any Tari value within the range. If the 
            selected RF mode has a range, and the specified Tari is out of that range and is not 
            set to zero, an error message will be generated.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AntennaRfConfig.TransmitPort">
            <summary>
            Gets or sets Physical Transmit Port OR Transmit Beam of the Antenna, 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AntennaRfConfig.ReceivePort">
            <summary>
            Gets or sets Physical Receive Port OR Receive Beam of the Antenna
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Antennas.AntennaRfConfig.AntennaStopTrigger">
            <summary>
            Antenna Stop trigger configuration
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AntennaRfConfig.AntennaStopTrigger.StopTriggerType">
            <summary>
            Gets or sets the StopTriggerType
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.AntennaRfConfig.AntennaStopTrigger.AntennaStopConditionValue">
            <summary>
            <para>No of Inventory attempts if the stop trigger is configured ANTENNA_STOP_TRIGGER_TYPE_N_ATTEMPTS</para>
            <para>Invetory Duration in Milli Seconds if the stop trigger is ANTENNA_STOP_TRIGGER_TYPE_DURATION_MILLISECS</para>
            <para>Invetory Duration in Seconds if the stop trigger is ANTENNA_STOP_TRIGGER_TYPE_DURATION_SECS</para>
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Antennas.Config">
            <summary>
            This class contains required information for configuring the antenna
            </summary>
            <remarks>
            This class contains the information related to receiver sensitivity, transmit
            power and transmit frequency index. These indexes are referring to the receiver sensitivity, 
            transmit power and transmit frequency table available as part of Reader Capabilities.
            </remarks>
        </member>
        <member name="M:Symbol.RFID3.Antennas.Config.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Antennas.Config.#ctor(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Constructor with parameters
            </summary>
            <param name="receiveSensitivityIndex">Receive sensitivity index (available as part of reader capability)</param>
            <param name="transmitPowerIndex">Transmit power index (available as part of reader capability)</param>
            <param name="transmitFrequencyIndex">Transmit Frequency index (available as part of reader capability)</param>
        </member>
        <member name="P:Symbol.RFID3.Antennas.Config.ReceiveSensitivityIndex">
            <summary>
            Gets or sets the receive sensitivity index. 
            The receive sensitivity table is available as part of reader capability.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.Config.TransmitPowerIndex">
            <summary>
            Gets or sets the Transmit power index.
            The receive sensitivity table is available as part of reader capability.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.Config.TransmitFrequencyIndex">
            <summary>
            Gets or sets the transmit frequency index. 
            Pointer to Frequency-hop table or Channel Index;
            In Frequency-hopping regulatory regions (ReaderCapabilites.IsHoppingEnabled is true),
            this is the Frequency hop table ID. 
            In case of Fixed Frequency (ReaderCapabilites.IsHoppingEnabled is false), 
            this is the one-based channel index in the FixedFrequencyTable.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Antennas.SingulationControl">
            <summary>
            This class represents the antenna configuration related to singulation control
            parameters session, Tag Population and the tag transit time
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Antennas.SingulationControl.Action">
            <summary>
            Singulation Action
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Antennas.SingulationControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.SingulationControl.Session">
            <summary>
            Gets or sets the session. This is the session number that the tags use to update the
            inventory state upon successful singulation
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.SingulationControl.TagPopulation">
            <summary>
            Gets or sets Tag population. This is the expected tag population in the field of view
            of the antenna
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.SingulationControl.TagTransitTime">
            <summary>
            Gets or sets the Tag Transit time. This is the measure of expected tag mobility in the
            field of view of the antenna where this inventory operation is getting executed.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Antennas.SingulationControl.SingulationAction">
            <summary>
            This class contains configuration parameter related to state aware singulation
            action
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Antennas.SingulationControl.SingulationAction.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.SingulationControl.SingulationAction.PerformStateAwareSingulationAction">
            <summary>
            Gets or sets the Perform State aware singulation action (true or false)
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.SingulationControl.SingulationAction.InventoryState">
            <summary>
            Gets or sets the inventory state. Only tags that match the session state participate
            in the inventory round.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.SingulationControl.SingulationAction.SLFlag">
            <summary>
            Gets or sets the SL flag. Only tags that match that tag state participate in the 
            inventory round
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Antennas.RFMode">
            <summary>
            This class represents the C1G2 RF Mode and the Tari value
            to use for the inventory operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Antennas.RFMode.#ctor">
            <summary>
            Connstructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Antennas.RFMode.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Constructor with parameters
            </summary>
            <param name="tableIndex">Index of RF Mode table</param>
            <param name="tari">tari value (in nsec)</param>
        </member>
        <member name="P:Symbol.RFID3.Antennas.RFMode.TableIndex">
            <summary>
            Gets or sets the RF Mode table to be used. This is an index into 
            the RFModeTable
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Antennas.RFMode.Tari">
            <summary>
            Gets or sets the TARI specified in nsec. This is specified if the mode selected has 
            a Tari range. If the selected mode has a range, and the Tari is set to zero, 
            the Reader implementation picks up any Tari value within the range. If the selected 
            RF mode has a range, and the specified Tari is out of that range and is not set to zero,
            an error message will be generated.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.GPIs">
            <summary>
            This class represents the General Purpose Input (GPI)
            </summary>
        </member>
        <member name="P:Symbol.RFID3.GPIs.Length">
            <summary>
            Gets the number of GPI ports supported by the reader
            </summary>
        </member>
        <member name="P:Symbol.RFID3.GPIs.Item(System.Int32)">
            <summary>
            Gets the GPI Port object based on the specified index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Symbol.RFID3.GPIs.Port">
            <summary>
            Represents the individual GPI Port 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.GPIs.Port.Enable">
            <summary>
            Sets the GPI port to enabled or disabled state
            </summary>
        </member>
        <member name="P:Symbol.RFID3.GPIs.Port.IsEnabled">
            <summary>
            Gets the GPI Port status 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.GPIs.Port.PortState">
            <summary>
            Gets the current GPI Port state
            </summary>
        </member>
        <member name="T:Symbol.RFID3.GPIs.GPI_PORT_STATE">
            <summary>
            GPI Port state enumerations
            </summary>
        </member>
        <member name="F:Symbol.RFID3.GPIs.GPI_PORT_STATE.GPI_PORT_STATE_LOW">
            <summary>
            GPI state is low
            </summary>
        </member>
        <member name="F:Symbol.RFID3.GPIs.GPI_PORT_STATE.GPI_PORT_STATE_HIGH">
            <summary>
            GPI state is high
            </summary>
        </member>
        <member name="F:Symbol.RFID3.GPIs.GPI_PORT_STATE.GPI_PORT_STATE_UNKNOWN">
            <summary>
            GPI state is unknown
            </summary>
        </member>
        <member name="T:Symbol.RFID3.GPOs">
            <summary>
            Represents the General Purpose Output (GPO)
            </summary>
        </member>
        <member name="P:Symbol.RFID3.GPOs.Length">
            <summary>
            Gets the number of GPO ports supported
            </summary>
        </member>
        <member name="P:Symbol.RFID3.GPOs.Item(System.Int32)">
            <summary>
            Gets the GPO object based on the specified port number 
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Symbol.RFID3.GPOs.Port">
            <summary>
            This class represents the individual GPO Port
            </summary>
        </member>
        <member name="P:Symbol.RFID3.GPOs.Port.PortState">
            <summary>
            Gets or sets the current GPO State as enabled or disabled
            </summary>
        </member>
        <member name="T:Symbol.RFID3.GPOs.GPO_PORT_STATE">
            <summary>
            GPO Port state enumeration
            </summary>
        </member>
        <member name="F:Symbol.RFID3.GPOs.GPO_PORT_STATE.FALSE">
            <summary>
            False GPI port state 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.GPOs.GPO_PORT_STATE.TRUE">
            <summary>
            True GPI port state 
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagStorageSettings">
            <summary>
            To configure tag storage related settings such as Maximum tag count, maximum
            size of memory bank and Maximum tag ID length
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagStorageSettings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagStorageSettings.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Constructor takes maximum tag count, maximum size of bank and maximum tag ID Length
            as parameter
            </summary>
            <param name="maxTagCount">Maximum number of tags to be queued in the Dll. 
            The default value is 4096.</param>
            <param name="maxSizeMemoryBank">Maximum size of Memory Bank in Bytes(Should be WORD aligned, i.e. double bytes). 
            The default value is 64.</param>
            <param name="maxTagIDByteCount">Maximum size of EPC Data in Bytes(Should be WORD aligned, i.e. double bytes). 
            The default value is 12.</param>
        </member>
        <member name="M:Symbol.RFID3.TagStorageSettings.#ctor(System.UInt32,System.UInt32,System.UInt32,Symbol.RFID3.TAG_FIELD,System.Boolean)">
            <summary>
            Constructor takes maximum tag count, maximum size of bank, maximum tag ID Length
            and Tag fields as parameter
            </summary>
            <param name="maxTagCount">Maximum number of tags to be queued in the Dll.
            The default value is 4096.</param>
            <param name="maxMemoryBankByteCount">Maximum size of Memory Bank in Bytes(Should be WORD aligned, i.e. double bytes). 
            The default value is 64.</param>
            <param name="maxTagIDByteCount">Maximum size of EPC Data in Bytes(Should be WORD aligned, i.e. double bytes).
            The default value is 12.</param>
            <param name="tagFields">Selects the content of TagData which inturn specifies whether certain fields 
            are required to be processed by the Reader/Dll. By default, all fields are enabled.</param>
            <param name="enableAccessReports">Indicates whether Dll should enable reporting of 
            TAG_DATA for access operations like Write, Lock, Kill, etc. 
            By default, this will be false, which implies reports will be 
            enabled only for Inventory, Read and Block-permalock Access 
            operations.</param>
        </member>
        <member name="P:Symbol.RFID3.TagStorageSettings.MaxTagCount">
            <summary>
            Gets or sets the maximum tag count
            <value>value contains the maximum number of tags to be queued in the library. 
            The default value is 4096.
            </value>
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagStorageSettings.MaxSizeMemoryBank">
            <summary>
            Gets or sets the maximum size of memory bank
            <value>
            Value contains the Maximum Size of Memory Bank in Bytes to be allocated during allocate tag
            (Should be WORD aligned, i.e. double bytes). 
            The default is 64 bytes.
            </value>
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagStorageSettings.MaxTagIDLength">
            <summary>
            Gets or sets the maximum Tag ID length
            <value>This value contains the Maximum size of EPC Data in Bytes to be allocated during allocate tag
            (Should be WORD aligned, i.e. double bytes). 
            The default is 12 bytes.</value>
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagStorageSettings.TagFields">
            <summary>
            Selects the content of TagData which inturn specifies whether certain fields are required to be 
            processed by the Reader/Dll. Absence of certain fields can improve performance of the Reader/Dll 
            or result in specific behavior. For e.g. disabling Antenna Id can result
            in application receiving as single unique tag even though there were multiple entries of the 
            same tag reported from different Antennas
            By default all fields are enabled.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagStorageSettings.EnableAccessReports">
            <summary>
            Indicates whether Dll should enable reporting of 
            TAG_DATA for access operations like Write, Lock, Kill, etc. 
            By default, this will be false, which implies reports will be 
            enabled only for Inventory, Read and Block-permalock Access 
            operations.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagStorageSettings.DiscardTagsOnInventoryStop">
            <summary>
            Option to discard the tags which are reported by the reader
            when inventory/access-sequence operation has been stopped by a call
            to Actions.Inventory.Stop or Actions.TagAccess.OperationSequence.StopSequence. Choosing this option 
            will not purge the tags which are already queued by the Dll.
            This option will be ignored if tagReportTrigger of TriggerInfo 
            is not equal to 1.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events">
            <summary>
            This class represents the events supported. The events are signalled ony when it is enabled. The properties allows to enable required events.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Events.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Events.NotificationsMonitorThread">
            <summary>
            This function will monitor the notifications for the various registered events.
            Once the notification is received, it will start the ReadDataAndFireEventThread thread.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Events.ReadDataAndFireEventThread">
            <summary>
            This function will read the event data and fire the corresponding 
            main event - ReadNotify or StatusNotify
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.HostName">
            <summary>
            Host name or IP Address of the reader
            </summary>
        </member>
        <member name="E:Symbol.RFID3.Events.ReadNotify">
            <summary>
            Notifies the Tag Read Notification.
            </summary>
        </member>
        <member name="E:Symbol.RFID3.Events.StatusNotify">
            <summary>
            Notifies the status change notification
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyHandheldTriggerEvent">
            <summary>
            To enable/disable GPI Event Notification.
            GPI_EVENT will be signaled every time an enabled GPI changes state.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyGPIEvent">
            <summary>
            To enable/disable GPI Event Notification.
            GPI_EVENT will be signaled every time an enabled GPI changes state.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyBufferFullWarningEvent">
            <summary>
            To enable/disable Buffer full warning Event Notification.
            When the internal buffers are 90% full, BUFFER_FULL_WARNING_EVENT will be notified.
            When the buffers are 100% full, no more Tags can be stored in Dll 
            or in the Reader, and further tags are discarded.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyBufferFullEvent">
            <summary>>
            To enable/disbale Buffer full Event Notification.
            When the internal buffers are 100% full, BUFFER_FULL_EVENT will be notified every time a new
            tag report is received.The oldest TagData reports will be replaced by the newest in a circular FIFO manner.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyAntennaEvent">
            <summary>
            To enable/disable Antenna Event Notification.
            This event is generated when the Reader detects that an 
            antenna is connected or disconnected
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyInventoryStartEvent">
            <summary>
             To enable/disable Inventory Start Event Notification.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyInventoryStopEvent">
            <summary>
             To enable/disable Inventory Stop Event Notification.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyAccessStartEvent">
            <summary>
             To enable/disable Access Start Event Notification.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyEASAlarmEvent">
            <summary>
            To enable/disable NXP_EAS_ALARM_EVENT Notification
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyDebugInfoEvent">
            <summary>
            To enable/disable DEBUG_INFO_EVENT Notification
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyAccessStopEvent">
            <summary>
             To enable/disable Access Stop Event Notification.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyReaderExceptionEvent">
            <summary>
            To enable/disable Reader Exception Event Notification.
            The Application can continue to use the connection if the reader renders is usable.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyReaderDisconnectEvent">
            <summary>
            To enable/disable Reader Disconnection Event Notification.
            The Application can call Reconnect() to manually reconnect to the Reader
            Or opt for auto-reconnection. 
            To cleanup and exit the application can call Disconnect().
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.AttachTagDataWithReadEvent">
            <summary>
            Specified whether TagData should be reported along with the ReadNotify Event Handler
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NotifyTemperatureAlarmEvent">
            <summary>
            To enable/disable Temperature Alarm Event Notification.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.ReadNotifyHandler">
            <summary>
            Read Notify Handler
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.StatusNotifyHandler">
            <summary>
            Status Notify Handler
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.ReadEventArgs">
            <summary>
            Contains Read Event data contains tag data
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.ReadEventArgs.ReadEventData">
            <summary>
            Gets the Read Event Data object
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.ReadEventData">
            <summary>
            Represents RFID Tag Data on read. If AttachTagDataWithReadEvent is true, 
            the member TagData will point to the tag being reported. Else TagData will be null.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.ReadEventData.TagData">
            <summary>
            RFID Tag Data
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.StatusEventArgs">
            <summary>
            Represent Status Event Arguments 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.StatusEventArgs.StatusEventData">
            <summary>
            Gets the Status Event Data object
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.StatusEventData">
            <summary>
            Contains the status event data for GPI, Buffer Full warning,
            Antenna Connected status, Inventory start/stop event, Access Start/stop event,
            and reader disconnect event
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.HandheldTriggerEventData">
            <summary>
            Represents Handheld Trigger Event Data (current state pressed/released)
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.GPIEventData">
            <summary>
            Represents GPI Event Data (port and the current state)
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.BufferFullWarningEventData">
            <summary>
            Represents Buffer Full warning event data.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.AntennaEventData">
            <summary>
            Represents Antenna Event Data
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.InventoryStartEventData">
            <summary>
            Represents Inventory start event data
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.InventoryStopEventData">
            <summary>
            Represents Inventory stop event data
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.AccessStartEventData">
            <summary>
            Represents Access Start event data. 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.AccessStopEventData">
            <summary>
            Represents Access stop event data. 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.DisconnectionEventData">
            <summary>
            Represents Reader Disconnect event data
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.ReaderExceptionEventData">
            <summary>
            Represents Reader Exception event data
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.NXPEASAlarmEventData">
            <summary>
            Represents NXP EAS Alarm Event data
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.DebugInfoEventData">
            <summary>
            Represents Debug Info Event Data
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.StatusEventData.TemperatureAlarmEventData">
            <summary>
            Represents Temperature Alarm Event Data
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.StatusEventData.StatusEventType">
            <summary>
            Gets or sets the status event type
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.GPIEventData">
            <summary>
            Represents GPI Event Data (port and the current state)
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.GPIEventData.PortNumber">
            <summary>
            GPI Port on which the state changed.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.GPIEventData.GPIEvent">
            <summary>
            GPI event indicating if the GPI Port State was changed from 
            low to high (true) or high to low (false).
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.HandheldTriggerEventData">
            <summary>
            Represents Handheld Trigger Event Data (current state)
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.HandheldTriggerEventData.HandheldTriggerEvent">
            <summary>
            Handheld Trigger event indicating if the Handheld Trigger 
            was Pressed or Released
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.BufferFullWarningEventData">
            <summary>
            Represents Buffer Full warning event data. Right now, no data is associated with this event.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.AntennaEventData">
            <summary>
            Contains the Antenna Event Data. Specifies the antenna ID and its connected status
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.AntennaEventData.AntennaID">
            <summary>
            Antenna on which the event was triggered.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.AntennaEventData.AntennaEvent">
            <summary>
            Indicates whether the Antenna is connected/disconnected.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.InventoryStartEventData">
            <summary>
            Represents Inventory start event data. Right now, no data is associated with this event.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.InventoryStopEventData">
            <summary>
            Represents Inventory stop event data. Right now, no data is associated with this event.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.AccessStartEventData">
            <summary>
            Represents Access start event data. Right now, no data is associated with this event.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.AccessStopEventData">
            <summary>
            Represents Access stop event data. Right now, no data is associated with this event.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.ReaderExceptionEventData">
            <summary>
            Represents Reader Disconnect event data. Right now, no data is associated with this event.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.ReaderExceptionEventData.ReaderExceptionEventInfo">
            <summary>
            Indicates the reason for Reader Exception.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.ReaderExceptionEventData.ReaderExceptionEventType">
            <summary>
            Indicates the reason for Reader Exception.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.DisconnectionEventData">
            <summary>
            Represents Reader Disconnect event data. Right now, no data is associated with this event.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.DisconnectionEventData.DisconnectEventInfo">
            <summary>
            Indicates the reason for Disconnection from Reader.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.NXPEASAlarmEventData">
            <summary>
            Gives the ID of the antenna which found an NXP tag with EAS bit set during EAS Scanning
            Also gives the alarm code returned by the tag during EAS scanning
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NXPEASAlarmEventData.AlarmCode">
            <summary>
            Alarm code returned by the NXP tag during EAS scanning
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.NXPEASAlarmEventData.AntennaID">
            <summary>
            Antenna that communicated with the NXP tag
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.DebugInfoEventData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.DebugInfoEventData.DebugInfo">
            <summary>
            Debug Info 
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.TemperatureAlarmData">
            <summary>
            Contains Temperature Alarm Event Data
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.TemperatureAlarmData.SourceName">
            <summary>
            Gets the Source Name (PA or Ambient) of Temperature Alarm Event
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.TemperatureAlarmData.CurrentTemperature">
            <summary>
            Gets the Current Temperature (in celsius)
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Events.TemperatureAlarmData.AlarmLevel">
            <summary>
            Gets Alarm Level (Low, High or Critical)
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Events.STATUS_EVENT_TYPE">
            <summary>
            Specifies the Event type supported
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.GPI_EVENT">
            <summary>
             A GPI event (state change from high to low, or low to high) has occurred on a GPI port.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.BUFFER_FULL_WARNING_EVENT">
            <summary>
            When the internal buffers are 90% full, this event will be signaled.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.ANTENNA_EVENT">
            <summary>
             A particular Antenna has been Connected/Disconnected.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.INVENTORY_START_EVENT">
            <summary>
            Inventory Operation has started. In case of periodic trigger
            this event will be triggered for each period.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.INVENTORY_STOP_EVENT">
            <summary>
            Inventory Operation has stopped. In case of periodic trigger
            this event will be triggered for each period.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.ACCESS_START_EVENT">
            <summary>
             Access Operation has started.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.ACCESS_STOP_EVENT">
            <summary>
             Access Operation has stopped.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.DISCONNECTION_EVENT">
            <summary>
            Event notifying disconnection from the Reader. 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.BUFFER_FULL_EVENT">
            <summary>
             When the internal buffers are 100% full, this event will be signaled and 
             further tags are discarded.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.NXP_EAS_ALARM_EVENT">
            <summary>	  
            Event Notifying the presence of NXP tag with EAS bit set
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.READER_EXCEPTION_EVENT">
             <summary>
            Event notifying that an exception has occured in the Reader. 
            The Application can continue to use the connection if the reader renders is usable.
             </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.HANDHELD_TRIGGER_EVENT">
            <summary>
            A Handheld Gun/Button event Pull/Release has occurred.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.DEBUG_INFO_EVENT">
            <summary>
            This Event is generated when Reader sends a debug information
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Events.STATUS_EVENT_TYPE.TEMPERATURE_ALARM_EVENT">
            <summary>
            This is an Alarm Event generated when reader reaches temperature threshold level 
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagData">
            <summary>
            Represents RFID Tag Data
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagData.AccessOperationResult">
            <summary>
            Is valid only for TagReports of Access operations  and Contains results specific to
            the Access operations performed.The Operations include Fujitsu's BurstWrite,BurstWrite and ReadBlockLock 
            Impinj's QTRead and NXP ChangeConfig
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagData.LocationInfo">
            <summary>
            Contains the latest report of the Tag locationing operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagData.SeenTime">
            <summary>
            Represents the Tag Seen time. 
            This can be either Uptime or UTC time at any point of time
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.ContainsLocationInfo">
            <summary>
            Indicates Location Info available or not
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.TagID">
            <summary>
            Gets the Tag ID 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.TagIDAllocated">
            <summary>
            Gets the number of bytes allocated for Tag ID
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.PC">
            <summary>
            PC (Protocol Control) bits
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.XPC_W1">
            <summary>
            Gets First word of XPC 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.XPC_W2">
            <summary>
            Gets Second word of XPC 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.CRC">
            <summary>
            Gets the CRC
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.AntennaID">
            <summary>
            Gets the antenna ID on which this tag is seen
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.PeakRSSI">
            <summary>
            Gets the Peak RSSI 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.ChannelIndex">
            <summary>
            Gets the channel index 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.TagSeenCount">
            <summary>
            Gets the Tag seen count
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.OpCode">
            <summary>
             C1G2 Operation as a result of which this Tag is being reported.
             if opCode is ACCESS_OPERATION_NONE, this Tag is a result of Inventory operation.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.OpStatus">
            <summary>
             Result of C1G2 Access Operation: OpCode.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.MemoryBank">
            <summary>
            Gets the memory bank
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.MemoryBankData">
            <summary>
            Gets the memory bank data
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.MemoryBankDataOffset">
            <summary>
            Gets the memory bank off-set
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.MemoryBankDataAllocated">
            <summary>
            Gets the number of bytes allocated by the user for memory bank data
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.TagEvent">
            <summary>
            Gets the Tag Event
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.TagEventTimeStamp">
            <summary>
            Gets the time stamp of Tag event
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.TagZoneInfo">
            <summary>
            Contains Zone Information of Tag Read
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.AntennaPortInfo">
            <summary>
            Contains Information of Antenna Port
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagData.PhaseInfo">
            <summary>
            Contains Phase Information
            </summary>
        </member>
        <member name="T:Symbol.RFID3.LocationInfo">
            <summary>
            Contains the result of locating operation performed.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.LocationInfo.RelativeDistance">
            <summary>
            Relative distance of the Tag from the Reader.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagZoneInfo">
            <summary>
            Contains the result of Zone operation performed.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagZoneInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagZoneInfo.ZoneID">
            <summary>
            The Zone ID of the Tag Read
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagZoneInfo.ZoneName">
            <summary>
            Zone Name of the Tag Read
            </summary>
        </member>
        <member name="T:Symbol.RFID3.AntennaPortInfo">
            <summary>
            Contains the result of Antenna Port on operation performed.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.AntennaPortInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.AntennaPortInfo.TransmitPort">
            <summary>
            Antenna Physical Transmit port or Transmit Beam of Tag operation.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.AntennaPortInfo.ReceivePort">
            <summary>
            Antenna Physical Receive port or Receive Beam of Tag operation.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.AccessOperationResult">
            <summary>
            Contains the result of AccessOperation on a particular tag. This is applicable for custom Tag access operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.AccessOperationResult.FujitsuReadBlockLockResult">
            <summary>
            Result of Fujitsu's ReadBlockLock operation.Contains a status of the 16 block-lock flags for the
            specified Block group of 64K Fujitsu tag.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.AccessOperationResult.FujitsuBurstWriteResult">
            <summary>
            Result of Fujitsu's BurstWrite operation.Contains the number of bytes not written in the last Burst write operation.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.AccessOperationResult.FujitsuBurstEraseResult">
            <summary>
            Result of Fujitsu's BurstWrite operation.Contains the number of bytes not written in the last Burst write operation.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.AccessOperationResult.ImpinjQTData">
            <summary>
            Data returned from Impinj's QT tag.Consists of Control data.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.AccessOperationResult.NXPChangeConfigResult">
            <summary>
            Data returned from NXP's G2iL tag.Consists of Control data.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.FujitsuReadBlockLockResult">
            <summary>
            Result of Fujitsu's ReadBlockLock operation.Contains a status of the 16 block-lock flags for the
            specified Block group of 64K Fujitsu tag.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuReadBlockLockResult.BlockLockStatus">
            <summary>
            Status of the 16 BlockLock flags inside the BlockGroup 
            </summary>
        </member>
        <member name="T:Symbol.RFID3.FujitsuBurstWriteResult">
            <summary>
            Result of Fujitsu's BurstWrite operation on a 64K Tag
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuBurstWriteResult.NumberOfBytesNotWritten">
            <summary>
            Gets Number of Bytes Not Written
            </summary>
        </member>
        <member name="T:Symbol.RFID3.FujitsuBurstEraseResult">
            <summary>
            Result of Fujitsu's BurstErase operation on a 64K Tag
            </summary>
        </member>
        <member name="P:Symbol.RFID3.FujitsuBurstEraseResult.NumberOfBytesNotErased">
            <summary>
            Gets Number of Bytes not erased
            </summary>
        </member>
        <member name="T:Symbol.RFID3.SeenTime">
            <summary>
            Represents the Tag Seen time. This can be either Uptime or UTC time at any point of time
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SeenTime.UpTime">
            <summary>
            Gets the Up time
            </summary>
        </member>
        <member name="P:Symbol.RFID3.SeenTime.UTCTime">
            <summary>
            Gets UTC time
            </summary>
        </member>
        <member name="T:Symbol.RFID3.UpTime">
            <summary>
            Represents the Uptime. Holds both First seen and last seen time
            </summary>
        </member>
        <member name="P:Symbol.RFID3.UpTime.FirstSeenTimeStamp">
            <summary>
            Gets the First Seen up time 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.UpTime.LastSeenTimeStamp">
            <summary>
            Gets the last seen up time
            </summary>
        </member>
        <member name="T:Symbol.RFID3.UTCTime">
            <summary>
            This class represents UTC Time. It includes both First and last seen time stamp
            </summary>
        </member>
        <member name="P:Symbol.RFID3.UTCTime.FirstSeenTimeStamp">
            <summary>
            Gets the First Seen UTC time stamp in Date time format
            </summary>
        </member>
        <member name="P:Symbol.RFID3.UTCTime.LastSeenTimeStamp">
            <summary>
            Gets the last seen UTC time stamp in date time format
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Resources.m_rmNameValues">
            <summary>
            ResourceManager object to access the string table
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Resources.#cctor">
            <summary>
            Static constructor, initialize access to the string table
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Resources.GetString(System.String)">
            <summary>
            Gets a string from the string table
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Symbol.RFID3.Zones">
            <summary>
            This Class contains the configuration of the Zones used for RFID Operations. The Zone Configuration
            will be used when the RFID Operation (eg. Inventory) is performed on the reader. The Antennas 
            specified in the ZoneSequence to perform Inventory will use the configuration specified in this class. 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Zones.mZoneConfigCollection">
            <summary>
            Place holder for the Zone configurations
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Zones.#ctor">
            <summary>
            Constructor which creates the Place holder for Zone Sequence
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Zones.Add(System.UInt16,System.String,Symbol.RFID3.AntennaConfig[])">
            <summary>
            Method to add a New Zone without AntennaGlobalConfiguration
            </summary>
            <param name="zoneId">Unique Id of the Zone</param>
            <param name="zoneName">Name to Identify the Zone</param>
            <param name="antennaConfig">Configuration of the Antennas part of the Zone</param>
        </member>
        <member name="M:Symbol.RFID3.Zones.Add(System.UInt16,System.String,Symbol.RFID3.AntennaConfig[],Symbol.RFID3.AntennaConfig)">
            <summary>
            Method to Add Zone with all Configurations
            </summary>
            <param name="zoneId">Unique Id of the Zone</param>
            <param name="zoneName">Name to Identify the Zone</param>
            <param name="antennaConfig">Configuration of the Antennas part of the Zone</param>
            <param name="globalAntennaConfig">Configuration appllicable to all Antennas in this Zone</param>
        </member>
        <member name="M:Symbol.RFID3.Zones.Add(Symbol.RFID3.Zones.ZoneConfig)">
            <summary>
            Method to Add Zone ZoneConfig Object
            </summary>
            <param name="zoneConfig">Configuration of the Zone</param>
        </member>
        <member name="M:Symbol.RFID3.Zones.Delete(System.UInt16)">
            <summary>
            Method to delete the Zone
            </summary>
            <param name="zoneID">The Zone ID to be deleted, value 0 will delete all Zones</param>
        </member>
        <member name="M:Symbol.RFID3.Zones.GetZoneIDList">
            <summary>
            Method to get the list of Zones configured in the system
            </summary>
            <returns>List of Zones configured</returns>
        </member>
        <member name="M:Symbol.RFID3.Zones.GetZoneConfig(System.UInt16)">
            <summary>
            Method to get the Zone configuration
            </summary>
            <param name="zoneId">Zone Id of which the configuration to be retrived</param>
            <returns>Zone configuration of the Zone Id specified</returns>
        </member>
        <member name="P:Symbol.RFID3.Zones.Length">
            <summary>
            No of Zones Configured
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Zones.ZoneConfig">
            <summary>
            Logical group of Antennas denoting a Zone along with the configurations
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Zones.ZoneConfig.#ctor">
            <summary>
            The default constructor for the Zone configuration
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Zones.ZoneConfig.#ctor(System.UInt16,System.String,Symbol.RFID3.AntennaConfig[],Symbol.RFID3.AntennaConfig)">
            <summary>
            Constructor which add all configuration
            </summary>
            <param name="zoneId">Unique Id of the Zone</param>
            <param name="zoneName">Name to Identify the Zone</param>
            <param name="antennaConfig">Configuration of the Antennas part of the Zone</param>
            <param name="globalAntennaConfig"> Configuration appllicable to all Antennas in this Zone</param>
        </member>
        <member name="M:Symbol.RFID3.Zones.ZoneConfig.#ctor(System.UInt16,System.String,Symbol.RFID3.AntennaConfig[])">
            <summary>
            Constructor without Global configuration
            </summary>
            <param name="zoneId">Unique Id of the Zone</param>
            <param name="zoneName">Name to Identify the Zone</param>
            <param name="antennaConfig">Configuration of the Antennas part of the Zone</param>
        </member>
        <member name="P:Symbol.RFID3.Zones.ZoneConfig.ZoneId">
            <summary>
            Unique Id of the Zone
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Zones.ZoneConfig.ZoneName">
            <summary>
            Name to identify the Zone
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Zones.ZoneConfig.AntennaConfig">
            <summary>
            List of Antenna configuration with Antenna IDs which belongs to the Zone
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Zones.ZoneConfig.ZoneAntennaConfig">
            <summary>
            Configuration appllicable to all Antennas in this Zone
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ZoneSequence">
            <summary>
            The List of Zones on which RFID Operation to be performed
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ZoneSequence.#ctor">
            <summary>
             The constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ZoneSequence.Add(Symbol.RFID3.ZoneSequence.ZoneInfo)">
            <summary>
            Adds the Zone information to the Sequence
            </summary>
            <param name="zoneInfo">Information of the zone to be added</param>
        </member>
        <member name="M:Symbol.RFID3.ZoneSequence.Add(System.UInt16[])">
             <summary>
            Adds the Zones Ids on which the RFID operation to be performed, all the Antennas configured 
             in the Zone will participate in the operation, the order will be same as the configuration order.
             </summary>
             <param name="ZoneIds">The List Zone Ids on which we should perform RFID Operation</param>
        </member>
        <member name="M:Symbol.RFID3.ZoneSequence.Delete(Symbol.RFID3.ZoneSequence.ZoneInfo)">
            <summary>
            Delete  Zone information from the Sequence
            </summary>
            <param name="zoneInfo">Information of the zone to be added</param>
        </member>
        <member name="P:Symbol.RFID3.ZoneSequence.ZoneInfoList">
            <summary>
            get set methods for Zone Info
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ZoneSequence.Length">
            <summary>
            No of Zones in the Zone sequence
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ZoneSequence.ZoneInfo">
            <summary>
            The List of Zones along with Antenna Sequence on which RFID Operation to be performed,
            The Zones can be repeated to have finer control of the Operation Sequence.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ZoneSequence.ZoneInfo.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.ZoneSequence.ZoneInfo.#ctor(System.UInt16,System.UInt16[])">
             <summary>
            
             </summary>
             <param name="zoneId">The Zone ID of the Zone on which RFID operation to be performed</param>
             <param name="antennaIds">The List of Antennas of the Zone, on which the RFID operation to be performed</param>
        </member>
        <member name="M:Symbol.RFID3.ZoneSequence.ZoneInfo.#ctor(System.UInt16,System.UInt16[],Symbol.RFID3.OPERATION_QUALIFER)">
            <summary>
            
            </summary>
            <param name="zoneId">The Zone ID of the Zone on which RFID operation to be performed</param>
            <param name="antennaIds">The List of Antennas of the Zone, on which the RFID operation to be performed</param>
            <param name="zoneOperation">Operation to be performed on current Zone (C1G2)</param>
        </member>
        <member name="P:Symbol.RFID3.ZoneSequence.ZoneInfo.ZoneID">
            <summary>
            The Zone ID of the Zone on which RFID operation to be performed
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ZoneSequence.ZoneInfo.AntennaIdList">
            <summary>
            The List of Antennas of the Zone, on which the RFID operation to be performed
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ZoneSequence.ZoneInfo.AntennaOperationQualifier">
            <summary>
            Operation to be performed on current Zone
            </summary>
        </member>
        <member name="T:Symbol.RFID3.RFID_VERSION">
            <summary>
            RFID_VERSION is a member of CONNECTION_INFO.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_VERSION.RFID_API3_5_0">
            <summary>
            Basic version of RFIDAPI3 - Dll version 5.0.xx
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_VERSION.RFID_API3_5_1">
            <summary>
            RFID API3  - Dll version 5.1.xx
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_VERSION.RFID_API3_5_5">
            <summary>
            RFID API3 - Dll version 5.5.xx
            Supports features related to Periodic Reporting of Tags
            </summary>
        </member>
        <member name="T:Symbol.RFID3.RFID_EVENT_TYPE">
            <summary>
            Event Type: Parameter for RegisterEventNotification
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.GPI_EVENT">
            <summary>
             A GPI event (state change from high to low, or low to high) has occurred on a GPI port.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.TAG_READ_EVENT">
            <summary>
            Tag has arrived from Reader, Application can read it
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.BUFFER_FULL_WARNING_EVENT">
            <summary>
            When the internal buffers are 90% full, this event will be signaled.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.ANTENNA_EVENT">
            <summary>
            Antenna Connect/Disconnect
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.INVENTORY_START_EVENT">
            <summary>
            Inventory Operation has started
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.INVENTORY_STOP_EVENT">
            <summary>
            Inventory Operation has stopped
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.ACCESS_START_EVENT">
            <summary>
            Access Operation has started
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.ACCESS_STOP_EVENT">
            <summary>
            Access Operation has stopped
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.DISCONNECTION_EVENT">
            <summary>
            Reader has reported disconnection
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.BUFFER_FULL_EVENT">
            <summary>
             When the internal buffers are 100% full, this event will be signaled and 
             further tags are discarded.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.NXP_EAS_ALARM_EVENT">
            <summary>
            When a reader performing NXP_EAS_SCAN  has an NXP tag in FOV with it's EAS bit set, this event is raised.
            The alarm code returned by the tag and the ID of the antenna ,which communicated with the tag, are returned as Event Data to the user.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.READER_EXCEPTION_EVENT">
             <summary>
            Event notifying that an exception has occured in the Reader. 
            The Application can continue to use the connection if the reader renders is usable.
             </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.HANDHELD_TRIGGER_EVENT">
            <summary>
            A Handheld Gun/Button event Pull/Release has occurred.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.DEBUG_INFO_EVENT">
            <summary>
            Event Notifying that debug information reported by the reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFID_EVENT_TYPE.TEMPERATURE_ALARM_EVENT">
            <summary>
            Temperature Alarm 
            </summary>
        </member>
        <member name="T:Symbol.RFID3.READER_EXCEPTION_EVENT_TYPE">
            <summary>
            READER_EXCEPTION_EVENT_TYPE: Event indicating the reason for Reader exception.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.READER_EXCEPTION_EVENT_TYPE.UNKNOWN_EXCEPTION">
            <summary>
            Unknown exception. More data of the exception may be available in exceptionInfo.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.DISCONNECTION_EVENT_TYPE">
            <summary>
            DISCONNECTION_EVENT_TYPE: Event indicating the reason for Disconnection
            </summary>
        </member>
        <member name="F:Symbol.RFID3.DISCONNECTION_EVENT_TYPE.READER_INITIATED_DISCONNECTION">
            <summary>
            Disconnection notified from Reader 
            (For e.g. Disconnect initiated from the web-console).
            </summary>
        </member>
        <member name="F:Symbol.RFID3.DISCONNECTION_EVENT_TYPE.READER_EXCEPTION">
            <summary>
            Reader has reported an exception.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.DISCONNECTION_EVENT_TYPE.CONNECTION_LOST">
            <summary>
             Connection to Reader lost, say because of a network problem. 
             If the connection to the reader was inactive (no keep-alive
             message from the Reader) for a time greater 
             than 10 times the timeout as specified in RFID_Connect, this event
             will be triggered to the application.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ANTENNA_EVENT_TYPE">
            <summary>
            ANTENNA_EVENT_TYPE: Event indicating whether an antenna is connected or disconnected
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ANTENNA_EVENT_TYPE.ANTENNA_CONNECTED">
            <summary>
            Antenna is connected
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ANTENNA_EVENT_TYPE.ANTENNA_DISCONNECTED">
            <summary>
            Antenna is disconnected
            </summary>
        </member>
        <member name="T:Symbol.RFID3.GPI_PORT_STATE">
            <summary>
            GPI_PORT_STATE: State of a GPI port
            </summary>
        </member>
        <member name="F:Symbol.RFID3.GPI_PORT_STATE.GPI_PORT_STATE_LOW">
            <summary>
            GPI Port is low
            </summary>
        </member>
        <member name="F:Symbol.RFID3.GPI_PORT_STATE.GPI_PORT_STATE_HIGH">
            <summary>
            GPI Port is High
            </summary>
        </member>
        <member name="F:Symbol.RFID3.GPI_PORT_STATE.GPI_PORT_STATE_UNKNOWN">
            <summary>
            GPI Port is Unknown
            </summary>
        </member>
        <member name="T:Symbol.RFID3.HANDHELD_TRIGGER_EVENT_TYPE">
            <summary>
            HANDHELD_TRIGGER_EVENT_TYPE specifies the type trigger that occured.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.HANDHELD_TRIGGER_EVENT_TYPE.HANDHELD_TRIGGER_RELEASED">
            <summary>
            The Gun/Button on the Handheld device was released.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.HANDHELD_TRIGGER_EVENT_TYPE.HANDHELD_TRIGGER_PRESSED">
            <summary>
            The Gun/Button on the Handheld device was pressed.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.READER_ID_TYPE">
            <summary>
            READER_ID_TYPE: Specifies the Reader ID Type
            </summary>
        </member>
        <member name="F:Symbol.RFID3.READER_ID_TYPE.MAC_ADDRESS">
            <summary>
            Specifies the Reader ID is MAC address
            </summary>
        </member>
        <member name="F:Symbol.RFID3.READER_ID_TYPE.EPC_ID">
            <summary>
            Specifies the Reader ID is EPC ID
            </summary>
        </member>
        <member name="T:Symbol.RFID3.FORWARD_LINK_MODULATION">
            <summary>
            FORWARD_LINK_MODULATION: Part of RF_MODES
            </summary>
        </member>
        <member name="F:Symbol.RFID3.FORWARD_LINK_MODULATION.FORWARD_LINK_MODULATION_PR_ASK">
            <summary>
            Modulation: PR_ASK
            </summary>
        </member>
        <member name="F:Symbol.RFID3.FORWARD_LINK_MODULATION.FORWARD_LINK_MODULATION_SSB_ASK">
            <summary>
            Modulation: SSB_ASK
            </summary>
        </member>
        <member name="F:Symbol.RFID3.FORWARD_LINK_MODULATION.FORWARD_LINK_MODULATION_DSB_ASK">
            <summary>
            Modulation: DSB_ASK
            </summary>
        </member>
        <member name="T:Symbol.RFID3.MODULATION">
            <summary>
            MODULATION: Part of RF_MODES
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MODULATION.MV_FM0">
            <summary>
            Modulation (M Value): FM0
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MODULATION.MV_2">
            <summary>
            Modulation (M Value): 2
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MODULATION.MV_4">
            <summary>
            Modulation (M Value): 4
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MODULATION.MV_8">
            <summary>
            Modulation (M Value): 8
            </summary>
        </member>
        <member name="T:Symbol.RFID3.DIVIDE_RATIO">
            <summary>
            DIVIDE_RATIO: Part of RF_MODES
            </summary>
        </member>
        <member name="F:Symbol.RFID3.DIVIDE_RATIO.DR_8">
            <summary>
            Divide Ratio (DR): 8
            </summary>
        </member>
        <member name="F:Symbol.RFID3.DIVIDE_RATIO.DR_64_3">
            <summary>
            Divide Ratio (DR): 64/3
            </summary>
        </member>
        <member name="T:Symbol.RFID3.SPECTRAL_MASK_INDICATOR">
            <summary>
            SPECTRAL_MASK_INDICATOR indicates the Spectral mask characteristics of the mode.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SPECTRAL_MASK_INDICATOR.SMI_UNKNOWN">
            <summary>
            Spectral Mask Indicator - Unknown
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SPECTRAL_MASK_INDICATOR.SMI_SI">
            <summary>
            Spectral Mask Indicator - SI
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SPECTRAL_MASK_INDICATOR.SMI_MI">
            <summary>
            Spectral Mask Indicator - MI
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SPECTRAL_MASK_INDICATOR.SMI_DI">
            <summary>
            Spectral Mask Indicator - DI
            </summary>
        </member>
        <member name="T:Symbol.RFID3.COMMUNICATION_STANDARD">
            <summary>
            COMMUNICATION_STANDARD: Part of Reader capabilities
            </summary>
        </member>
        <member name="F:Symbol.RFID3.COMMUNICATION_STANDARD.UNSPECIFIED">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:Symbol.RFID3.COMMUNICATION_STANDARD.US_FCC_PART_15">
            <summary>
            US FCC Part 15
            </summary>
        </member>
        <member name="F:Symbol.RFID3.COMMUNICATION_STANDARD.ETSI_302_208">
            <summary>
            ETSI 302-208
            </summary>
        </member>
        <member name="F:Symbol.RFID3.COMMUNICATION_STANDARD.ETSI_300_220">
            <summary>
            ETSI 300-220
            </summary>
        </member>
        <member name="F:Symbol.RFID3.COMMUNICATION_STANDARD.AUSTRALIA_LIPD_1W">
            <summary>
            Australia LIPD 1W
            </summary>
        </member>
        <member name="F:Symbol.RFID3.COMMUNICATION_STANDARD.AUSTRALIA_LIPD_4W">
            <summary>
            Australia LIPD 4W
            </summary>
        </member>
        <member name="F:Symbol.RFID3.COMMUNICATION_STANDARD.JAPAN_ARIB_STD_T89">
            <summary>
            Japan: ARIB STD T89
            </summary>
        </member>
        <member name="F:Symbol.RFID3.COMMUNICATION_STANDARD.HONGKONG_OFTA_1049">
            <summary>
            Hong Kong: OFTA 1049
            </summary>
        </member>
        <member name="F:Symbol.RFID3.COMMUNICATION_STANDARD.TAIWAN_DGT_LP0002">
            <summary>
            Taiwan: DGT LP0002
            </summary>
        </member>
        <member name="F:Symbol.RFID3.COMMUNICATION_STANDARD.KOREA_MIC_ARTICLE_5_2">
            <summary>
            Korea: MIC Article 5-2
            </summary>
        </member>
        <member name="T:Symbol.RFID3.MEMORY_BANK">
            <summary>
            MEMORY_BANK: The four memory banks as supported by Class 1 Gen 2 Specification
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MEMORY_BANK.MEMORY_BANK_RESERVED">
            <summary>
            Reserved Memory: contain the kill and access passwords
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MEMORY_BANK.MEMORY_BANK_EPC">
            <summary>
            EPC Memory: Contains CRC, Protocol-Control Bits, EPC Code
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MEMORY_BANK.MEMORY_BANK_TID">
            <summary>
            TID Memory: Contains 8-bit class identifier and identifying information
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MEMORY_BANK.MEMORY_BANK_USER">
            <summary>
            User Memory: Contains user-specific data storage.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.START_TRIGGER_TYPE">
            <summary>
            START_TRIGGER_TYPE: Start Trigger Type Parameter for Inventory and Access Operations
            </summary>
        </member>
        <member name="F:Symbol.RFID3.START_TRIGGER_TYPE.START_TRIGGER_TYPE_IMMEDIATE">
            <summary>
            Start immediately when PerformInventory or PerformAccessSequence is called
            </summary>
        </member>
        <member name="F:Symbol.RFID3.START_TRIGGER_TYPE.START_TRIGGER_TYPE_PERIODIC">
            <summary>
            Start periodically 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.START_TRIGGER_TYPE.START_TRIGGER_TYPE_GPI">
            <summary>
            Start based on GPI Trigger
            </summary>
        </member>
        <member name="F:Symbol.RFID3.START_TRIGGER_TYPE.START_TRIGGER_TYPE_HANDHELD">
            <summary>
            Start based on Handheld Gun/Button Trigger
            </summary>
        </member>
        <member name="T:Symbol.RFID3.STOP_TRIGGER_TYPE">
            <summary>
            STOP_TRIGGER_TYPE: Stop Trigger Type Parameter for Inventory and Access operations
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STOP_TRIGGER_TYPE.STOP_TRIGGER_TYPE_IMMEDIATE">
            <summary>
            Stop immediately when StopInventory or StopAccessSequence is called
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STOP_TRIGGER_TYPE.STOP_TRIGGER_TYPE_DURATION">
            <summary>
            Stop after a specified duration
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STOP_TRIGGER_TYPE.STOP_TRIGGER_TYPE_GPI_WITH_TIMEOUT">
            <summary>
             Stop after a specified GPI Timeout
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STOP_TRIGGER_TYPE.STOP_TRIGGER_TYPE_TAG_OBSERVATION_WITH_TIMEOUT">
            <summary>
             Stop after a specified number of Tags are read
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STOP_TRIGGER_TYPE.STOP_TRIGGER_TYPE_N_ATTEMPTS_WITH_TIMEOUT">
            <summary>
             Stop after a specified number of attempts
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STOP_TRIGGER_TYPE.STOP_TRIGGER_TYPE_HANDHELD_WITH_TIMEOUT">
            <summary>
            Stop after a specified Handheld Trigger Gun/Button Timeout
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TRUNCATE_ACTION">
            <summary>
            TRUNCATE_ACTION indicates whether only a truncated portion of the tag is
            to be backscattered by the tag or not.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TRUNCATE_ACTION.TRUNCATE_ACTION_UNSPECIFIED">
            <summary>
            The Reader decides what truncate action to take.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TRUNCATE_ACTION.TRUNCATE_ACTION_DO_NOT_TRUNCATE">
            <summary>
            Do not truncate.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TRUNCATE_ACTION.TRUNCATE_ACTION_TRUNCATE">
            <summary>
            Truncate.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.SESSION">
            <summary>
            SESSION: Session Parameter for PerformInventory
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SESSION.SESSION_S0">
            <summary>
            Indicates to perform inventory based on Session S0
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SESSION.SESSION_S1">
            <summary>
            Indicates to perform inventory based on Session S1
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SESSION.SESSION_S2">
            <summary>
            Indicates to perform inventory based on Session S2
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SESSION.SESSION_S3">
            <summary>
            Indicates to perform inventory based on Session S3
            </summary>
        </member>
        <member name="T:Symbol.RFID3.INVENTORY_STATE">
            <summary>
            INVENTORY_STATE: Inventory-State Parameter for PerformInventory
            </summary>
        </member>
        <member name="F:Symbol.RFID3.INVENTORY_STATE.INVENTORY_STATE_A">
            <summary>
            Indicates to select tags in State A for session SESSION
            </summary>
        </member>
        <member name="F:Symbol.RFID3.INVENTORY_STATE.INVENTORY_STATE_B">
            <summary>
            Indicates to select tags in State B for session SESSION
            </summary>
        </member>
        <member name="F:Symbol.RFID3.INVENTORY_STATE.INVENTORY_STATE_AB_FLIP">
            <summary>
            Indicates to select tags in State AB and FLIP for session SESSION
            </summary>
        </member>
        <member name="T:Symbol.RFID3.FILTER_ACTION">
            <summary>
            Filter Action for the PreFilter: State Aware, Unaware or Default.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.FILTER_ACTION.FILTER_ACTION_DEFAULT">
            <summary>
            Target and Action will be based on Reader-Settings
            </summary>
        </member>
        <member name="F:Symbol.RFID3.FILTER_ACTION.FILTER_ACTION_STATE_AWARE">
            <summary>
            State Aware Filter action 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.FILTER_ACTION.FILTER_ACTION_STATE_UNAWARE">
            <summary>
            State Unaware Filter action
            </summary>
        </member>
        <member name="T:Symbol.RFID3.SL_FLAG">
            <summary>
            SL_FLAG: Select-Flag Parameter for PerformInventory
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SL_FLAG.SL_FLAG_ASSERTED">
            <summary>
            Indicates to select tags with SL flag TRUE
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SL_FLAG.SL_FLAG_DEASSERTED">
            <summary>
            Indicates to select tags with SL flag FALSE
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SL_FLAG.SL_ALL">
            <summary>
            Indicates to select tags with SL flag any
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TARGET">
            <summary>
            Target Parameter for StateAwareActionParams of PreFilter (C1G2 Select).
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TARGET.TARGET_SL">
            <summary>
            Perform inventory based on Target as SL bit
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TARGET.TARGET_INVENTORIED_STATE_S0">
            <summary>
            Perform inventory based on Target as Session S0
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TARGET.TARGET_INVENTORIED_STATE_S1">
            <summary>
            Perform inventory based on Target as Session S1
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TARGET.TARGET_INVENTORIED_STATE_S2">
            <summary>
            Perform inventory based on Target as Session S2
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TARGET.TARGET_INVENTORIED_STATE_S3">
            <summary>
            Perform inventory based on Target as Session S3
            </summary>
        </member>
        <member name="T:Symbol.RFID3.STATE_UNAWARE_ACTION">
            <summary>
            State Unaware Action Parameter for PreFilter (C1G2 Select).
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_UNAWARE_ACTION.STATE_UNAWARE_ACTION_SELECT_NOT_UNSELECT">
            <summary>
            Action 0: Matching tags: SELECT , Non-matching tags: UNSELECT
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_UNAWARE_ACTION.STATE_UNAWARE_ACTION_SELECT">
            <summary>
            Action 1: Matching tags: SELECT, Non-matching tags: do nothing
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_UNAWARE_ACTION.STATE_UNAWARE_ACTION_NOT_UNSELECT">
            <summary>
            Action 2: Matching tags: SELECT, Non-matching tags: do nothing
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_UNAWARE_ACTION.STATE_UNAWARE_ACTION_UNSELECT">
            <summary>
            Action 3: Matching tags: UNSELECT , Non-matching tags: do nothing
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_UNAWARE_ACTION.STATE_UNAWARE_ACTION_UNSELECT_NOT_SELECT">
            <summary>
            Action 4: Matching tags: SELECT , Non-matching tags: UNSELECT
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_UNAWARE_ACTION.STATE_UNAWARE_ACTION_NOT_SELECT">
            <summary>
            Action 5: Matching tags: do nothing, Non-matching tags: SELECT
            </summary>
        </member>
        <member name="T:Symbol.RFID3.STATE_AWARE_ACTION">
            <summary>
            State Aware Action Parameter for PreFilter (C1G2 Select).
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_INV_A_NOT_INV_B">
            <summary>
            Action 0: Matching tags: inventoried state to A, Non-matching tags: inventoried state to B
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_ASRT_SL_NOT_DSRT_SL">
            <summary>
            Action 0: Matching tags: assert SL , Non-matching tags: deassert SL
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_INV_A">
            <summary>
            Action 1: Matching tags: inventoried state to A, Non-matching tags: do nothing
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_ASRT_SL">
            <summary>
            Action 1: Matching tags: assert SL , Non-matching tags: do nothing
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_NOT_INV_B">
            <summary>
            Action 2: Matching tags: do nothing, Non-matching tags: inventoried state to B
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_NOT_DSRT_SL">
            <summary>
            Action 2: Matching tags: do nothing, Non-matching tags: deassert SL
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_INV_A2BB2A">
            <summary>
            Action 3: Matching tags: (A to B, B to A), Non-matching tags:  do nothing
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_INV_A2BB2A_NOT_INV_A">
            <summary>
            Action 3: Matching tags: (A to B, B to A), Non-matching tags:  do nothing
            [Obsolete("Do not use this enumeration. Use STATE_AWARE_ACTION_INV_A2BB2A")]
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_NEG_SL">
            <summary>
            Action 3: Matching tags: negate SL , Non-matching tags:  do nothing
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_NEG_SL_NOT_ASRT_SL">
            <summary>
            Action 3: Matching tags: negate SL , Non-matching tags:  do nothing
            [Obsolete("Do not use this enumeration. Use STATE_AWARE_ACTION_NEG_SL")]
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_INV_B_NOT_INV_A">
            <summary>
            Action 4: Matching tags: deassert SL, Non-matching tags:  assert SL
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_DSRT_SL_NOT_ASRT_SL">
            <summary>
            Action 4: Matching tags: inventoried state to B, Non-matching tags:   inventoried state to A
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_INV_B">
            <summary>
            Action 5: Matching tags: inventoried state to B, Non-matching tags:  do nothing
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_DSRT_SL">
            <summary>
            Action 5: Matching tags: deassert SL  , Non-matching tags:  do nothing
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_NOT_INV_A">
            <summary>
            Action 6: Matching tags: do nothing, Non-matching tags:  inventoried state to A
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_NOT_ASRT_SL">
            <summary>
            Action 6: Matching tags: do nothing, Non-matching tags:  assert SL
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_NOT_INV_A2BB2A">
            <summary>
            Action 7: Matching tags: do nothing, Non-matching tags:  (A to B, B to A)
            </summary>
        </member>
        <member name="F:Symbol.RFID3.STATE_AWARE_ACTION.STATE_AWARE_ACTION_NOT_NEG_SL">
            <summary>
            Action 7: Matching tags: do nothing, Non-matching tags:  negate SL
            </summary>
        </member>
        <member name="T:Symbol.RFID3.LOCK_PRIVILEGE">
            <summary>
            LOCK_PRIVILEGE: Privilege Parameter for Lock
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LOCK_PRIVILEGE.LOCK_PRIVILEGE_NONE">
            <summary>
            This is the default Value for privilege field. 
            This value indicates that when user is calling Lock, he  
            doesn't want to change the lock privilege of the particular memory bank
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LOCK_PRIVILEGE.LOCK_PRIVILEGE_READ_WRITE">
            <summary>
            Lock Privilege: Read-Write
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LOCK_PRIVILEGE.LOCK_PRIVILEGE_PERMA_LOCK">
            <summary>
            Lock Privilege: Permanent Lock
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LOCK_PRIVILEGE.LOCK_PRIVILEGE_PERMA_UNLOCK">
            <summary>
            Lock Privilege: Permanent unlock
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LOCK_PRIVILEGE.LOCK_PRIVILEGE_UNLOCK">
            <summary>
            Lock Privilege: Unlock
            </summary>
        </member>
        <member name="T:Symbol.RFID3.LOCK_DATA_FIELD">
            <summary>
            LOCK_DATA_FIELD: Lock-data field Parameter for Lock
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LOCK_DATA_FIELD.LOCK_KILL_PASSWORD">
            <summary>
            Lock the data field: Kill Password
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LOCK_DATA_FIELD.LOCK_ACCESS_PASSWORD">
            <summary>
            Lock the data field: Access Password
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LOCK_DATA_FIELD.LOCK_EPC_MEMORY">
            <summary>
            Lock the data field: EPC Memory
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LOCK_DATA_FIELD.LOCK_TID_MEMORY">
            <summary>
            Lock the data field: TID Memory
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LOCK_DATA_FIELD.LOCK_USER_MEMORY">
            <summary>
            Lock the data field: User Memory
            </summary>
        </member>
        <member name="T:Symbol.RFID3.RECOMMISSION_OPERATION_CODE">
            <summary>
            RECOMMISSION_OPERATION_CODE: 
            Operation Parameter for RFID_Recommission.
            Note: Options 3 and 7 are subject to change as functionality is not finalized.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RECOMMISSION_OPERATION_CODE.RECOMMISSION_DISABLE_PERMALOCK">
            <summary>
            The Block PermaLocking disabled, and any blocks of user memory that has been
            previously blocked permalocked are no longer block permalocked.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RECOMMISSION_OPERATION_CODE.RECOMMISSION_DISABLE_USER_MEMORY">
            <summary>
            The User Memory has been rendered inaccessible.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RECOMMISSION_OPERATION_CODE.RECOMMISSION_DISABLE_USER_MEMORY_2ND_OPTION">
            <summary>
            Same as RECOMMISSION_DISABLE_USER_MEMORY above.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RECOMMISSION_OPERATION_CODE.RECOMMISSION_DISABLE_PASSWORD">
            <summary>
            Unlock EPC, TID, and User memory banks has been unlocked and Render the kill 
            and access passwords permanently unreadable.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RECOMMISSION_OPERATION_CODE.RECOMMISSION_DISABLE_PERMALOCK_PASSWORD">
            <summary>
            Combines DISABLE_PERMALOCK and DISABLE_PASSWORD.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RECOMMISSION_OPERATION_CODE.RECOMMISSION_DISABLE_USER_MEMORY_PASSWORD">
            <summary>
            Combine DISABLE_USER_MEMORY and DISABLE_PASSWORD.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RECOMMISSION_OPERATION_CODE.RECOMMISSION_DISABLE_USER_MEMORY_PASSWORD_2ND_OPTION">
            <summary>
            Same as RECOMMISSION_DISABLE_USER_MEMORY_PASSWORD above.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ANTENNA_MODE">
            <summary>
            ANTENNA_MODE: Antenna mode setting for SetAntennaMode
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ANTENNA_MODE.ANTENNA_MODE_BISTATIC">
            <summary>
            Bi-static Antenna
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ANTENNA_MODE.ANTENNA_MODE_MONOSTATIC">
            <summary>
            Mono-static Antenna
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ACCESS_OPERATION_CODE">
            <summary>
            ACCESS_OPERATION_CODE: Operation Code for Operation Sequence
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_READ">
            <summary>
            Specifies Read operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_WRITE">
            <summary>
            Specifies Write operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_LOCK">
            <summary>
            Specifies Lock operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_KILL">
            <summary>
            Specifies Kill operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_BLOCK_WRITE">
            <summary>
            Specifies Block write operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_BLOCK_ERASE">
            <summary>
            Specifies Block erase operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_RECOMMISSION">
            <summary>
            Specifies Recommission operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_BLOCK_PERMALOCK">
            <summary>
            Specifies Block Permalock operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_NXP_SET_EAS">
            <summary>
            Specifies NXP's SetEAS Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_NXP_READ_PROTECT">
            <summary>
            Specifies NXP's SetQuiet Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_NXP_RESET_READ_PROTECT">
            <summary>
            Specifies NXP's ResetQuiet Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_FUJITSU_CHANGE_WORDLOCK">
            <summary>
            Specifies Fujitsu's ChangeWordLock Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_FUJITSU_CHANGE_BLOCKLOCK">
            <summary>
            Specifies Fujitsu's ChangeBlockLock Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_FUJITSU_READ_BLOCKLOCK">
            <summary>
            Specifies Fujitsu's ReadBlockLock Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_FUJITSU_BURST_WRITE">
            <summary>
            Specifies Fujitsu's BurstWrite Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_FUJITSU_BURST_ERASE">
            <summary>
            Specifies Fujitsu's BurstErase Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_FUJITSU_CHANGE_BLOCK_OR_AREA_GROUPPASSWORD">
            <summary>
            Specifies Fujitsu's ChangeBlockOrAreaGroupPassword Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_FUJITSU_AREA_READLOCK">
            <summary>
            Specifies Fujitsu's Area ReadLock Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_FUJITSU_AREA_WRITELOCK">
            <summary>
            Specifies Fujitsu's Area WriteLock Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_FUJITSU_AREA_WRITELOCK_WOPASSWORD">
            <summary>
            Specifies Fujitsu's Area WriteLockWOPassword Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_IMPINJ_QT_WRITE">
            <summary>
            Specifies Impinj's QTWrite Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_IMPINJ_QT_READ">
            <summary>
            Specifies Impinj's QTRead Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_NXP_CHANGE_CONFIG">
            <summary>
            Specifies NXP's ChangeConfig Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_CODE.ACCESS_OPERATION_NONE">
            <summary>
            Specifies no Access operation. Should not be used for 
            AccessOperationCode in TagAccess.Sequence.Operation
            </summary>
        </member>
        <member name="T:Symbol.RFID3.WRITE_FIELD_CODE">
            <summary>
            WRITE_FIELD_CODE: Specific Field of Write operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.WRITE_FIELD_CODE.WRITE_FIELD_TAGID">
            <summary>
            Specifies TagID field of Write operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.WRITE_FIELD_CODE.WRITE_FIELD_KILLPASSWORD">
            <summary>
            Specifies Kill password of Write operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.WRITE_FIELD_CODE.WRITE_FIELD_ACCESSPASSWORD">
            <summary>
            Specifies Access password of Write operation
            </summary>
        </member>
        <member name="T:Symbol.RFID3.READER_TYPE">
            <summary>
            READER_TYPE: Used in Reader-Management API: Login
            </summary>
        </member>
        <member name="F:Symbol.RFID3.READER_TYPE.XR">
            <summary>
            All Readers of XR Series
            </summary>
        </member>
        <member name="F:Symbol.RFID3.READER_TYPE.FX">
            <summary>
            All Readers of FX Series
            </summary>
        </member>
        <member name="F:Symbol.RFID3.READER_TYPE.MC">
            <summary>
            All (LLRP compliant) Readers of MC Series
            </summary>
        </member>
        <member name="T:Symbol.RFID3.FILTER_MATCH_PATTERN">
            <summary>
            Post Filter: Match Pattern
            </summary>
        </member>
        <member name="T:Symbol.RFID3.MATCH_RANGE">
            <summary>
            MATCH_RANGE specifies the Selection for match range.
            It is a member of RSSI_RANGE_FILTER and TIME_RANGE_FILTER. 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MATCH_RANGE.WITHIN_RANGE">
            <summary>
            Within range; between lower and upper time limits, lower and upper limit inclusive. 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MATCH_RANGE.OUTSIDE_RANGE">
            <summary>
            Outside range; outside lower and upper time limits, lower and upper limit inclusive. 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MATCH_RANGE.GREATER_THAN_LOWER_LIMIT">
            <summary>
            Greater than lower limit; Greater than lower time limit,
            lower limit inclusive, upper limit ignored. 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MATCH_RANGE.LOWER_THAN_UPPER_LIMIT">
            <summary>
            Lower than upper limit; Lower than upper time limit, upper limit inclusive, lower limit ignored.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TRACE_LEVEL">
            <summary>
            TRACE_LEVEL: Trace-level setting for SetTraceLevel
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TRACE_LEVEL.TRACE_LEVEL_OFF">
            <summary>
            Disable all traces
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TRACE_LEVEL.TRACE_LEVEL_FATAL">
            <summary>
            Set trace-level to see Fatal Errors
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TRACE_LEVEL.TRACE_LEVEL_ERROR">
            <summary>
            Set trace-level to see Errors
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TRACE_LEVEL.TRACE_LEVEL_WARNING">
            <summary>
            Set trace-level to see Warnings
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TRACE_LEVEL.TRACE_LEVEL_INFO">
            <summary>
            Set trace-level to see info
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TRACE_LEVEL.TRACE_LEVEL_VERBOSE">
            <summary>
            Set trace-level to see verbose
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TRACE_LEVEL.TRACE_LEVEL_ALL">
            <summary>
            Enable all traces
            </summary>
        </member>
        <member name="T:Symbol.RFID3.READER_ID_LENGTH">
            <summary>
            READER ID Length
            </summary>
        </member>
        <member name="T:Symbol.RFID3.SERVICE_ID">
            <summary>
            SERVICE ID specifies the Application/ Component
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SERVICE_ID.RM">
            <summary>
            RM Server
            </summary>
        </member>
        <member name="F:Symbol.RFID3.SERVICE_ID.LLRP_SERVER">
            <summary>
            LLRP Server
            </summary>
        </member>
        <member name="T:Symbol.RFID3.HEALTH_STATUS">
            <summary>
            HEALTH status specifies whether it is up/down
            </summary>
        </member>
        <member name="F:Symbol.RFID3.HEALTH_STATUS.DOWN">
            <summary>
            DOWN
            </summary>
        </member>
        <member name="F:Symbol.RFID3.HEALTH_STATUS.UP">
            <summary>
            UP
            </summary>
        </member>
        <member name="T:Symbol.RFID3.USB_OPERATION_MODE">
            <summary>
            USB_OPERATION_MODE specifies the operation mode of USB setting on the Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.USB_OPERATION_MODE.ACTIVE_SYNC">
            <summary>
            Indicates that activeSync will be enabled over USB connection
            </summary>
        </member>
        <member name="F:Symbol.RFID3.USB_OPERATION_MODE.NETWORK">
            <summary>
            Indicates that RNDIS will be enabled over USB connection
            </summary>
        </member>
        <member name="T:Symbol.RFID3.LED_COLOR">
            <summary>
            LED_COLOR specifies the user LED color on the Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LED_COLOR.LED_OFF">
            <summary>
            Indicates that the LED is off
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LED_COLOR.LED_RED">
            <summary>
            Indicates that the LED is red
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LED_COLOR.LED_GREEN">
            <summary>
            Indicates that the LED is green
            </summary>
        </member>
        <member name="F:Symbol.RFID3.LED_COLOR.LED_YELLOW">
            <summary>
            Indicates that the LED is yellow
            </summary>
        </member>
        <member name="T:Symbol.RFID3.RFIDResults">
            <summary>
            Contains the status of function execution result 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_API_SUCCESS">
            <summary>
            Function succeeded
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_API_COMMAND_TIMEOUT">
            <summary>
            Command timeout
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_API_PARAM_ERROR">
            <summary>
            Invalid parameter given
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_API_PARAM_OUT_OF_RANGE">
            <summary>
            Parameter out of range
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_API_CANNOT_ALLOC_MEM">
            <summary>
            Cannot allocate memory
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_API_UNKNOWN_ERROR">
            <summary>
            Unable to determine error
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_API_INVALID_HANDLE">
            <summary>
            Invalid Handle is provided
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_API_BUFFER_TOO_SMALL">
            <summary>
            Assigned memory buffer is small
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_READER_FUNCTION_UNSUPPORTED">
            <summary>
            Functionality Not Supported by Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_RECONNECT_FAILED">
            <summary>
            Unable to Reconnect to reader. The Reader state 
            might have changed. Attempt Connect API instead of Reconnect API.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_API_DATA_NOT_INITIALISED">
            <summary>
            DATA should be initialized before using the structure
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_API_ZONE_ID_ALREADY_EXITS">
            <summary>
            Zone ID already exists
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_API_ZONE_ID_NOT_FOUND">
            <summary>
            Zone ID not found
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_COMM_OPEN_ERROR">
            <summary>
            Unable to open connection to the reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_COMM_CONNECTION_ALREADY_EXISTS">
            <summary>
            Connection Already exists
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_COMM_RESOLVE_ERROR">
            <summary>
            Unable to resolve IP or Host Name
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_COMM_SEND_ERROR">
            <summary>
             Error writing to transport interface
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_COMM_RECV_ERROR">
            <summary>
            Error reading from transport interface
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_COMM_NO_CONNECTION">
            <summary>
            No Connection exists to the Host
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_INVALID_SOCKET">
            <summary>
            Invalid socket of reader passed to accept Connection
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_READER_REGION_NOT_CONFIGURED">
            <summary>
             Region of the Reader is not configured
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_READER_REINITIALIZING">
            <summary>
            Reader is reinitializing after a Firmware/OEM update
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_SECURE_CONNECTION_ERROR">
            <summary>
            Secure connection error. Process connStatus in SEC_CONNECTION_INFO for additional info 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ROOT_SECURITY_CERTIFICATE_ERROR">
            <summary>
            Root CA Security certificate missing or invalid
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_HOST_SECURITY_CERTIFICATE_ERROR">
            <summary>
            Host Security certificate missing or invalid
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_HOST_SECURITY_KEY_ERROR">
            <summary>
            Host private key missing or invalid
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_CONFIG_GET_FAILED">
            <summary>
            Unable to get the configuration
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_CONFIG_SET_FAILED">
            <summary>
            Unable to set the configuration
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_CAP_NOT_SUPPORTED">
            <summary>
            The specified capability is not supported
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_CAP_GET_FAILED">
            <summary>
            Unable to get the capability
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_FILTER_NO_FILTER">
            <summary>
            No Filter criteria specified
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_FILTER_INVALID_INDEX">
            <summary>
            Invalid index specified
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_FILTER_MAX_FILTERS_EXCEEDED">
            <summary>
            Reached limit for maximum number of filters that can be added
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_NO_READ_TAGS">
            <summary>
            No read Tags
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_NO_REPORTED_EVENTS">
            <summary>
             No Events have been reported from the Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_INVENTORY_MAX_TAGS_EXCEEDED">
            <summary>
            Tag List is full, tag cannot be stored
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_INVENTORY_IN_PROGRESS">
            <summary>
            Inventory in progress, cannot perform requested operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_NO_INVENTORY_IN_PROGRESS">
            <summary>
            There is no Inventory in progress
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_TAG_LOCATING_IN_PROGRESS">
            <summary>
            Tag Locationing in progress
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_NO_TAG_LOCATING_IN_PROGRESS">
            <summary>
            No Tag locationing operation in progress
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_NXP_EAS_SCAN_IN_PROGRESS">
            <summary>
            NXP Electronic Article Surveillance(EAS) Scan in progress
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_NO_NXP_EAS_SCAN_IN_PROGRESS">
            <summary>
            No NXP Electronic Article Surveillance(EAS) Scan in progress
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_IN_PROGRESS">
            <summary>
            Access Operation in progress, cannot perform requested operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_NO_ACCESS_IN_PROGRESS">
            <summary>
            There is no Access operation in progress
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_TAG_READ_FAILED">
            <summary>
            Tag read failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_TAG_WRITE_FAILED">
            <summary>
            Tag Lock failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_TAG_LOCK_FAILED">
            <summary>
            Tag Lock failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_TAG_KILL_FAILED">
            <summary>
            Tag Kill failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_TAG_BLOCK_ERASE_FAILED">
            <summary>
            Tag Block Erase failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_TAG_BLOCK_WRITE_FAILED">
            <summary>
            Tag Block Write failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_TAG_NOT_FOUND">
            <summary>
            Tag(s) not found in the field which matches the set Filter(s)
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_SEQUENCE_NOT_INITIALIZED">
            <summary>
            Access Sequence is not initialized
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_SEQUENCE_EMPTY">
            <summary>
            Access Sequence is Empty
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_SEQUENCE_IN_USE">
            <summary>
            Access Sequence is already in use
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_SEQUENCE_MAX_OP_EXCEEDED">
            <summary>
            Reached limit for maximum number of operations that can be added into Access-Sequence
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_TAG_RECOMMISSION_FAILED">
            <summary>
            Tag Recommission failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_TAG_BLOCK_PERMALOCK_FAILED">
            <summary>
            Tag Block Permalock failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_NXP_TAG_SET_EAS_FAILED">
            <summary>
            Tag SetEAS failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_NXP_TAG_READ_PROTECT_FAILED">
            <summary>
            Tag SetQuiet failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_FUJITSU_CHANGE_WORDLOCK_FAILED">
            <summary>
            Tag Change WordLock failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_FUJITSU_CHANGE_BLOCKLOCK_FAILED">
            <summary>
            Tag Change BlockLock failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_FUJITSU_READ_BLOCKLOCK_FAILED">
            <summary>
            Tag Read BlockLock failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_FUJITSU_BURST_WRITE_FAILED">
            <summary>
            Tag Burst Write failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_FUJITSU_BURST_ERASE_FAILED">
            <summary>
            Tag Burst Erase failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_FUJITSU_CHANGE_BLOCK_OR_AREA_GROUPPASSWORD_FAILED">
            <summary>
            Tag Change BlockOrAreaGroup Passowrd failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_FUJITSU_AREA_READLOCK_FAILED">
            <summary>
            Tag Area ReadLock failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_FUJITSU_AREA_WRITELOCK_FAILED">
            <summary>
            Tag Area WriteLock failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_FUJITSU_AREA_WRITELOCK_WOPASSWORD_FAILED">
            <summary>
            Tag Area WriteLockWOPassword failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_NXP_CHANGE_CONFIG_FAILED">
            <summary>
            NXP G2iL Tag's Change Config failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_IMPINJ_QT_READ_FAILED">
            <summary>
            Impinj QT tag's QT Read failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_ACCESS_IMPINJ_QT_WRITE_FAILED">
            <summary>
            Impinj QT tag's QT Write failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_RM_INVALID_USERNAME_PASSWORD">
            <summary>
            Invalid Username or password
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_RM_NO_UPDATION_IN_PROGRESS">
            <summary>
            No Updation going on at present
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_RM_UPDATION_IN_PROGRESS">
            <summary>
            Updation already in progress
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_RM_COMMAND_FAILED">
            <summary>
            RM Command processing failed
            </summary>
        </member>
        <member name="F:Symbol.RFID3.RFIDResults.RFID_INVALID_ERROR_CODE">
            <summary>
            Invalid Error-Code
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ACCESS_OPERATION_STATUS">
            <summary>
            Contains the status of Access Operation execution result 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_STATUS.ACCESS_SUCCESS">
            <summary>
            Tag Operation (Read/BlockPermalock) succeeded
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_STATUS.ACCESS_TAG_NON_SPECIFIC_ERROR">
            <summary>
            Non-Specific Tag Error
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_STATUS.ACCESS_READER_NON_SPECIFIC_ERROR">
            <summary>
            Non-Specific Reader Error
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_STATUS.ACCESS_NO_RESPONSE_FROM_TAG">
            <summary>
            No response from Tag
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_STATUS.ACCESS_INSUFFIFICENT_POWER">
            <summary>
            Operation Failed due to insufficient Power
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_STATUS.ACCESS_INSUFFICIENT_POWER">
            <summary>
            Operation Failed due to insufficient Power
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_STATUS.ACCESS_TAG_MEMORY_LOCKED_ERROR">
            <summary>
            Operation Failed as Tag memory was locked
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_STATUS.ACCESS_TAG_MEMORY_OVERRUN_ERROR">
            <summary>
            Operation Failed due to memory overrun
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ACCESS_OPERATION_STATUS.ACCESS_ZERO_KILL_PASSWORD_ERROR">
            <summary>
            Operation Failed as Kill password provided was zero
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TAG_FIELD">
            <summary>
             TAG_FIELD specifies the fields to be enabled in TAG_DATA.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.ANTENNA_ID">
            <summary>
            Fetch AntennaID on which Tag was found from Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.FIRST_SEEN_TIME_STAMP">
            <summary>
            Fetch Tag's First Seen Time Stamp from Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.LAST_SEEN_TIME_STAMP">
            <summary>
            Fetch Tag's Last Seen Time Stamp from Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.PEAK_RSSI">
            <summary>
            Fetch RSSI of the tag from Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.TAG_SEEN_COUNT">
            <summary>
            Fetch Tag Seen Count of the tag from Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.PC">
            <summary>
            Fetch Tag's PC field from Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.XPC">
            <summary>
            Fetch Tag's XPC field from Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.CRC">
            <summary>
            Fetch Tag's CRC field from Reader
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.CHANNEL_INDEX">
            <summary>
             Fetch the Channel Index on which the Tag was found
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.PHYSICAL_PORT">
            <summary>
             Fetch the Transmit and receive port of the Antenna
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.ZONE_ID">
            <summary>
            Fetch the Zone ID of the Inventory opertaion
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.ZONE_NAME">
            <summary>
            Fetch the Zone Name of the Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.PHASE_INFO">
            <summary>
            Fetch the Phase Info
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_FIELD.ALL_TAG_FIELDS">
            <summary>
             Fetch all fields
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TAG_EVENT">
            <summary>
             TAG_EVENT specifies the event pertaining to a Tag reported via TAG_DATA.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_EVENT.UNKNOWN_STATE">
            <summary>
            This implies that the Tag is a result of autonomous mode operation and
            but the state of the tag is not known.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_EVENT.NEW_TAG_VISIBLE">
            <summary>
            This implies that the Tag is a result of autonomous mode operation and
            the tag is visible for the first time.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_EVENT.TAG_NOT_VISIBLE">
            <summary>
            This implies that the Tag is a result of autonomous mode operation and 
            the tag is not visible.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_EVENT.TAG_BACK_TO_VISIBILITY">
            <summary>
            This implies that the Tag is a result of autonomous mode operation and 
            the tag is back to visibility.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_EVENT.NONE">
            <summary>
            This implies that the Tag is not a result of autonomous mode operation.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TAG_EVENT_REPORT_TRIGGER">
            <summary>
            Tag Event Report Trigger
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_EVENT_REPORT_TRIGGER.NEVER">
            <summary>
            Disable new tag event reporting.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_EVENT_REPORT_TRIGGER.IMMEDIATE">
            <summary>
            This implies that the Tag is a result of autonomous mode operation and 
            but the state of the tag is not known.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TAG_EVENT_REPORT_TRIGGER.MODERATED">
            <summary>
            This implies that the Tag is a result of autonomous mode operation and
            </summary>
        </member>
        <member name="T:Symbol.RFID3.OPERATION_QUALIFER">
            <summary>
            This type defines nature of Operation on the specified Antenna
            </summary>
        </member>
        <member name="F:Symbol.RFID3.OPERATION_QUALIFER.C1G2_OPERATION">
            <summary>
            Inventory or Access Operation
            </summary>
        </member>
        <member name="F:Symbol.RFID3.OPERATION_QUALIFER.NXP_EAS_SCAN">
            <summary>
            Scannning for NXP's EAS (Electronic Article surveillance)
            </summary>
        </member>
        <member name="F:Symbol.RFID3.OPERATION_QUALIFER.LOCATE_TAG">
            <summary>
            Tag Locationing
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ANTENNA_STOP_TRIGGER_TYPE">
            <summary>
            Antenna Stop Trigger enumarations
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ANTENNA_STOP_TRIGGER_TYPE.ANTENNA_STOP_TRIGGER_TYPE_N_ATTEMPTS">
            <summary>
            Stop after No of attempts specified
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ANTENNA_STOP_TRIGGER_TYPE.ANTENNA_STOP_TRIGGER_TYPE_DURATION_MILLISECS">
            <summary>
            Stop on Millisecond timeout
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ANTENNA_STOP_TRIGGER_TYPE.ANTENNA_STOP_TRIGGER_TYPE_DURATION_SECS">
            <summary>
            Stop on Second timeout
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TEMPERATURE_SOURCE">
            <summary>
            Temperature Source
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TEMPERATURE_SOURCE.AMBIENT">
            <summary>
            Ambient Temperature
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TEMPERATURE_SOURCE.PA">
            <summary>
            PA Temperature
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ALARM_LEVEL">
            <summary>
            Alarm Level 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ALARM_LEVEL.LOW">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ALARM_LEVEL.HIGH">
            <summary>
            High
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ALARM_LEVEL.CRITICAL">
            <summary>
            Critical
            </summary>
        </member>
        <member name="T:Symbol.RFID3.BATTERY_STATUS">
            <summary> 
            typedef enum _BATTERY_STATUS charging, discharging, critical or unknown 
            </summary> 
        </member>
        <member name="F:Symbol.RFID3.BATTERY_STATUS.BATTERY_CHARGING">
            <summary> 
            battery charging 
            </summary> 
        </member>
        <member name="F:Symbol.RFID3.BATTERY_STATUS.BATTERY_DISCHARGING">
            <summary> 
            battery discharging 
            </summary> 
        </member>
        <member name="F:Symbol.RFID3.BATTERY_STATUS.BATTERY_LEVEL_CRITICAL">
            <summary> 
             battery level critical 
            </summary> 
        </member>
        <member name="F:Symbol.RFID3.BATTERY_STATUS.BATTERY_STATUS_UNKNOWN">
            <summary> 
            status is unknown 
            </summary> 
        </member>
        <member name="T:Symbol.RFID3.SYSTEMTIME">
            System Time 
        </member>
        <member name="T:Symbol.RFID3.STRUCT_INFO">
            Contains struct info 
        </member>
        <member name="T:Symbol.RFID3.SEC_CONNECTION_INFO">
            CONNECTION_INFO holds the information related to connection.
        </member>
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SEC_CONNECTION_INFO.validatePeerCert" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SEC_CONNECTION_INFO.sizeCertBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SEC_CONNECTION_INFO.clientCertBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SEC_CONNECTION_INFO.sizeKeyBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SEC_CONNECTION_INFO.clientKeyBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SEC_CONNECTION_INFO.sizePhraseBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SEC_CONNECTION_INFO.phraseBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SEC_CONNECTION_INFO.sizeRootCertBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SEC_CONNECTION_INFO.rootCertBuff" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SEC_CONNECTION_INFO.connStatus" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.SEC_CONNECTION_INFO.lpReserved" -->
        <member name="T:Symbol.RFID3.ACCESS_OPERATION_RESULT">
            *  Contains the result of AccessOperation on a particular tag.Applicable only when
               TagData.OpCode is one of ACCESS_OPERATION_FUJITSU_READ_BLOCKLOCK,ACCESS_OPERATION_FUJITSU_BURST_WRITE,
               ACCESS_OPERATION_FUJITSU_BURST_ERASE
               typedef struct _ACCESS_OPERATION_RESULT
               { 
               union
               {    
            	    
            		//	Result of Fujitsu's ReadBlockLock operation on a 64K Tag*
            		
            		    struct
            		    {
            		       UINT16 blockLockStatus;   // status of the 16 BlockLock flags inside the BlockGroup 
                	  	
            		     }FujitsuReadBlockLockResult; 
                		 
                		 
            	       
            		//  Result of Fujitsu's BurstWrite operation on a 64K Tag
            		   
            		     struct
            		     {
            		       UINT8 numberOfBytesNotWritten;
             		     }FujitsuBurstWriteResult;
                		 
                		 
            	       // Result of Fujitsu's BurstErase operation on a 64K Tag
            		    
            		     struct
            		     {
            	           UINT8 numberOfBytesNotErased;
                    
             		     }FujitsuBurstEraseResult;
                 *          
                 *           
                 *       // Impinj QT Data 
            		     IMPINJ_QT_DATA QTControlData;
                   };
                   DWORD reserved[2];
            }ACCESS_OPERATION_RESULT,*LPACCESS_OPERATION_RESULT;
        </member>
        <member name="T:Symbol.RFID3.ANTENNA_INFO">
            contains Antenna info to be used for Inventory or Access Operations
        </member>
        <member name="T:Symbol.RFID3.SERVER_INFO">
            contains timeout and version number to be used for accepting connection
        </member>
        <member name="T:Symbol.RFID3.STATE_AWARE_SINGULATION_ACTION">
            STATE_AWARE_SINGULATION_ACTION
            This structure contains State Aware Singulation Action parameters
        </member>
        <member name="T:Symbol.RFID3.SINGULATION_CONTROL">
            SINGULATION_CONTROL 
            This structure contains Singulation Control parameters
        </member>
        <member name="T:Symbol.RFID3.RF_MODE_TABLE_ENTRY">
            RF_MODES 
            This structure contains RF Mode table parameters
        </member>
        <member name="T:Symbol.RFID3.UHF_RF_MODE_TABLE">
            UHF_RF_MODE_TABLE 
            This structure contains RF Mode table parameters for each air protocol
        </member>
        <member name="T:Symbol.RFID3.RF_MODES">
            RF_MODES 
            This structure contains RF Mode table parameters
        </member>
        <member name="T:Symbol.RFID3.TRANSMIT_POWER_LEVEL_TABLE">
            Transmit Power Level Table
        </member>
        <member name="T:Symbol.RFID3.RECEIVE_SENSITIVITY_TABLE">
            Receive Sensitivity Table
        </member>
        <member name="T:Symbol.RFID3.FREQ_HOP_TABLE">
            Frequency Hope Table. Zero or more instance when hopping is true
        </member>
        <member name="T:Symbol.RFID3.FREQ_HOP_INFO">
            Frequency Hope Table Entry. 
        </member>
        <member name="T:Symbol.RFID3.FIXED_FREQ_INFO">
            Fixed Frequency Table. At most one instance only when hopping is false
        </member>
        <member name="T:Symbol.RFID3.PER_ANTENNA_RECEIVE_SENSITIVITY_RANGE">
            PerAntennaReceiveSensitivityRange Parameter
        </member>
        <member name="T:Symbol.RFID3.READER_CAPS">
            Reader capabilities
        </member>
        <member name="T:Symbol.RFID3.READER_ID">
            Reader ID in either MAC for EPC Format
        </member>
        <member name="T:Symbol.RFID3.GPI_TRIGGER">
            GPI_TRIGGER 
            This structure contains the Start-GPI-Trigger value
        </member>
        <member name="T:Symbol.RFID3.HANDHELD_TRIGGER">
            HANDHELD_TRIGGER contains the Trigger information for Handheld Gun/Button that can Start/Stop an operation, like Inventory, Access, TagLocationing, etc.
            Handheld Gun/Button based trigger can be specified for Start Trigger as well as Stop Trigger.
        </member>
        <member name="T:Symbol.RFID3.TRIGGER_WITH_TIMEOUT">
            TRIGGER_WITH_TIMEOUT 
            This structure contains the Start-GPI-Trigger value
        </member>
        <member name="T:Symbol.RFID3.PERIODIC_TRIGGER">
            Periodic Trigger
        </member>
        <member name="T:Symbol.RFID3.START_TRIGGER_VALUE">
            START_TRIGGER 
            This structure contains the Start-Trigger value
        </member>
        <member name="T:Symbol.RFID3.STOP_TRIGGER_VALUE">
            Stop Trigger value for Duration, Tag Observation. This structure should 
            be type-casted to STRUCT_HANDLE for value of STOP_TRIGGER.
            Stop Trigger
        </member>
        <member name="T:Symbol.RFID3.TAG_EVENT_REPORT_INFO">
            TAG_EVENT_REPORT_INFO specifies the configuraiton of events for the reader to 
            report tag state changes.
            It is a member of TRIGGER_INFO.
        </member>
        <member name="T:Symbol.RFID3.REPORT_TRIGGERS">
            REPORT TRIGGER specifies configuration diffrent type of reporting trigger mechanism
            1. periodic trigger report
        </member>
        <member name="T:Symbol.RFID3.TRIGGER_INFO">
            Contains Trigger Info
        </member>
        <member name="T:Symbol.RFID3.READER_STATS">
            
            Contains Reader Statistics
        </member>
        <member name="T:Symbol.RFID3.VERSION_INFO">
            Contains RFID Version Info
        </member>
        <member name="T:Symbol.RFID3.LOGIN_INFO">
            Holds the information related to Reader web console or 
            FTP Server details for firmware and configuration file upload
        </member>
        <member name="T:Symbol.RFID3.UP_TIME">
            contains Tag related information
        </member>
        <member name="T:Symbol.RFID3.TAG_STORAGE_SETTINGS">
            contains Tag storage settings
        </member>
        <member name="T:Symbol.RFID3.DISCONNECTION_EVENT_DATA">
            DISCONNECTION_EVENT_DATA - Structure which carries information on reason for 
            disconnection.
            This data corresponds to event - DISCONNECTION_EVENT.
        </member>
        <member name="T:Symbol.RFID3.READER_EXCEPTION_EVENT_DATA">
            READER_EXCEPTION_EVENT_DATA - Structure which carries information on reason for 
            reader exception.
            This data corresponds to event - DISCONNECTION_EVENT.
        </member>
        <member name="T:Symbol.RFID3.HANDHELD_TRIGGER_EVENT_DATA">
            HANDHELD_TRIGGER_EVENT_DATA carries the event information related to a trigger of the Handheld Gun/Button.
            This data corresponds to HANDHELD_TRIGGER_EVENT.
        </member>
        <member name="T:Symbol.RFID3.TEMPERATURE_ALARM_DATA">
            TEMPERATURE_ALARM_DATA contains data associated with an TEMPERATURE_ALARM_EVENT;
            It contains the PA/Ambient Temperature Status
        </member>
        <member name="T:Symbol.RFID3.STATE_AWARE_ACTION_PARAMS">
            STATE_AWARE_ACTION_PARAMS - contains state aware action parameters
        </member>
        <member name="T:Symbol.RFID3.FITER_ACTION_PARAMS">
            Inventory Filter criteria
        </member>
        <member name="T:Symbol.RFID3.TAG_PATTERN">
            Holds Tag Pattern criteria  for Post-Filter Operation
        </member>
        <member name="T:Symbol.RFID3.RSSI_RANGE_FILTER">
            RSSI_RANGE_FILTER is used to configure filter settings on the reader to filter tags based on the 
            received signal strength of the tag.
        </member>
        <member name="T:Symbol.RFID3.POST_FILTER">
            Holds Tag Filter criteria  for Inventory Operation
        </member>
        <member name="T:Symbol.RFID3.ACCESS_FILTER">
            Holds Tag Filter criteria  for Access Operation
        </member>
        <member name="T:Symbol.RFID3.ERROR_INFO">
            Last command execution failure details
        </member>
        <member name="T:Symbol.RFID3.READ_ACCESS_PARAMS">
            Parameters for Read Access Operation
        </member>
        <member name="T:Symbol.RFID3.WRITE_ACCESS_PARAMS">
            Parameters for Write Access Operation
        </member>
        <member name="T:Symbol.RFID3.WRITE_SPECIFIC_FIELD_ACCESS_PARAMS">
            Parameters for Write specific field like TagID, Kill password and Access passsword
        </member>
        <member name="T:Symbol.RFID3.KILL_ACCESS_PARAMS">
            Parameters for Kill Access Operation, which is Kill-Password
        </member>
        <member name="T:Symbol.RFID3.LOCK_ACCESS_PARAMS">
            Parameters for Lock Access Operation
        </member>
        <member name="T:Symbol.RFID3.BLOCK_ERASE_ACCESS_PARAMS">
            Parameters for Block-Erase Access Operation
        </member>
        <member name="T:Symbol.RFID3.OP_CODE_PARAMS">
            Parameters for Operation Sequence
        </member>
        <member name="T:Symbol.RFID3.RECOMMISSION_ACCESS_PARAMS">
            RECOMMISSION_ACCESS_PARAMS contains the parameters for Recommission Access Operation.
        </member>
        <member name="T:Symbol.RFID3.BLOCK_PERMALOCK_ACCESS_PARAMS">
            BLOCK_PERMALOCK_ACCESS_PARAMS contains the parameters for BlockPermalock Access Operation.
        </member>
        <member name="F:Symbol.RFID3.ZONE_CONFIG.zoneName">
            <summary>
            Name of the Zone
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ZONE_CONFIG.antennaCount">
            <summary>
            No of Antenna s in the Zone
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ZONE_CONFIG.lpAntennaConfigurarations">
            <summary>
            Configuration of the Antennas in the Zone
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ZONE_CONFIG.lpzoneGlobalAntennaConfig">
            <summary>
            Global Antenna Configuration of all the Antennas in the Zone
            </summary>
        </member>
        <member name="F:Symbol.RFID3.ZONE_CONFIG.reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:Symbol.RFID3.PROFILE_LIST_PRIVATE">
            PROFILE_LIST gives the list of profiles available at  the Reader.
        </member>
        <member name="T:Symbol.RFID3.READER_SYSTEM_INFO">
            Holds the Reader System Information
        </member>
        <member name="T:Symbol.RFID3.LED_INFO">
            Holds the Reader LED Information
        </member>
        <member name="T:Symbol.RFID3.READER_INFO">
            Holds information on the Reader's name, location, description and contact.
        </member>
        <member name="T:Symbol.RFID3.SEC_LLRP_CONFIG">
            SECURE_LLRP_CONFIG configures parameters for secure mode LLRP operation
            Holds information on the Secure LLRP Connection Configuration.
        </member>
        <member name="T:Symbol.RFID3.LLRP_CONNECTION_CONFIG">
            Holds information on the LLRP Connection Configuration.
        </member>
        <member name="T:Symbol.RFID3.USB_OPERATION_INFO">
            Provides information of the reader's USB operation mode.
        </member>
        <member name="T:Symbol.RFID3.USER_APP_LIST_DATA">
            USER_APP_LIST gives the list of installed user applications and related information.
        </member>
        <member name="F:Symbol.RFID3.USER_APP_LIST_DATA.appName">
            <summary>
            Name of the installed application.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.USER_APP_LIST_DATA.runStatus">
            <summary>
            current run status of the application
            </summary>
        </member>
        <member name="F:Symbol.RFID3.USER_APP_LIST_DATA.autoStart">
            <summary>
            Specifies whether the application is to be started automatically upon bootup.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.USER_APP_LIST_DATA.metaData">
            <summary>
            Application Metadata
            </summary>
        </member>
        <member name="T:Symbol.RFID3.CABLE_LOSS_COMPENSATION">
            CABLE_LOSS_COMPENSATION gives the way to set/get the cable loss compensation factor.
        </member>
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.CABLE_LOSS_COMPENSATION.cableLengthInFt" -->
        <!-- Badly formed XML comment ignored for member "F:Symbol.RFID3.CABLE_LOSS_COMPENSATION.cableLossPer100Ft" -->
        <member name="T:Symbol.RFID3.TIME_ZONE_LIST_PRIVATE">
            TIME_ZONE_LIST_PRIVATE gives the list of time zone information available at the Reader.
        </member>
        <!-- Badly formed XML comment ignored for member "T:Symbol.RFID3.SLED_BATTERY_STATUS" -->
        <member name="F:Symbol.RFID3.SLED_BATTERY_STATUS.batteryLevel">
            <summary> 
            Battery level in percantage (%) 
            </summary> 
        </member>
        <member name="F:Symbol.RFID3.SLED_BATTERY_STATUS.status">
            <summary> 
            status (charging\discharging or critical) 
            </summary> 
        </member>
        <member name="F:Symbol.RFID3.SLED_BATTERY_STATUS.reserved">
            <summary> 
            Reserved 
            </summary> 
        </member>
        <member name="T:Symbol.RFID3.Actions">
            <summary>
            This class represents the set of all operations that can be performed
            on the reader like Inventory and Access operations using various type of 
            filters.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Actions.Inventory">
            <summary>
            The Inventory Operations Object.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Actions.TagAccess">
            <summary>
            The Tag Access Operations Object
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Actions.PreFilters">
            <summary>
            The Pre-Filter Object for Inventory
            </summary>
        </member>
        <member name="F:Symbol.RFID3.Actions.TagLocationing">
            <summary>
            The Tag-Locationing Object
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Actions.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Actions.GetReadTags(System.Int32)">
            <summary>
            This method fetches a array of Tags that was read by the reader. 
            Tags will be read from the Reader using methods: Actions.Inventory.Perform or 
            Actions.TagAccess.ReadEvent or Actions.TagAccess.ReadWait.
            </summary>
            <param name="numberOfTags">Number of Tags that is to be fetched</param>
            <returns>An array of TagData if the method succeeds or an empty array if no Tags were 
            available</returns>
        </member>
        <member name="M:Symbol.RFID3.Actions.PurgeTags">
            <summary>
            This method purges all tags present in Dll and Reader queues
            </summary>
            <returns>True if the method succeeds or False if fails</returns>
        </member>
        <member name="T:Symbol.RFID3.AntennaInfo">
            <summary>
            This class contains the information about the Antennas on which an operation is to be performed.
            Inventory or Access can be performed on a list of selected Antenna.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.AntennaInfo.#ctor">
            <summary>
             The constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.AntennaInfo.#ctor(System.UInt16[])">
            <summary>
            The constructor to initialize the AntennaInfo.
            </summary>
            <param name="antennaID">ushort array containing the array of AntennaID.</param>
        </member>
        <member name="M:Symbol.RFID3.AntennaInfo.#ctor(System.UInt16[],Symbol.RFID3.OPERATION_QUALIFER[])">
            <summary>
            Antenna Info Constructor
            </summary>
            <param name="antennaID">Antenna ID</param>
            <param name="antennaOper">Operation Qualifier</param>
        </member>
        <member name="P:Symbol.RFID3.AntennaInfo.AntennaID">
            <summary>
            Array of AntennaID on which an Action is to be performed.
            AntennaID should be a non-zero value with in the limits of
            the maximum number of antennas supported by the reader.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.AntennaInfo.OperationQualifier">
            <summary>
            Array of Operations for each Antenna ID in AntennaID array
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Inventory">
            <summary>
            This class handles Inventory operations.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Inventory.Perform">
            <summary>
            Invoking this method starts an Inventory operation at the Reader, on all connected Antennas.
            Default inventory operation takes no Post-Filters and Start/Stop Trigger Criteria.
            Inventory starts immediatly and stops when Stop() is invoked.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Inventory.Perform(Symbol.RFID3.PostFilter,Symbol.RFID3.TriggerInfo,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs the Inventory operation using the supplied parameters.
            </summary>
            <param name="postFilterInfo">Post Filter to be used for the Inventory. 
            If null, no post filters will be used.</param>
            <param name="triggerInfo">Start and Stop Criteria for the Inventory, and criteria
            for reporting Tags.
            If null, no trigger criteria will be used, which means 
            Inventory starts immediatly and stops when Stop() is invoked.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.Inventory.Perform(Symbol.RFID3.ZoneSequence)">
            <summary>
            Invoking this method starts an Inventory operation at the Reader, on the Specified Zones Antennas.
            inventory operation takes no Post-Filters and Start/Stop Trigger Criteria.
            Inventory starts immediatly and stops when Stop() is invoked. 
            </summary>
            <param name="zoneSequence">The List of Zones on which RFID Operation to be performed</param>
        </member>
        <member name="M:Symbol.RFID3.Inventory.Perform(Symbol.RFID3.PostFilter,Symbol.RFID3.TriggerInfo,Symbol.RFID3.AntennaInfo,Symbol.RFID3.ZoneSequence)">
            <summary>
            Invoking this method starts an Inventory operation at the Reader, on the Specified Zones Antennas.
            inventory operation performed with supplied parameters.
            Inventory starts immediatly and stops when Stop() is invoked.
            </summary>
            <param name="postFilterInfo">Post Filter to be used for the Inventory. 
            If null, no post filters will be used.</param>
            <param name="triggerInfo">Start and Stop Criteria for the Inventory, and criteria
            for reporting Tags.
            If null, no trigger criteria will be used, which means 
            Inventory starts immediatly and stops when Stop() is invoked.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            no operation will be performed, these antennas will be considered without Zones</param>
            <param name="zoneSequence">The List of Zones on which RFID Operation to be performed</param>
        </member>
        <member name="M:Symbol.RFID3.Inventory.Stop">
            <summary>
            This methods stops an ongoing Inventory.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagLocationing">
            <summary>
            This class handles tag locationing functionality
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagLocationing.Perform(System.String,Symbol.RFID3.AntennaInfo)">
            <summary>
            Performs the Tag locationing operation. Resultant TagData reported will contain the locationing result in LocationInfo.
            </summary>
            <param name="tagID">EPC-Id of the Tag to be located.</param>
            <param name="antennaInfo">Locationing can be performed only on single antenna. AntennaInfo shall specify the antenna on which the 
            locationing is to be performed.</param>
        </member>
        <member name="M:Symbol.RFID3.TagLocationing.Stop">
            <summary>
            Stops the Tag Locationing operation.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagAccess">
            <summary>
            This class handles all the Tag Access operations. Access operations include 
            Read, Write, Lock, Kill, BlockWrite, BlockErase.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.OperationSequence">
            <summary>
            Used to perform a sequence of Access operations.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.NXP">
            <summary>
            Used to call perform NXP's operations like SetEAS,ReadProtect,ResetReadProtect
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Fujitsu">
            <summary>
            Used to perform Fujitsu's custom operations on both 8K and 64K Fujitsu tags.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Impinj">
            <summary>
            Used to perform Impinj's custom operations like QTWrite, QTRead.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.ReadWait(System.String,Symbol.RFID3.TagAccess.ReadAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to read memory bank data from a specific tag.
            </summary>
            <param name="tagID">EPC-ID of the Tag on which the Read operation is to be performed.</param>
            <param name="readAccessParams">Parameters required for the Read operation.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
            <returns>TagData corresponding to the Tag on which the read operation was performed. </returns>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.ReadEvent(Symbol.RFID3.TagAccess.ReadAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to read memory bank data from tags that match the AccessFilter
            criteria if specified. Tags will be reported as notifications if the application has 
            registered for Events.ReadNotify event. Else the Tags will be fetched using GetReadTags(s) methods.
            Completion of Access operation will be reported as Events.StatusNotify event of type
            ACCESS_STOP_EVENT.
            </summary>
            <param name="readAccessParams">Parameters required for the Read operation.</param>
            <param name="accessFilter">Access Filter which determines the Tags on which the 
            Access operation is to be performed. If this is null, operation will be perfomed 
            without any access filters.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.WriteWait(System.String,Symbol.RFID3.TagAccess.WriteAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to write data to the memory bank of a specific tag.
            </summary>
            <param name="tagID">EPC-ID of the Tag on which the Write operation is to be performed.</param>
            <param name="writeAccessParams">Parameters required for the Write operation.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.WriteTagIDWait(System.String,Symbol.RFID3.TagAccess.WriteSpecificFieldAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to write EPC ID of a specific tag.
            </summary>
            <param name="tagID">EPC-ID of the Tag on which the Write operation is to be performed.</param>
            <param name="writeSpecificFieldAccessParams">Parameters required for writing the EPC write operation.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.WriteKillPasswordWait(System.String,Symbol.RFID3.TagAccess.WriteSpecificFieldAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to write the Kill Password of a specific tag.
            </summary>
            <param name="tagID">EPC-ID of the Tag on which the Write operation is to be performed.</param>
            <param name="writeSpecificFieldAccessParams">Parameters required for writing the Kill Password of a specific tag.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.WriteAccessPasswordWait(System.String,Symbol.RFID3.TagAccess.WriteSpecificFieldAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to write the access Password of a specific tag.
            </summary>
            <param name="tagID">EPC-ID of the Tag on which the Write operation is to be performed.</param>
            <param name="writeSpecificFieldAccessParams">Parameters required for writing the access Password of a specific tag.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.WriteEvent(Symbol.RFID3.TagAccess.WriteAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to write data to the memory bank data of tags that match the AccessFilter
            criteria if specified. 
            Completion of Access operation will be reported as Events.StatusNotify event of type
            ACCESS_STOP_EVENT.
            </summary>
            <param name="writeAccessParams">Parameters required for the Write operation.</param>
            <param name="accessFilter">Access Filter which determines the Tags on which the 
            Access operation is to be performed. If this is null, operation will be perfomed 
            without any access filters.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.KillWait(System.String,Symbol.RFID3.TagAccess.KillAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to kill a specific tag.
            </summary>
            <param name="tagID">EPC-ID of the Tag on which the Kill operation is to be performed.</param>
            <param name="killAccessParams">Parameters required for the Kill operation.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.KillEvent(Symbol.RFID3.TagAccess.KillAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to kill tags that match the AccessFilter
            criteria if specified. 
            Completion of Access operation will be reported as Events.StatusNotify event of type
            ACCESS_STOP_EVENT.
            </summary>
            <param name="killAccessParams">Parameters required for the Kill operation.</param>
            <param name="accessFilter">Access Filter which determines the Tags on which the 
            Access operation is to be performed. If this is null, operation will be perfomed 
            without any access filters.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.LockWait(System.String,Symbol.RFID3.TagAccess.LockAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to lock a specific tag.
            </summary>
            <param name="tagID">EPC-ID of the Tag on which the Lock operation is to be performed.</param>
            <param name="lockAccessParams">Parameters required for the Lock operation.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.LockEvent(Symbol.RFID3.TagAccess.LockAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to lock tags that match the AccessFilter
            criteria if specified. 
            Completion of Access operation will be reported as Events.StatusNotify event of type
            ACCESS_STOP_EVENT.
            </summary>
            <param name="lockAccessParams">Parameters required for the Lock operation.</param>
            <param name="accessFilter">Access Filter which determines the Tags on which the 
            Access operation is to be performed. If this is null, operation will be perfomed 
            without any access filters.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.BlockWriteWait(System.String,Symbol.RFID3.TagAccess.WriteAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to perform Block-Write operation on a specific tag.
            </summary>
            <param name="tagID">EPC-ID of the Tag on which the Block-Write operation is to be performed.</param>
            <param name="writeAccessParams">Parameters required for the Block-Write operation.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.BlockWriteEvent(Symbol.RFID3.TagAccess.WriteAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to Block-Write on tags that match the AccessFilter
            criteria if specified. 
            Completion of Access operation will be reported as Events.StatusNotify event of type
            ACCESS_STOP_EVENT.
            </summary>
            <param name="writeAccessParams">Parameters required for the Block write operation.</param>
            <param name="accessFilter">Access Filter which determines the Tags on which the 
            Access operation is to be performed. If this is null, operation will be perfomed 
            without any access filters.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.BlockEraseWait(System.String,Symbol.RFID3.TagAccess.BlockEraseAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to perform Block-Erase operation on a specific tag.
            </summary>
            <param name="tagID">EPC-ID of the Tag on which the Block-Erase operation is to be performed.</param>
            <param name="blockEraseAccessParams">Parameters required for the Block-Erase operation.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.BlockEraseEvent(Symbol.RFID3.TagAccess.BlockEraseAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to perform Block-Erase on tags that match the AccessFilter
            criteria if specified. 
            Completion of Access operation will be reported as Events.StatusNotify event of type
            ACCESS_STOP_EVENT.
            </summary>
            <param name="blockEraseAccessParams">Parameters required for the Block-Erase operation.</param>
            <param name="accessFilter">Access Filter which determines the Tags on which the 
            Access operation is to be performed. If this is null, operation will be perfomed 
            without any access filters.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.BlockPermalockWait(System.String,Symbol.RFID3.TagAccess.BlockPermalockAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            Allows to permalock multiple words in a Tag’s Reserved, EPC, TID, or 
            User memory with a single command, or read the permalock status of the 
            memory blocks in a Tag's User memory
            </summary>
            <param name="tagID">Access-Operation will be performed on Tag with mentioned TagID.</param>
            <param name="blockPermalockAccessParams">Parameters required for the operation.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
            <returns>TagData corresponding to the Tag on which the BlockPermalock operation was performed. </returns>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.BlockPermalockEvent(Symbol.RFID3.TagAccess.BlockPermalockAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            Allows to permalock multiple words in a Tag’s Reserved, EPC, TID, or 
            User memory with a single command, or read the permalock satus of the 
            memory blocks in a Tag's User memory
            </summary>
            <param name="blockPermalockAccessParams">Parameters required for the operation.</param>
            <param name="accessFilter">Access Filter which determines the Tags on which the 
            Access operation is to be performed. If this is null, operation will be perfomed 
            without any access filters.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.RecommisionWait(System.String,Symbol.RFID3.TagAccess.RecommisionAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            Used for recommissioning tag(s).
            </summary>
            <param name="tagID">Access-Operation will be performed on Tag with mentioned TagID.</param>
            <param name="recommisionAccessParams">Parameters required for the operation.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.RecommisionEvent(Symbol.RFID3.TagAccess.RecommisionAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            Used for recommissioning tag(s).
            </summary>
            <param name="recommisionAccessParams">Parameters required for the operation.</param>
            <param name="accessFilter">Access Filter which determines the Tags on which the 
            Access operation is to be performed. If this is null, operation will be perfomed 
            without any access filters.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.GetLastAccessResult(System.UInt32@,System.UInt32@)">
            <summary>
            This method retrives the result of the last performed access operation. If the last access operation 
            was an Access Sequence, the result indicates the number of tags on which all the operations in the 
            Access Sequence was a success. If atleast one operatin failed, that tag will be counted as failed.
            </summary>
            <param name="successCount">Number of Tags on which the operation succeeded</param>
            <param name="failureCount">Number of Tags on which the operation failed</param>
        </member>
        <member name="T:Symbol.RFID3.TagAccess.Sequence">
            <summary>
            This class gives support for doing a sequence of Access Operations at one go.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.Sequence.PerformSequence">
            <summary>
            This method starts the execution of all operations in the Tag Access Sequence in the order in which 
            the operations were added. The operation will be performed on all Antennas and will start
            execution immediately after the call, and will stop when StopSequence() is invoked.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.Sequence.PerformSequence(Symbol.RFID3.AccessFilter,Symbol.RFID3.TriggerInfo,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method starts the execution of all operations in the Tag Access Sequence in the order in which 
            the operations were added. The operation will be performed on Antennas mentioned in antennaInfo
            and will start and stop execution based on triggerInfo. It can also be stopped by calling StopSequence().
            </summary>
            <param name="accessFilterInfo">Access Filter which determines the Tags on which the 
            Access operation sequence is to be performed. If this is null, operation will be perfomed 
            without any access filters.</param>
            <param name="triggerInfo">Start/Stop criteria for current operation.
            If null, no trigger criteria will be used, which means 
            the operation starts immediatly and stops when StopSequence() is invoked.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.Sequence.StopSequence">
            <summary>
            This method stops the execution of the Tag Access Operation Sequence.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.Sequence.Add(Symbol.RFID3.TagAccess.Sequence.Operation)">
            <summary>
            Adds an operation to the Tag Access Sequence.
            Application should allocate new object for Operation for each call to Add().
            </summary>
            <param name="operation">Access Operation</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.Sequence.Delete(Symbol.RFID3.TagAccess.Sequence.Operation)">
            <summary>
            Removes an already added operation from the Tag Access Sequence.
            </summary>
            <param name="operation">Access Operation</param>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.Sequence.DeleteAll">
            <summary>
            Removes all added operations from the Tag Access Sequence.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.Sequence.Length">
            <summary>
            Get the Operation Sequence Length
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.Sequence.Item(System.Int32)">
            <summary>
            Returns the operation already added at specified index.
            </summary>
            <param name="index"></param>
            <returns>Returns the operation already added at specified index.</returns>
        </member>
        <member name="T:Symbol.RFID3.TagAccess.Sequence.Operation">
            <summary>
            This class represents a single operation that is to be added to the 
            Tag Access Operation Sequence.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.ReadAccessParams">
            <summary>
            Valid if AccessOperationCode is ACCESS_OPERATION_READ
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.WriteAccessParams">
            <summary>
            
            Valid if AccessOperationCode is ACCESS_OPERATION_WRITE
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.LockAccessParams">
            <summary>
            Valid if AccessOperationCode is ACCESS_OPERATION_LOCK
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.KillAccessParams">
            <summary>
            Valid if AccessOperationCode is ACCESS_OPERATION_KILL
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.BlockEraseAccessParams">
            <summary>
            Valid if AccessOperationCode is ACCESS_OPERATION_BLOCK_ERASE
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.BlockWriteAccessParams">
            <summary>
            Valid if AccessOperationCode is ACCESS_OPERATION_BLOCK_WRITE
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.BlockPermaLockAccessParams">
            <summary>
            Valid if AccessOperationCode is ACCESS_OPERATION_BLOCK_PERMA_LOCK
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.SetEASParams">
            <summary>
            valid if AccessOperationCode is ACCESS_OPERATION_NXP_SET_EAS
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.ReadProtectParams">
            <summary>
            valid if AccessOperationCode is ACCESS_OPERATION_NXP_READ_PROTECT
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.ResetReadProtectParams">
            <summary>
            valid if AccessOperationCode is ACCESS_OPERATION_NXP_RESET_READ_PROTECT
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.ChangeConfigParams">
            <summary>
            valid if AccessOperationCode is ACCESS_OPERATION_NXP_CHANGE_CONFIG
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.ChangeWordLockParams">
            <summary>
            valid if AccessOperationCode is ACCESS_OPERATION_FUJITSU_CHANGE_WORDLOCK
            </summary>   
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.ChangeBlockLockParams">
            <summary>
            valid if AccessOperationCode is ACCESS_OPERATION_FUJITSU_CHANGE_BLOCKLOCK
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.ReadBlockLockParams">
            <summary>
            valid if AccessOperationCode is ACCESS_OPERATION_FUJITSU_READ_BLOCKLOCK
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.BurstWriteParams">
            <summary>
            valid if AccessOperationCode is  ACCESS_OPERATION_FUJITSU_BURST_WRITE 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.BurstEraseParams">
            <summary>
            valid if AccessOperationCode is   ACCESS_OPERATION_FUJITSU_BURST_ERASE
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.ChangeBlockOrAreaGroupPasswordParams">
            <summary>
            valid if AccessOperationCode is  ACCESS_OPERATION_FUJITSU_CHANGE_BLOCK_OR_AREA_GROUPPASSWORD 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.AreaReadLockParams">
            <summary>
            valid if AccessOperationCode is ACCESS_OPERATION_FUJITSU_AREA_READLOCK
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.AreaWriteLockParams">
            <summary>
            valid if AccessOperationCode is   ACCESS_OPERATION_FUJITSU_AREA_WRITELOCK 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.AreaWriteLockWOPasswordParams">
            <summary>
            valid if AccessOperationCode is  ACCESS_OPERATION_FUJITSU_AREA_WRITELOCK_WOPASSWORD 
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.QTWriteParams">
            <summary>
            valid if AccessOperationCode is ACCESS_OPERATION_IMPINJ_QT_WRITE
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.QTReadParams">
            <summary>
            valid if AccessOperationCode is ACCESS_OPERATION_IMPINJ_QT_READ
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TagAccess.Sequence.Operation.RecommisionAccessParams">
            <summary>
            valid if AccessOperationCode is ACCESS_OPERATION_RECOMMISSION
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.Sequence.Operation.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.Sequence.Operation.AccessOperationCode">
            <summary>
            Access Operation code that determines the current intended operation.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.Sequence.Operation.OperationIndex">
            <summary>
            Index of the operation added to the sequence.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagAccess.ReadAccessParams">
            <summary>
            Parameters for Read Access Operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.ReadAccessParams.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.ReadAccessParams.MemoryBank">
            <summary>
            Memory bank from which data is to be read from.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.ReadAccessParams.ByteOffset">
            <summary>
            The addresss of the first byte to read from the chosen memory bank.
            Since Access operation is WORD aligned, offset should be in double bytes.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.ReadAccessParams.ByteCount">
            <summary>
            Number of bytes to read.
            Since Access operation is WORD aligned, offset be in double bytes.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.ReadAccessParams.AccessPassword">
            <summary>
            Password to be used for the Access operation.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagAccess.WriteAccessParams">
            <summary>
            Parameters for Write Access Operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.WriteAccessParams.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.WriteAccessParams.MemoryBank">
            <summary>
            Memory bank on which data is to be written to.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.WriteAccessParams.ByteOffset">
            <summary>
            Addresss of the first byte to be written to the chosen memory bank.
            Since Access operation is WORD aligned, offset be in double bytes.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.WriteAccessParams.WriteDataLength">
            <summary>
            Length of the array WriteData to be considered for write access operation.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.WriteAccessParams.AccessPassword">
            <summary>
            Password to be used for the Access operation.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.WriteAccessParams.WriteData">
            <summary>
            Pointer to a byte array which contains the data to be written. 
            Write operation occurs only on word boundaries, hence it is required to 
            input this field accordingly. For e.g The word 0x1122 will be byte writeData[2] = {0x11, 0x22}
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagAccess.WriteSpecificFieldAccessParams">
            <summary>
            Parameters for Write Specific Field like TagID, Kill Password or 
            Access Password Access Operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.WriteSpecificFieldAccessParams.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.WriteSpecificFieldAccessParams.WriteDataLength">
            <summary>
            Length of the array WriteData to be considered for write access operation.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.WriteSpecificFieldAccessParams.AccessPassword">
            <summary>
            Password to be used for the Access operation.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.WriteSpecificFieldAccessParams.WriteData">
            <summary>
            Pointer to a byte array which contains the data to be written. 
            Write operation occurs only on word boundaries, hence it is required to 
            input this field accordingly. For e.g The word 0x1122 will be byte writeData[2] = {0x11, 0x22}
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagAccess.LockAccessParams">
            <summary>
            Parameters for Lock Access Operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.LockAccessParams.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.LockAccessParams.KillPasswordMemory">
            <summary>
            Index for LockPrivilege inorder to lock the Memory for Kill-Password
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.LockAccessParams.AccessPasswordMemory">
            <summary>
            Index for LockPrivilege inorder to lock the Memory for Access-Password
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.LockAccessParams.EPCMemory">
            <summary>
            Index for LockPrivilege inorder to lock the Memory for EPC
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.LockAccessParams.TIDMemory">
            <summary>
            Index for LockPrivilege inorder to lock Memory for TID
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.LockAccessParams.UserMemory">
            <summary>
            Index for LockPrivilege inorder to lock the Memory for User Memory
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.LockAccessParams.AccessPassword">
            <summary>
            Lock Password.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.LockAccessParams.LockPrivilege">
            <summary>
            Lock privilege Array to specify the privilige for all memory banks. 
            For setting the index for EPC Memory use index as 'myLockAccessParams.EPCMemory'
            Assign privilege only for those memory banks whose privilege is to be changed.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagAccess.KillAccessParams">
            <summary>
            Parameters for Kill Access Operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.KillAccessParams.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.KillAccessParams.KillPassword">
            <summary>
            Kill Password. If it is zero, LLRP Reader will return zero-password-error.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagAccess.BlockEraseAccessParams">
            <summary>
            Parameters for Block-Erase Access Operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.BlockEraseAccessParams.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.BlockEraseAccessParams.MemoryBank">
            <summary>
            Memory bank on which access operation is to be performed.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.BlockEraseAccessParams.ByteOffset">
            <summary>
            Addresss of the first byte to be written to the chosen memory bank.
            Since Access operation is WORD aligned, offset be in double bytes.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.BlockEraseAccessParams.ByteCount">
            <summary>
            Number of Bytes to be erased.
            Since Access operation is WORD aligned, offset be in double bytes.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.BlockEraseAccessParams.AccessPassword">
            <summary>
            Password to be used for the Access operation.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagAccess.RecommisionAccessParams">
            <summary>
            Parameters for Recommision Access Operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.RecommisionAccessParams.#ctor">
            <summary>
            Constructor. 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.RecommisionAccessParams.KillPassword">
            <summary>
            Kill Password.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.RecommisionAccessParams.OpCode">
            <summary>
            Recommision operation code. 
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagAccess.BlockPermalockAccessParams">
            <summary>
            Parameters for Block Permalock Access Operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagAccess.BlockPermalockAccessParams.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.BlockPermalockAccessParams.MemoryBank">
            <summary>
            Memory Bank on which Block Permalock operation is to be performed. 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.BlockPermalockAccessParams.ReadLock">
            <summary>
            ReadLock specifies whether a tag backscatters the perlock status
            of, or permalocks, one of more blocks within the memory bank as specified.
            when ReadLock is true, it performs block perma lock in specified memory bank starting at offset.
            When ReadLock is false, the Reader get the permalock mask.
            
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.BlockPermalockAccessParams.ByteOffset">
            <summary>
            Byte offset; Address of the first byte for the Mask.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.BlockPermalockAccessParams.ByteCount">
            <summary>
            Number of Bytes of the Mask to be read. This is valid only when readLock is false. i.e. for read operation
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.BlockPermalockAccessParams.AccessPassword">
            <summary>
            Password to be used for the Access operation.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.BlockPermalockAccessParams.MaskLength">
            <summary>
            Number of bytes in pMask to be taken for comparison.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagAccess.BlockPermalockAccessParams.Mask">
            <summary>
            Mask specifies which memory blocks a tag permalocks. Masks depends on the
            readLock as follows:
            When readLock is false, the Reader omits permalock mask.								
            when readLock is true, the Reader should permalock as specified by the Mask.
            The application should allocate an byte array and assign it to this field. 
            The Mask to be used for bit-wise comparison should be filled 
            in the array.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Fujitsu">
            <summary>
            The Fujitsu class comprises of methods for the  custom Access operations supported by Fujitsu's 64K and 8K tags and their respective parameter types.
            The custom operations meant for 64K Fujitsu tags are ChangeWordLock,ChangeBlockLock,ReadBlockLock,
            BurstWrite and BurstRead; while those for 8K Fujitsu tags are AreaReadLock,AreaWriteLock,AreaWriteLockWithoutPassword.
            However,the operation ChangeBlockOrAreaGroupPassword changes either the block group password 
            if the target tag is a 64K tag or the Area Group Password if the target tag is a 8K tag.
            For each of these operations,there are different methods to apply the operation on a single tag or a subset of tag-population,
            as identified by the Access-Filter.The  method "(Operation-Name)Wait" refers to the single-tag,synchronous operation and the method "(Operation-Name)Event" refers
            to multiple-tag,asynchronous operation.Completion of the operation will be reported as Events.StatusNotify event of type ACCESS_STOP_EVENT.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.#ctor">
            <summary>
             constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ChangeWordLockWait(System.String,Symbol.RFID3.Fujitsu.ChangeWordLockAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's ChangeWordLock operation on the specified 64K Tag.It basically sets/resets/leaves unchanged the WordLock flags of two consecutive words in the User Memory
            because of which the words become write-locked or unlocked provided the correct BlockGroupPassword is passed.
            </summary>
            <param name="tagID"> string value of Tag ID,a Fujistu 64K Tag</param>
            <param name="changeWordLockAccessParams">specifies memoryBank containing the two words, ByteOffset of the starting word,Payload Action-Mask pair for the word-lock operation and the BlockGroup password. </param>
            <param name="antennaInfo">set of antennas on which this access operation is to be performed </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ChangeWordLockEvent(Symbol.RFID3.Fujitsu.ChangeWordLockAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's ChangeWordLock operation on the all 64K Tags specifed by AccessFilter.For each of the tags,the WordLock flags of two consecutive words
            may be either set/reset/not changed.As a result,the words are either write-locked/write-unlocked/untouched provided the correct BlockGroupPassword is passed.
            </summary>
            <param name="changeWordLockAccessParams">consists of the Byteoffset of the starting word,Payload for the WordLock operation,Block Group Password and the MemoryBank.</param>
            <param name="accessFilter">defines the set of tag-population on which the access operation is to be applied </param>
            <param name="antennaInfo">defines the set of antennas on which this access operation is to be applied </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ChangeBlockLockWait(System.String,Symbol.RFID3.Fujitsu.ChangeBlockLockAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's ChangeBlockLock operation on the specified 64K Tag.When the proper BlockGroup Password is provided,it can set the BlockLock status of upto 16 Blocks inside the given BlockGroup.
            Once a Block is Block-locked, its enclosing words become Write-locked after being written once.
            </summary>
            <param name="tagID"> string value of Tag ID,a Fujistu 64K Tag</param>
            <param name="changeBlockLockAccessParams">consists of the index of the BlockGroup,Payload Action-Mask pair for the BlockLock operation and the BlockGroup password. </param>
            <param name="antennaInfo">set of antennas on which this access operation is to be performed </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ChangeBlockLockEvent(Symbol.RFID3.Fujitsu.ChangeBlockLockAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's ChangeBlockLock operation on all the 64K Tags,specified by Access Filter criteria.For each of these tags,when the proper BlockGroup Password is provided,it can set the BlockLock status of upto 16 Blocks inside the given BlockGroup,
            Once a Block is Block-locked, its enclosing words become Write-locked after being written once.
            </summary>
            <param name="changeBlockLockAccessParams">consists of the index of the BlockGroup,Payload Action and Payload Mask for the BlockLock operation and the BlockGroup password. </param>
            <param name="accessFilter">defines the set of tag-population on which the access operation is to be applied </param>
            <param name="antennaInfo">defines the set of antennas on which this access operation is to be applied </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ReadBlockLockWait(System.String,Symbol.RFID3.Fujitsu.ReadBlockLockAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's ReadBlockLock operation on the specified 64K Tag.When successful,it obtains the status of BlockLock flags
            of all the 16 Blocks inside given BlockGroup.A TagData object is returned with  the BlockLock status information in 'TagData.AccessOperationResult.ReadBlockLockResult'
            object.
            </summary>
            <param name="tagID"> string value of Tag ID,a Fujistu 64K Tag</param>
            <param name="readBlockLockAccessParams">consists of the index of the BlockGroup. </param>
            <param name="antennaInfo">set of antennas on which this access operation is to be performed </param>
            <returns>TagData corresponding to the Tag on which the ReadBlockLock operation was performed. </returns>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ReadBlockLockEvent(Symbol.RFID3.Fujitsu.ReadBlockLockAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's ReadBlockLock operation on all the 64K Tags specified by 'AccessFilter' criteria.It obtains the status of BlockLock flags
            of the 16 Blocks inside given the BlockGroup.For each Tag,a 'TagData' object is created with the blocklock status available in 'TagData.AccessOperationResult.ReadBlockLockResult' object.
            These 'TagData' objects will be reported as notifications if the application has 
            registered for Events.ReadNotify event.Else the Tags will be fetched using GetReadTags(s) methods.
            </summary>
            <param name="readBlockLockAccessParams">consists of the index of the BlockGroup </param>
            <param name="accessFilter">defines the set of tag-population on which the access operation is to be applied </param>
            <param name="antennaInfo">defines the set of antennas on which this access operation is to be applied </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.BurstWriteWait(System.String,Symbol.RFID3.Fujitsu.BurstWriteAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's BurstWrite operation on the specified 64K Tag.It can write an even number of words in the given memory Bank in a single Burst.
            It returns a 'TagData' object containing the number of bytes unsuccessfully written in 'TagData.AccessOperationResult.BurstWriteResult' object.
            </summary>
            <param name="tagID"> string value of Tag ID,a Fujistu 64K Tag</param>
            <param name="burstWriteAccessParams">consists of the data to be written in a byte-array and its length in bytes,memory Bank to be written into,byte-offset of the starting word and the access-password</param>
            <param name="antennaInfo">set of antennas on which this access operation is to be performed </param>
            <returns>Tag Data</returns>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.BurstWriteEvent(Symbol.RFID3.Fujitsu.BurstWriteAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's BurstWrite operation on the 64K Tags,specified by Access Filter criteria.It can write an even number of words in the given memory Bank in a single Burst.
            For each Tag,a 'TagData' object is created with the number of bytes unsuccessfully written reported in 'TagData.AccessOperationResult.BurstWriteResult' object.These 'TagData' objects will be reported as notifications if the application has 
            registered for Events.ReadNotify event.Else the Tags will be fetched using GetReadTags(s) methods.
            </summary>
            <param name="burstWriteAccessParams">consists of the data to be written in a byte-array and its length in bytes,memory Bank to be written into,byte-offset of the starting word and access-password </param>
            <param name="accessFilter">defines the set of tag-population on which the access operation is to be applied </param>
            <param name="antennaInfo">defines the set of antennas on which this access operation is to be applied </param>
            <returns>TagData corresponding to the Tag on which the BurstWrite operation was performed. </returns>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.BurstEraseWait(System.String,Symbol.RFID3.Fujitsu.BurstEraseAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's BurstErase operation on the specified 64K Tag. 
            It can erase an even number of words in the given memory Bank in a single Burst.
            The number of Bytes unsuccessfully erased are reported in the 'AccessOperationResult.BurstEraseResult' object inside the 'TagData' object returned
            </summary>
            <param name="tagID">string value of Tag ID, a Fujistu 64K Tag</param>
            <param name="burstEraseAccessParams">Consists of the length of data to be erased in bytes,its memory Bank,byte-offset of its starting word and the access-password</param>
            <param name="antennaInfo">set of antennas on which this access operation is to be performed</param>
            <returns>TagData corresponding to the Tag on which the Burst-Erase operation was performed</returns>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.BurstEraseEvent(Symbol.RFID3.Fujitsu.BurstEraseAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's BurstErase  operation on the 64K Tags,specified by Access Filter criteria.It can erase an even number of words in the given memory Bank in a single Burst.
            For each tag,a 'TagData' object is created with the number of Bytes unsuccessfully erased reported in 
            'TagData.AccessOperationResult.BurstEraseResult' object. These 'TagData' objects will be reported as notifications if the application has 
            registered for Events.ReadNotify event.Else the Tags will be fetched using GetReadTags(s) methods.
            </summary>
            <param name="burstEraseAccessParams">consists of the length of data to be erased in bytes,its memory Bank,byte-offset of the starting word and the access-password</param>
            <param name="accessFilter">defines the set of tag-population on which the access operation is to be applied </param>
            <param name="antennaInfo">defines the set of antennas on which this access operation is to be applied </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.AreaReadLockWait(System.String,Symbol.RFID3.Fujitsu.AreaReadLockAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's AreaReadLock operation on the specified 8K Tag.It basically sets/resets the ReadLock flags of upto 16 areas in the given AreaGroup,
            because of which the words enclosed in the corresponding areas become write-locked or unlocked; provided the correct AreaGroupPassword is provided.
            </summary>
            <param name="tagID"> string value of Tag ID,a Fujistu 64K Tag</param>
            <param name="areaReadLockAccessParams">consits of AreaGroupOffset,its AreaGroup password,Payload Action-which specifies whether to set/reset the corresponding ReadLock flag and Payload Mask-which specifies whether to apply or ignore the actions specified by the Payload Action . </param>
            <param name="antennaInfo">set of antennas on which this access operation is to be performed </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.AreaReadLockEvent(Symbol.RFID3.Fujitsu.AreaReadLockAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's AreaReadLock operation on the all the 8K Tags specifed by AccessFilter.The ReadLock flags of the 16 Areas inside the given AreaGroup can be either set/reset/unchanged provided
            the AreaGroup password is correct.As a result,words inside these Areas are either Read-locked/Read-unlocked/left untouched.Moreover,the 'antennaInfo' field specifies the set of antenna on which this access operation is to be 
            performed.
            </summary>
            <param name="areaReadLockAccessParams">consits of AreaGroupOffset,its AreaGroup password,Payload Action-which specifies whether to set/reset the corresponding ReadLock flag and Payload Mask-which specifies whether to apply or ignore the actions specified by the Payload Action . </param>
            <param name="accessFilter">defines the set of tag-population on which the access operation is to be applied </param>
            <param name="antennaInfo">defines the set of antennas on which this access operation is to be applied </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.AreaWriteLockWait(System.String,Symbol.RFID3.Fujitsu.AreaWriteLockAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's AreaWriteLock operation on the specified 8K Tag.It basically sets/resets the WriteLock flags of upto 16 areas in the given AreaGroup,
            because of which the words enclosed in the corresponding areas become write-locked or unlocked or left untouched; provided the correct AreaGroupPassword is provided.
            </summary>
            <param name="tagID"> string value of Tag ID,a Fujistu 64K Tag</param>
            <param name="areaWriteLockAccessParams">consits of AreaGroupOffset,its AreaGroup password,Payload Action-which specifies whether to set/reset the corresponding WriteLock flag and Payload Mask-which specifies whether to apply or ignore the actions specified by the Payload Action . </param>
            <param name="antennaInfo">set of antennas on which this access operation is to be performed </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.AreaWriteLockEvent(Symbol.RFID3.Fujitsu.AreaWriteLockAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's AreaWriteLock operation on the all the 8K Tags specifed by AccessFilter.The WriteLock flags of the 16 Areas inside the given AreaGroup can be either set/reset/unchanged provided
            the AreaGroup password is correct.As a result,words inside these Areas are either Write-locked/Write-unlocked/left untouched.Moreover,the 'antennaInfo' field specifies the set of antenna on which this access operation is to be 
            performed.
            </summary>
            <param name="areaWriteLockAccessParams">consits of AreaGroupOffset,its AreaGroup password,Payload Action-which specifies whether to set/reset the corresponding WriteLock flag and Payload Mask-which specifies whether to apply or ignore the actions specified by the Payload Action . </param>
            <param name="accessFilter">defines the set of tag-population on which the access operation is to be applied </param>
            <param name="antennaInfo">defines the set of antennas on which this access operation is to be applied </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.AreaWriteLockWOPasswordWait(System.String,Symbol.RFID3.Fujitsu.AreaWriteLockWOPasswordAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's AreaWriteLockWithoutPassword operation on the specified 8K Tag.It can set the WriteLock flags of upto 16 areas in the given AreaGroup,
            because of which the words enclosed in the corresponding areas become write-locked.Unlike the AreaWriteLock operation, it can only Write-lock an area,but cannot unlock and as the name indicates,
            it doesn't require the AreaGroup's password.
            </summary>
            <param name="tagID"> string value of Tag ID,a Fujistu 64K Tag</param>
            <param name="areaWriteLockWOPasswordAccessParams">consists of AreaGroupOffset and Payload Action-a 16 bit pattern where each bit specifies whether to set/leave untouched the WriteLock flags for the corresponding Areas in the given AreaGroup. </param>
            <param name="antennaInfo">set of antennas on which this access operation is to be performed </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.AreaWriteLockWOPasswordEvent(Symbol.RFID3.Fujitsu.AreaWriteLockWOPasswordAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's AreaWriteLock operation on the all the 8K Tags specifed by AccessFilter.For each of these tags,it can set the WriteLock flags of upto 16 areas in the given AreaGroup,
            as specified by the Payload Action.When the operation succeeds, the words enclosed in the corresponding areas become write-locked.Unlike the AreaWriteLock operation, it can only Write-lock an area,but cannot unlock it and as the name indicates,
            it doesn't require the AreaGroup's password.
            </summary>
            <param name="areaWriteLockWOPasswordAccessParams">consists of AreaGroupOffset and Payload Action-a 16 bit pattern where each bit specifies whether to set/leave untouched the WriteLock flags for the corresponding Areas in the given AreaGroup.</param>
            <param name="accessFilter">defines the set of tag-population on which the access operation is to be applied </param>
            <param name="antennaInfo">defines the set of antennas on which this access operation is to be applied </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ChangeBlockOrAreaGroupPasswordWait(System.String,Symbol.RFID3.Fujitsu.ChangeBlockOrAreaGroupPasswordAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs either Fujitsu's ChangeBlockGroupPassword or ChangeAreaGroupPassword operation according to whether the specified Tag was a 64K Tag or an 8K Tag.
            </summary>
            <param name="tagID"> TagID.</param>
            <param name="changeBlockOrAreaGroupPasswordAccessParams">Specifies the Index of the Block/AreaGroup,its current password and new password.</param>
            <param name="antennaInfo">defines the set of antennas on which this access operation is to be applied </param>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ChangeBlockOrAreaGroupPasswordEvent(Symbol.RFID3.Fujitsu.ChangeBlockOrAreaGroupPasswordAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method performs Fujitsu's ChangeBlockGroupPassword or ChangeAreaGroupPassword operation which ever is applicable,on all the tags specified by the Access-Filter criteria.
            </summary>
            <param name="changeBlockOrAreaGroupPasswordAccessParams">Specifies the Index of the Block/AreaGroup,its current password and new password.</param>
            <param name="accessFilter">defines the set of tag-population on which the access operation is to be applied </param>
            <param name="antennaInfo">defines the set of antennas on which this access operation is to be applied </param>
        </member>
        <member name="T:Symbol.RFID3.Fujitsu.ChangeWordLockAccessParams">
            <summary>
            This is the parameter for Fujitsu's ChangeWordLock operation meant for 64K Tags.Specifies the Memory Bank and ByteOffset for the two words 
            to be locked,the BlockGroup password and the Payload Action-Mask pair meant for the ChangeWordLock operation. 
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ChangeWordLockAccessParams.#ctor">
            <summary>
             constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeWordLockAccessParams.MemoryBank">
            <summary>
            Memory Bank containing the words to be word-locked.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeWordLockAccessParams.ByteOffset">
            <summary>
            Byte-offset of the first of the two-words to be word-locked.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeWordLockAccessParams.PayloadAction">
            <summary>
            It's 2LSBs represent the Word-Lock action to be performed on the two-consecutive words being word-locked.
            A 'zero' represents an unlock and a 'one' represents a 'lock' action.The rest of the bits are to be ignored.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeWordLockAccessParams.PayloadMask">
            <summary>
            It's 2 LSBs represent the Mask for  Payload Action.A 'zero' implies the corresponding 'action' bit is to be ignored and a 'one'
            implies the corresponding 'action' is to be applied.The rest of the bits are to be ignored.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeWordLockAccessParams.BlockGroupPassword">
            <summary>
            The BlockGroup password for the Block-Group enclosing the words to be word-locked.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Fujitsu.ChangeBlockLockAccessParams">
            <summary>
            The parameter for Fujitsu's ChangeBlockLock Operation,meant for 64K Tags.Specifies the BlockGroup,Payload Mask-Action pair and 
            the BlockGroup's Password.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ChangeBlockLockAccessParams.#ctor">
            <summary>
             constructor
            </summary>
            
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeBlockLockAccessParams.BlockGroupOffset">
            <summary>
             Index of the BlockGroup to be acted on.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeBlockLockAccessParams.PayloadMask">
            <summary>
            A 16-bit Mask for the PayloadAction,where each bit specifies whether to apply or ignore the corresponding 'Action' bit.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeBlockLockAccessParams.PayloadAction">
            <summary>
            A 16-bit value that specifies whether to set/reset the BlockLock flags for the corresponding blocks inside the BlockGroup
            specified by BlockGroupOffset.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeBlockLockAccessParams.BlockGroupPassword">
            <summary>
            The Password for the BlockGroup specified by BlockGroupOffset.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Fujitsu.ReadBlockLockAccessParams">
            <summary>
            The parameter for Fujitsu's ReadBlockLock operation, meant for 64K Tags.Specifies the BlockGroup.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ReadBlockLockAccessParams.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ReadBlockLockAccessParams.BlockGroupOffset">
            <summary>
             Index of the BlockGroup to be acted on.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Fujitsu.BurstWriteAccessParams">
            <summary>
            The parameter for Fujitsu's BurstWrite operation, meant for 64K Tags.Specifies the Byte-Array to be written,memoryBank and 
            ByteOffset of the starting word and the AccessPassword.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.BurstWriteAccessParams.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.BurstWriteAccessParams.MemoryBank">
            <summary>
             Memory Bank into which data will be written in a burst.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.BurstWriteAccessParams.ByteOffset">
            <summary>
            Byteoffset of the starting word.ByteOffset should be a multiple of 4.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.BurstWriteAccessParams.BurstWriteData">
            <summary>
            A byte array containing the data to be written in a burst.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.BurstWriteAccessParams.BurstWriteDataLength">
            <summary>
            Byte-Length of the BurstWriteData array.Must be a multiple of 4.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.BurstWriteAccessParams.AccessPassword">
            <summary>
            AccessPassword of the tag(s) being operated on
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Fujitsu.BurstEraseAccessParams">
            <summary>
            Parameters for BurstErase operation meant for Fujitsu's 64K Tags.Specifies the memory Bank,ByteOffset and length of the Data to be erased together with 
            the AccessPassword.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.BurstEraseAccessParams.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.BurstEraseAccessParams.MemoryBank">
            <summary>
            Memory Bank containing the words to be erased
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.BurstEraseAccessParams.ByteOffset">
            <summary>
            ByteOffset of the first of the words to be erased, within the specified MemoryBank.
            Should be a multiple of 4.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.BurstEraseAccessParams.BurstEraseLength">
            <summary>
            Byte-Length of the Data to be Burst-Erased .Can only be a multiple of four.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.BurstEraseAccessParams.AccessPassword">
            <summary>
            AccessPassword of the tag(s) being acted upon.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Fujitsu.AreaReadLockAccessParams">
            <summary>
            Parameters for AreaReadLock operation meant for Fujitsu's 8K Tags.Specifies the AreaGroup,its Password and the Payload Action-Mask pair for 
            AreaReadLock operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.AreaReadLockAccessParams.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.AreaReadLockAccessParams.AreaGroupOffset">
            <summary>
            Index of the AreaGroup, ranging from 0-15
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.AreaReadLockAccessParams.PayloadAction">
            <summary>
            A 16-bit pattern where each bit specifies whether to apply ReadLock or Unlock the corresponding Area inside the specifed AreaGroup.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.AreaReadLockAccessParams.PayloadMask">
            <summary>
            A 16-bit Mask for the PayloadAction,where each bit specifies whether to apply or ignore the corresponding 'Action' bit.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.AreaReadLockAccessParams.AreaGroupPassword">
            <summary>
            Password for the specified AreaGroup.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Fujitsu.AreaWriteLockAccessParams">
            <summary>
            Parameters for AreaWriteLock operation meant for Fujitsu's 8K Tags.Specifies the AreaGroup,its Password and the Payload Action-Mask pair for 
            AreaWriteLock operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.AreaWriteLockAccessParams.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.AreaWriteLockAccessParams.AreaGroupOffset">
            <summary>
            Index of the AreaGroup, ranging from 0-15
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.AreaWriteLockAccessParams.PayloadAction">
            <summary>
            A 16-bit value where each bit specifies whether to apply WriteLock or Unlock the corresponding Area inside the specifed AreaGroup.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.AreaWriteLockAccessParams.PayloadMask">
            <summary>
            A 16-bit Mask for the PayloadAction,where each bit specifies whether to apply or ignore the corresponding 'Action' bit.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.AreaWriteLockAccessParams.AreaGroupPassword">
            <summary>
            Password for the specified AreaGroup.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Fujitsu.AreaWriteLockWOPasswordAccessParams">
            <summary>
            It is the parameter for Fujitsu's Custom operation for 8K Tags- ChangeAreaWriteLockWithoutPassword.It specifies
            only the AreaGroup and PayloadAction.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.AreaWriteLockWOPasswordAccessParams.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.AreaWriteLockWOPasswordAccessParams.AreaGroupOffset">
            <summary>
            Index of the AreaGroup, ranging from 0-15
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.AreaWriteLockWOPasswordAccessParams.PayloadAction">
            <summary>
            A 16 bit pattern where each bit indicates whether to WriteLock the respective Area or 
            or ignore it.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Fujitsu.ChangeBlockOrAreaGroupPasswordAccessParams">
            <summary>
            This is the same parameter for two operations - ChangeBlockGroupPassword(64K Tags) and ChangeAreaGroupPassword(8K Tags).
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Fujitsu.ChangeBlockOrAreaGroupPasswordAccessParams.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeBlockOrAreaGroupPasswordAccessParams.BlockOrAreaGroupOffset">
            <summary>
            Index of the BlockGroup (or) AreaGroup,according to whether the tag is an 8K or 64K Tag.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeBlockOrAreaGroupPasswordAccessParams.CurrentPassword">
            <summary>
            Current Password for the BlockGroup or AreaGroup
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Fujitsu.ChangeBlockOrAreaGroupPasswordAccessParams.NewPassword">
            <summary>
            New Password for the BlockGroup or the AreaGroup
            </summary>
        </member>
        <member name="T:Symbol.RFID3.NXP">
            <summary>
            The NXP class comprises of the Access operations meant for NXP tags.
            These operation include SetEASWait and SetEASEvent(for setting/resetting EAS bits on NXP tags),
            ReadProtectWait &amp; ResetReadProtectEvent(for setting the Quiet bit on one or more NXP tags),
            ResetReadProtectEvent(for resetting Quiet bit on all the NXP tags) and ChangeConfig(for changing and 
            reading the Config-word for the NXP G2iL tags)
            </summary>
        </member>
        <member name="M:Symbol.RFID3.NXP.#ctor(Symbol.RFID3.TagAccess)">
            <summary>
            Constructor
            </summary>
            <param name="tagAccess">Tag Access Object</param>
        </member>
        <member name="M:Symbol.RFID3.NXP.SetEASWait(System.String,Symbol.RFID3.NXP.SetEASParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This API sets/resets the EAS bit of the NXP tag whose ID is passed to the API.
            </summary>
            <param name="tagID"> string value of Tag ID</param>
            <param name="setEASParams">consists of accesspassword and desired state of the EAS bit of the tag</param>
            <param name="antennaInfo">set of antennae on which this access operation is to be performed </param>
        </member>
        <member name="M:Symbol.RFID3.NXP.SetEASEvent(Symbol.RFID3.NXP.SetEASParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
             This API sets/resets the EAS bits of all the NXP tags specified by the access-filter.
            </summary>
            <param name="setEASParams">consists of the Access password and desired EAS bit state</param>
            <param name="accessFilter">defines the set of tag-population on which the access operation is to be applied </param>
            <param name="antennaInfo">defines the set of antennae on which this access operation is to be applied </param>
        </member>
        <member name="M:Symbol.RFID3.NXP.ReadProtectWait(System.String,Symbol.RFID3.NXP.ReadProtectParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            An NXP tag can be protected from reading (i.e, Quiet mode) by calling the "ReadProtectWait" method. It requires the Access-password for the NXP tag.
            The antenna-ID list on which the operation is to be performed is also AntennaInfo taken by the method.
            </summary>
            <param name="tagID">NXP-tag's ID</param>
            <param name="readProtectParams">contains the Access-password for the tag</param>
            <param name="antennaInfo">Contains the list of antenna-IDs on which the operation is to be performed</param>
        </member>
        <member name="M:Symbol.RFID3.NXP.ReadProtectEvent(Symbol.RFID3.NXP.ReadProtectParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            A set of NXP tags can be read-protected or put into Quiet mode by calling ReadProtectEvent method
            The method takes in the filter criteria for this set of tags while a null value for access-filter corresponds to entire tag population
            Addtionally, the antenna IDs on which the operation is to be performed can also be specified
            </summary>
            <param name="readProtectParams">consists of the Access password</param>
            <param name="accessFilter">defines the set of tag-population on which the access operation is to be applied </param>
            <param name="antennaInfo">defines the set of antennae on which this access operation is to be applied </param>
        </member>
        <member name="M:Symbol.RFID3.NXP.ResetReadProtectEvent(Symbol.RFID3.NXP.ResetReadProtectParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            All the NXP tags with the same Access-Password can be put out of the Quiet-Mode.Hence,they will no longer be read-protected.
            </summary>
            <param name="resetReadProtectParams">consists of Access-password for the NXP tags</param>
            <param name="antennaInfo">consists of list of antenna IDs on which this access operation is to be applied</param>
        </member>
        <member name="M:Symbol.RFID3.NXP.PerformEASScan">
            <summary>
            Perform EAS Scan
            </summary>
        </member>
        <member name="M:Symbol.RFID3.NXP.PerformEASScan(Symbol.RFID3.TriggerInfo,Symbol.RFID3.AntennaInfo)">
            <summary>
            Perform EAS Scan
            </summary>
            <param name="triggerInfo">Specifies the Start/Stop condition and tag reporting parameter</param>
            <param name="antennaInfo">Antennas on which EAS Scan operation to be performation</param>
        </member>
        <member name="M:Symbol.RFID3.NXP.StopEASScan">
            <summary>
            Stop EAS Scan
            </summary>
        </member>
        <member name="M:Symbol.RFID3.NXP.ChangeConfigWait(System.String,Symbol.RFID3.NXP.ChangeConfigParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            This API Changes and reads the current Configuration of an NXP G2iL tag whose ID is passed to the API.Changing the Configuration word helps
            enable/disable special features supported by the G2iL tag such as Read protection,Read-range reduction,ProductStatusFlag Alarm and others.
            Please refer to the G2iL tag's documentation for a comprehensive list of features and their corresponding configuration bits.
            </summary>
            <param name="tagID"> string value of Tag ID</param>
            <param name="changeConfigParams">consists of accesspassword and the Configuration word to be applied.If the latter is zero,
            no change is made on the Configuration word and the current configuration is reported back in TagData</param>
            <param name="antennaInfo">set of antennae on which this access operation is to be performed </param>
            <returns>Tag Data</returns>
        </member>
        <member name="M:Symbol.RFID3.NXP.ChangeConfigEvent(Symbol.RFID3.NXP.ChangeConfigParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This API Changes and reads the current Configuration of the NXP G2iL tags specified by AccessFilter.
            Changing the Configuration word helps enable/disable special features supported by the G2iL tag such as 
            Read protection,Read-range reduction,ProductStatusFlag Alarm and others.
            Please refer to the G2iL tag's documentation for a comprehensive list of features and their corresponding configuration bits.
            Tags will be reported as notifications if the application has registered for Events.ReadNotify event. 
            Else the Tags will be fetched using GetReadTags(s) methods.
            Completion of Access operation will be reported as Events.StatusNotify event of type ACCESS_STOP_EVENT.
            </summary>
            <param name="ChangeConfigParams">consists of accesspassword and the Configuration word to be applied.If the latter is zero,
            no change is made on the Configuration word and the current configuration is reported back in TagData</param>
            <param name="accessFilter">Access Filter Criteria</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, operation will be performed on all Antennas</param>
        </member>
        <member name="T:Symbol.RFID3.NXP.SetEASParams">
            <summary>
            Parameters for SetEAS Access Operation
            </summary>
        </member>
        <member name="M:Symbol.RFID3.NXP.SetEASParams.#ctor">
            <summary>
            Constructor 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXP.SetEASParams.AccessPassword">
            <summary>
            AccessPassword to be used for SetEAS Access Operation
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXP.SetEASParams.SetEAS">
            <summary>
            Specifies whether to set or reset EAS System Bit
            </summary>
        </member>
        <member name="T:Symbol.RFID3.NXP.ReadProtectParams">
            <summary>
            Parameters for ReadProtect Access Operation
            </summary>
        </member>
        <member name="M:Symbol.RFID3.NXP.ReadProtectParams.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXP.ReadProtectParams.AccessPassword">
            <summary>
            Parameter that specifies the Access Password of the tag 
            </summary>
        </member>
        <member name="T:Symbol.RFID3.NXP.ResetReadProtectParams">
            <summary>
            Parameters for ResetReadProtect Access Operation
            </summary>
        </member>
        <member name="M:Symbol.RFID3.NXP.ResetReadProtectParams.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXP.ResetReadProtectParams.AccessPassword">
            <summary>
            Parameter that specifies the Access Password of the tag 
            </summary>
        </member>
        <member name="T:Symbol.RFID3.NXP.ChangeConfigParams">
            <summary>
            Parameters of the Change Config operation for NXP-G2iL tags
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXP.ChangeConfigParams.AccessPassword">
            <summary>
            Access Password
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXP.ChangeConfigParams.NXPChangeConfigWord">
            <summary>
            Change Config Word. If this word is Zero, the status of the 
            Config for the G2iL tag(s) will be reported back in the TagData.Otherwise,
            the Config word will be applied on the tag(s).
            </summary>
        </member>
        <member name="T:Symbol.RFID3.NXP.ChangeConfigResult">
            <summary>
            Result of NXP Change Config operation
            </summary>
        </member>
        <member name="P:Symbol.RFID3.NXP.ChangeConfigResult.ConfigWord">
            <summary>
            Current Config-word of the G2iL tag.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Impinj">
             <summary>
            The Impinj class comprises of the custom Access operations meant for Impinj tags.Currently the following 
            operations are supported - QTRead and QTWrite which read and write the Control Data for Impinj QT Tags.
            QT tags offer special functionalities like Private/Public memory map and read range reduction which can be enabled/disabled
            by writing the QT Control word.However,currently read range reduction is not supported in the Reader software.
             </summary>
        </member>
        <member name="M:Symbol.RFID3.Impinj.#ctor">
            <summary>
             constructor
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Impinj.QTReadWait(System.String,Symbol.RFID3.Impinj.QTReadAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            Performs QTRead operation on an Impinj QT tag.The Control Data is returned in TagData.AccessOperationResult.
            </summary>
            <param name="tagID">EPC-ID of the Tag on which the Read operation is to be performed.</param>
            <param name="qtReadAccessParams">Parameters required for the QTRead operation.Contains the tag's access Password</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
            <returns>TagData corresponding to the Tag on which the QTRead operation was performed. TagData.AccessOperationReuslt.QTControlData contains the
            status of QT Control flags- QTShortRange and QTPublicMemoryMap</returns>
        </member>
        <member name="M:Symbol.RFID3.Impinj.QTWriteWait(System.String,Symbol.RFID3.Impinj.QTWriteAccessParams,Symbol.RFID3.AntennaInfo)">
            <summary>
            Performs QTWrite operation on an Impinj QT tag.It can enable/disable public memory map and Short range modes 
            of a QT tag.However,short range mode is currently not supported.Besides,persist flag applies the above settings 
            to either volatile/non-volatile memories.
            </summary>
            <param name="tagID">EPC-ID of the Tag on which the Read operation is to be performed.</param>
            <param name="qtWriteAccessParams">Parameters required for the QTWrite operation.Contains the tag's access Password and Control flags-persist,public memory map and short range</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.Impinj.QTReadEvent(Symbol.RFID3.Impinj.QTReadAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to read QT Control data from the QT tags that match the AccessFilter
            criteria if specified. Tags will be reported as notifications if the application has 
            registered for Events.ReadNotify event. Else the Tags will be fetched using GetReadTags(s) methods.
            Completion of Access operation will be reported as Events.StatusNotify event of type
            ACCESS_STOP_EVENT.
            </summary>
            <param name="qtReadAccessParams">Parameters required for the QTRead operation.Contains AccessPassword</param>
            <param name="accessFilter">Access Filter which determines the Tags on which the 
            Access operation is to be performed. If this is null, operation will be perfomed 
            without any access filters.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="M:Symbol.RFID3.Impinj.QTWriteEvent(Symbol.RFID3.Impinj.QTWriteAccessParams,Symbol.RFID3.AccessFilter,Symbol.RFID3.AntennaInfo)">
            <summary>
            This method is used to write QT Control data on all the QT tags that match the AccessFilter
            criteria if specified.It can enable/disable public-private memory map and short range modes of QT tags.
            Additionally,these control flags may be applied on volatile/non volatile memories of the tag by setting/resetting the persist flag.
            Tags will be reported as notifications if the application has registered for Events.ReadNotify event. Else the Tags will be fetched using GetReadTags(s) methods.
            Completion of Access operation will be reported as Events.StatusNotify event of type
            ACCESS_STOP_EVENT.
            </summary>
            <param name="qtWriteAccessParams">Parameters required for the QTWrite operation.Contains the tag's access Password and Control flags-persist,public memory map and short range</param>
            <param name="accessFilter">Access Filter which determines the Tags on which the 
            Access operation is to be performed. If this is null, operation will be perfomed 
            without any access filters.</param>
            <param name="antennaInfo">Antennas on which the current operation is to be performed. If this is null, 
            operation will be performed on all Antennas.</param>
        </member>
        <member name="T:Symbol.RFID3.Impinj.QTData">
            <summary>
            Data returned from Impinj's QT tag.Consists of Control data.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Impinj.QTData.ControlData">
            <summary>
            A 16 bit Control Word returned from the QT tag.The MSB(16th bit) indicates if the tag shall reduce
            its range during operations and the next MSB(15th bit) indicates if the tag is in Public memory profile or not.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Impinj.QTWriteAccessParams">
            <summary>
            Parameters for Impinj's QTWrite Access operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Impinj.QTWriteAccessParams.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Impinj.QTWriteAccessParams.AccessPassword">
            <summary>
            64 bit Access password of the QT tag
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Impinj.QTWriteAccessParams.QTPersist">
            <summary>
            control flag to indicate whether the QTWrite command is written to
            volatile memory (for a zero value) or Non-volatile (for a non zero value)
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Impinj.QTWriteAccessParams.QTControlData">
            <summary>
             Contains two control flags - Public Memory map (bit 16-MSB)and Short range(bit 15).
            Setting the Public memory map exposes the public memory profile of th QT tag and resetting it exposes
            it's private memory profile.Setting the short range flag the  range of QT flag in subsequent operations.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.Impinj.QTReadAccessParams">
            <summary>
            Parameter for the Impinj QTRead operation
            </summary>
        </member>
        <member name="M:Symbol.RFID3.Impinj.QTReadAccessParams.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.Impinj.QTReadAccessParams.AccessPassword">
            <summary>
            Access password of the Impinj QT Tag
            </summary>
        </member>
        <member name="T:Symbol.RFID3.AccessFilter">
            <summary>
            This class represents the filter criteria for Access Operations like read, write, lock, and etc.
            </summary>
            
        </member>
        <member name="F:Symbol.RFID3.AccessFilter.TagPatternA">
            <summary>
            Pattern A to be used for comparison.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.AccessFilter.TagPatternB">
            <summary>
            Pattern B to be used for comparison.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.AccessFilter.RssiRangeFilter">
            <summary>
            RSSI Range Filter
            </summary>
        </member>
        <member name="M:Symbol.RFID3.AccessFilter.#ctor">
            <summary>
            Constructor. 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.AccessFilter.MatchPattern">
            <summary>
            Match criteria to be used for filtering using patterns A and B.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.AccessFilter.UseRSSIRangeFilter">
            <summary>
            Whether to use RSSI Range Filter or not
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TriggerInfo">
            <summary>
            Contains Trigger criterea to be used for an Inventory or Access Sequence operation/
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TriggerInfo.StartTrigger">
            <summary>
            Condition to be met to start the operation.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TriggerInfo.StopTrigger">
            <summary>
             Condition to be met to stop the operation.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TriggerInfo.TagEventReportInfo">
            <summary>
            Specifies the configuration of tag report events
            </summary>
        </member>
        <member name="F:Symbol.RFID3.TriggerInfo.ReportTriggers">
            <summary>
            Specifies the configuration of different types of reporting triggers
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TriggerInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TriggerInfo.#ctor(Symbol.RFID3.StartTrigger,Symbol.RFID3.StopTrigger,System.UInt32)">
            <summary>
            Constructor.
            </summary>
            <param name="startTrigger">Condition to be met to start the operation.</param>
            <param name="stopTrigger">Condition to be met to stop the operation.</param>
            <param name="tagReportTrigger">
            Possible Values: 0 - Tag reports will be triggered when the Stop-Criteria is met. 
            In case of periodic trigger, reports will be triggerd after every period.
            n - Report when 'n' unique tags are found
            The default settings is 1, which implies to get Tag reports immediately</param>
        </member>
        <member name="M:Symbol.RFID3.TriggerInfo.#ctor(Symbol.RFID3.StartTrigger,Symbol.RFID3.StopTrigger,Symbol.RFID3.TagEventReportInfo,System.UInt32,Symbol.RFID3.ReportTriggers)">
            <summary>
            Constructor.
            </summary>
            <param name="startTrigger">Condition to be met to start the operation.</param>
            <param name="stopTrigger">Condition to be met to stop the operation.</param>
            <param name="tagEventReportInfo">Specifies the configuration of events for the reader to report tag state changes.</param>
            <param name="tagReportTrigger">
            Possible Values: 0 - Tag reports will be triggered when the Stop-Criteria is met. 
            In case of periodic trigger, reports will be triggered first time the tag is seen and if the tag is continued to be read after the period has elapsed .
            n - Report when 'n' unique tags are found
            The default settings is 1, which implies to get Tag reports immediately</param>
            <param name="reportTrigger">Reporting triggers e.g. period based reporting of tags
            1. ReportTriggers.Period - Duration in seconds after which the tag will be reported if the tag is continued to be read after the period
            <remarks>tagReportTrigger and ReportTriggers.Period are mutually exclusive and ReportTriggers.Period have priority on tagReportTrigger</remarks>
            </param>
        </member>
        <member name="P:Symbol.RFID3.TriggerInfo.TagReportTrigger">
            <summary>
            Signifies when to get trigged on TAG_READ_EVENT.
            Possible Values: 0 - Tag reports will be triggered when the Stop-Criteria is met. 
            In case of periodic trigger, reports will be triggered after every period.
            n - Report when 'n' unique tags are found
            The default settings is 1, which implies to get Tag reports immediately
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TriggerInfo.EnableTagEventReport">
            <summary>
            Enable Tag Event Report
            </summary>
        </member>
        <member name="T:Symbol.RFID3.ReportTriggers">
            <summary>
            Periodic Trigger Information.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.ReportTriggers.Period">
            <summary>
            Value indicating the time period in seconds after which the tag will be reported if the tag is continued to be read after the period.
            The following restrictions are applicable when using a periodic report trigger on the reader.
            1. Access Operation results will not be sent as part of the periodic report trigger and the reader sends an exception event when access operations are added with reader configured for periodic reporting of tags.
            2. Stop trigger of type tagObservation 'Upon_Seeing_N_Tags_Or_Timeout' is not supported with the reader configured for periodic reporting of tags.								
            Possible Values: 0 - Tag reports will be generated at the end of inventory.
            Possible Values: n - Report tag first time it is read and then after every 'n' seconds (periodically) time interval if the tag is continued to be read.
            <remarks>tagReportTrigger - Period are mutually exclusive and Period have priority on tagReportTrigger</remarks>
            </summary>
        </member>
        <member name="T:Symbol.RFID3.StartTrigger">
            <summary>
            Start Trigger Information.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.StartTrigger.Handheld">
            <summary>
            Parameter for Handheld Trigger if TriggerType chosen is START_TRIGGER_TYPE_HANDHELD.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.StartTrigger.GPI">
            <summary>
            Parameter for GPI Trigger if TriggerType chosen is START_TRIGGER_TYPE_GPI.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.StartTrigger.Periodic">
            <summary>
            Parameter for Periodic Trigger if TriggerType chosen is START_TRIGGER_TYPE_PERIODIC.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.StartTrigger.Type">
            <summary>
            Type of Start Trigger.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.StopTrigger">
            <summary>
            Stop Trigger Information.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.StopTrigger.TagObservation">
            <summary>
            Upon seeing N tag observations, or timeout 
            if type is STOP_TRIGGER_TYPE_TAG_OBSERVATION_WITH_TIMEOUT.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.StopTrigger.NumAttempts">
            <summary>
            N attempts to see all tags in the FOV, or timeout 
            if type is STOP_TRIGGER_TYPE_N_ATTEMPTS_WITH_TIMEOUT.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.StopTrigger.GPI">
            <summary>
            GPI with a timeout value 
            if type is STOP_TRIGGER_TYPE_GPI_WITH_TIMEOUT
            </summary>
        </member>
        <member name="F:Symbol.RFID3.StopTrigger.Handheld">
            <summary>
            HandheldTrigger with a timeout value 
            if type is STOP_TRIGGER_TYPE_HANDHELD_WITH_TIMEOUT
            </summary>
        </member>
        <member name="P:Symbol.RFID3.StopTrigger.Duration">
            <summary>
            Parameter for Duration Trigger. Duration in Milli-seconds if type is STOP_TRIGGER_TYPE_DURATION.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.StopTrigger.Type">
            <summary>
            Type of Stop Trigger.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.GPITrigger">
            <summary>
            GPI-Trigger information.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.GPITrigger.PortNumber">
            <summary>
            GPI Port number on which the trigger is to be enabled.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.GPITrigger.Timeout">
            <summary>
            Trigger timeout in milliseconds. If set to zero, it indicates there is no timeout.
            Ignored for START_TRIGGER_TYPE_GPI; Valid only for STOP_TRIGGER_TYPE_GPI_WITH_TIMEOUT
            </summary>
        </member>
        <member name="P:Symbol.RFID3.GPITrigger.GPIEvent">
            <summary>
            The Boolean value that causes a GPI event to trigger.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.HandheldTrigger">
            <summary>
            Handheld-Trigger information.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.HandheldTrigger.Timeout">
            <summary>
            Trigger timeout in milliseconds. If set to zero, it indicates there is no timeout.
            Ignored for START_TRIGGER_TYPE_HANDHELD; Valid only for STOP_TRIGGER_TYPE_HANDHELD_WITH_TIMEOUT
            </summary>
        </member>
        <member name="P:Symbol.RFID3.HandheldTrigger.HandheldEvent">
            <summary>
            The HANDHELD_TRIGGER_EVENT_TYPE value that causes a Handheld event to trigger.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.PeriodicTrigger">
            <summary>
            Periodic Trigger Information.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.PeriodicTrigger.StartTime">
            <summary>
            UTC Time to start the operation.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PeriodicTrigger.Period">
            <summary>
            Non-zero value indicating the time period in milliseconds for which inventory will run.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TriggerWithTimeout">
            <summary>
            Triggers with timeout.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TriggerWithTimeout.N">
            <summary>
            Number of Tags or Number of Inventory Attempts.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TriggerWithTimeout.Timeout">
            <summary>
            Timeout for the operation.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagEventReportInfo">
            <summary>
            Specifies the configuration of events for the reader to report tag state changes
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagEventReportInfo.ReportNewTagEvent">
            <summary>
            Report criteria when a new Tag is visible.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagEventReportInfo.NewTagEventModeratedTimeoutMilliseconds">
            <summary>
            Timeout in milliseconds for moderating new tag event 
            reporting. Use this only when reportNewTagEvent is set to MODERATED.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagEventReportInfo.ReportTagInvisibleEvent">
            <summary>
            Report criteria when a Tag is invisible.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagEventReportInfo.TagInvisibleEventModeratedTimeoutMilliseconds">
            <summary>
            Timeout in milliseconds for moderating tag invisible event 
            reporting. Use this only when reportTagInvisibleEvent is set to 
            MODERATED.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagEventReportInfo.ReportTagBackToVisibilityEvent">
            <summary>
            Report criteria when a Tag is back to visibility.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagEventReportInfo.TagBackToVisibilityModeratedTimeoutMilliseconds">
            <summary>
            Timeout in milliseconds for moderating tag back to visibility event 
            reporting. Use this only when reportTagBackToVisibilityEvent is set to
            MODERATED.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.PreFilters">
            <summary>
            Filter criteria for Inventory. PreFilters will be applied before each round of Inventory.
            Access operations also invole implicit Inventory before the Access operation can be performed.
            Simple Inventory operation (i.e. without PostFilters) gets the Tags selected out of PreFilter(s) 
            Tags as a result of (implicit) Inventory Operation move in for further Access Operation.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.PreFilters.Add(Symbol.RFID3.PreFilters.PreFilter)">
            <summary>
            This method adds a PreFilter. 
            </summary>
            <param name="preFilter">PreFilter to be added. Allocate new PreFilter for each Add().</param>
        </member>
        <member name="M:Symbol.RFID3.PreFilters.Delete(Symbol.RFID3.PreFilters.PreFilter)">
            <summary>
            This method deletes an added PreFilter.
            </summary>
            <param name="preFilter">The PreFilter which was passed into Add(), and which is to be deleted.</param>
        </member>
        <member name="M:Symbol.RFID3.PreFilters.DeleteAll">
            <summary>
            Deletes all PreFilters.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.Length">
            <summary>
            Number of added PreFilters.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.Item(System.Int32)">
            <summary>
            PreFilter Indexer
            </summary>
            <param name="index"></param>
            <returns>Returns the PreFilter at given index.</returns>
        </member>
        <member name="T:Symbol.RFID3.PreFilters.PreFilter">
            <summary>
            PreFilter Information. Maps to one SELECT command of C1G2.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.PreFilters.PreFilter.StateAwareAction">
            <summary>
            Parameters for StateAware action 
            if filterAction is FILTER_ACTION_STATE_AWARE
            </summary>
        </member>
        <member name="F:Symbol.RFID3.PreFilters.PreFilter.StateUnawareAction">
            <summary>
            Parameters for StateAware action 
            if filterAction is FILTER_ACTION_STATE_UNAWARE
            </summary>
        </member>
        <member name="M:Symbol.RFID3.PreFilters.PreFilter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.PreFilter.AntennaID">
            <summary>
            Zero for all Antennas, or the Specific Antenna.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.PreFilter.FilterIndex">
            <summary>
            Index of the added PreFilter.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.PreFilter.MemoryBank">
            <summary>
            Memory Bank on which the filter is to be applied. 
            MEMORY_BANK_RESERVED is not allowed for Inventory/Pre-Filters
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.PreFilter.TagPattern">
            <summary>
            The pattern against which to compare for tag-filtering.
            The application should allocate a byte array and assign to this field. 
            The Tag Mask should be filled in the array. 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.PreFilter.TagPatternBitCount">
            <summary>
            Number of bits in TagData to be taken for comparison.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.PreFilter.BitOffset">
            <summary>
             The first (msb) bit location of the specified memory bank against 
            which to compare the TagMask.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.PreFilter.FilterAction">
            <summary>
             Filter Action for the PreFilter: State Aware, Unaware or Default.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.PreFilter.TruncateAction">
            <summary>
             Truncate Action indicates whether only a truncated portion of the tag
            is to be backscattered by the tag or not.The portion that gets 
             backscattered includes the portion of the tag ID following the mask.
            This field has to be set only in the last pre-filter.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.PreFilters.StateAwareActionParams">
            <summary>
            Parameters for StateAware action.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.StateAwareActionParams.Target">
            <summary>
            Target Parameter for PreFilter (C1G2 Select).
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.StateAwareActionParams.Action">
            <summary>
            Action Parameter for PreFilter (C1G2 Select).
            </summary>
        </member>
        <member name="T:Symbol.RFID3.PreFilters.StateUnawareAction">
            <summary>
            Parameters for StateUnaware action.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PreFilters.StateUnawareAction.Action">
            <summary>
            Action Parameter for PreFilter (C1G2 Select).
            </summary>
        </member>
        <member name="T:Symbol.RFID3.PostFilter">
            <summary>
            PostFilter Information. 
            PostFilters are applied on Inventoried Tags. Each Tag will be checked if it
            matches both pattern A and pattern B, as per the 
            "MatchPattern" condition.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.PostFilter.TagPatternA">
            <summary>
            Pattern A to be used for comparison.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.PostFilter.TagPatternB">
            <summary>
            Pattern B to be used for comparison.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.PostFilter.RssiRangeFilter">
            <summary>
            RSSI Range Filter
            </summary>
        </member>
        <member name="M:Symbol.RFID3.PostFilter.#ctor">
            <summary>
            Constructor. 
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PostFilter.MatchPattern">
            <summary>
            Match criteria to be used for filtering using patterns A and B.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.PostFilter.UseRSSIRangeFilter">
            <summary>
            Whether to use RSSI Range Filter or not
            </summary>
        </member>
        <member name="T:Symbol.RFID3.MATCH_PATTERN">
            <summary>
            Match Criteria for patterns
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MATCH_PATTERN.A_AND_B">
            <summary>
            Filter tags that match both patterns A and B.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MATCH_PATTERN.NOTA_AND_B">
            <summary>
            Filter tags that do not match pattern A and matche pattern B.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MATCH_PATTERN.NOTA_AND_NOTB">
            <summary>
            Filter tags that match neither patterns A nor B
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MATCH_PATTERN.A_AND_NOTB">
            <summary>
            Filter tags that do not match pattern B and matche pattern A.
            </summary>
        </member>
        <member name="F:Symbol.RFID3.MATCH_PATTERN.A">
            <summary>
            Filter tags that match Pattern A; Pattern B is not set.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.TagPatternBase">
            <summary>
            Tag Pattern Information for Filtering.
            If bit i in the mask (TagMask) is zero, then bit i of the target 
            tag (MemoryBankData)  is a don’t care (X); if bit i in the mask is one, 
            then bit i of the target tag is bit i of the tag pattern. 
            For example, “all tags” is specified using a mask length of zero.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.TagPatternBase.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagPatternBase.MemoryBank">
            <summary>
            Memory Bank to be considered for filtering.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagPatternBase.TagPattern">
            <summary>
            Memory Bank Data which is to be used for comparison.
            The application should allocate a byte array and assign to this field. 
            The Memory Bank Data to be used for comparison should be filled in the array.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagPatternBase.TagPatternBitCount">
            <summary>
            Number of bits in TagData to be taken for comparison.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagPatternBase.TagMask">
            <summary>
            Bit Pattern to be matched. 
            The application should allocate a byte array and assign it to this field. 
            The Tag Mask to be used for bit-wise comparison should be filled in the array.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagPatternBase.TagMaskBitCount">
            <summary>
            Number of bits in TagMask to be taken for comparison.
            </summary>
        </member>
        <member name="P:Symbol.RFID3.TagPatternBase.BitOffset">
            <summary>
            The address of the first (msb) bit against which to apply the 
            Tag Mask and compare with the value.
            </summary>
        </member>
        <member name="T:Symbol.RFID3.RssiRangeFilter">
            <summary>
            RSSI Range Filter is used to configure filter settings on the reader to filter tags based 
            on the received signal strength of the tag.
            </summary>
        </member>
        <member name="M:Symbol.RFID3.RssiRangeFilter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RssiRangeFilter.PeakRSSILowerLimit">
            <summary>
            Peak RSSI Lower Limit
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RssiRangeFilter.PeakRSSIUpperLimit">
            <summary>
            Peak RSSI Upper Limit
            </summary>
        </member>
        <member name="P:Symbol.RFID3.RssiRangeFilter.MatchRange">
            <summary>
            Match Range
            </summary>
        </member>
    </members>
</doc>
